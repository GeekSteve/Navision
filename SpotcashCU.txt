OBJECT Codeunit 50001 SpotCash
{
  OBJECT-PROPERTIES
  {
    Date=06/07/19;
    Time=12:53:37 PM;
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Member@1000 : Record 18;
      Account@1001 : Record 23;
      SPotcashMembers@1002 : Record 50111;
      LoanBalance@1082 : Decimal;
      AvailableBalance@1081 : Decimal;
      UnClearedBalance@1080 : Decimal;
      LoanSecurity@1079 : Decimal;
      LoanGuaranteed@1078 : Decimal;
      DefaultBatch@1077 : Record 232;
      GLPosting@1076 : Codeunit 12;
      window@1075 : Dialog;
      TellerSetup@1074 : Record 50063;
      TransactionCoinage@1073 : Record 50049;
      Members@1072 : Record 23;
      TransactionTypes@1071 : Record 50045;
      TransactionCharges@1070 : Record 50061;
      TCharges@1069 : Decimal;
      LineNo@1068 : Integer;
      GenLedgerSetup@1066 : Record 98;
      MinAccBal@1065 : Decimal;
      FeeBelowMinBal@1064 : Decimal;
      AccountNo@1063 : Code[30];
      AccountOpening@1062 : Record 50071;
      NewAccount@1061 : Boolean;
      TreasuryTellerSetup@1060 : Record 50058;
      CurrentTellerAmount@1059 : Decimal;
      TellerTill@1058 : Record 270;
      TellerTiedTill@1057 : Record 50063;
      IntervalPenalty@1056 : Decimal;
      StandingOrders@1055 : Record 50070;
      TiedTransactionsSTO@1054 : Record 50075;
      AccountAmount@1053 : Decimal;
      STODeduction@1052 : Decimal;
      Charges@1051 : Record 50060;
      "Total Deductions"@1050 : Decimal;
      STODeductedAmount@1049 : Decimal;
      STORegister@1048 : Record 50079;
      AccountNoticeTypes@1047 : Record 50065;
      NoticeAmount@1046 : Decimal;
      TransactionLimits@1045 : Record 50044;
      AccountNotices@1044 : Record 50066;
      Cust@1043 : Record 18;
      AccountHolders@1042 : Record 23;
      ChargesOnFD@1041 : Decimal;
      LoanGuarantor@1040 : Record 50084;
      LoanApp@1039 : Record 50004;
      TotalGuaranted@1038 : Decimal;
      VarAmtHolder@1037 : Decimal;
      chqtransactions@1036 : Record 50048;
      TotalUnprocessed@1035 : Decimal;
      CustAcc@1034 : Record 18;
      AmtAfterWithdrawal@1033 : Decimal;
      TransactionsRec@1032 : Record 50048;
      LoansOffset@1031 : Record 50094;
      LoansTotal@1030 : Decimal;
      Interest@1029 : Decimal;
      LoanAppForm@1028 : Record 50004;
      LoanTypes@1027 : Record 50002;
      InterestRate@1026 : Decimal;
      OBal@1025 : Decimal;
      Principal@1024 : Decimal;
      GeneralSetup@1023 : Record 50011;
      ATMTrans@1022 : Decimal;
      ATMBalance@1021 : Decimal;
      CoinageBalances@1020 : Record 50100;
      TotalBal@1019 : Decimal;
      DenominationsRec@1018 : Record 50047;
      CoinageAdjDetails@1017 : Record 50049;
      FOSAL@1016 : Record 50004;
      OUTSTBal@1015 : Decimal;
      Advances@1014 : Record 50004;
      IsOfficeAddin@1013 : Boolean;
      BookBalance@1012 : Decimal;
      GLSETUP@1011 : Record 98;
      AccountLedger@1010 : Record 25;
      iterate@1009 : Integer;
      ATMEntries@1008 : Record 50107;
      ATMS@1007 : Record 50106;
      ATMEntries2@1006 : Record 50107;
      GenJournalLine2@1005 : Record 81;
      GenJournalLine@1004 : Record 81;
      MAccounts@1003 : Record 23;
      SPotcashWithdrawalCharge@1083 : Decimal;
      scharges@1084 : Record 50060;
      ATMRegister@1085 : Record 50106;
      MemberAcc@1086 : Record 23;
      SpotCashEntries@1087 : Record 50109;
      Bal@1088 : Decimal;
      SCaccounts@1090 : Record 23;
      VendorLedgerEntry@1091 : Record 25;
      GenJournalLine5@1092 : Record 81;
      GenJournalLine1@1093 : Record 81;
      balanc@1094 : Decimal;
      Trancharges@1095 : Decimal;
      ELoan@1096 : Codeunit 50014;
      LoanProductTypes@1097 : Record 50002;
      Vendor@1098 : Record 23;
      AccountTypes2@1099 : Record 50046;
      AccountTypes@1067 : Record 50046;
      NWDs@1100 : Decimal;
      SMSNotificationRegistration@1101 : Record 50264;
      Vendor2@1102 : Record 23;
      Bal1@1103 : Decimal;
      Bal2@1104 : Decimal;
      Bal3@1105 : Decimal;
      Fromdate@1106 : Date;
      Todate@1107 : Date;
      TeaPayouts@1108 : Record 50116;
      Bal4@1109 : Decimal;
      RemainingAmount@1110 : Decimal;
      LoanApplications@1111 : Record 50004;
      Inte@1112 : Decimal;
      Gnljnline@1113 : Record 81;
      Gnljnline5@1114 : Record 81;
      ActualInterest@1115 : Decimal;
      Gnljnline2@1116 : Record 81;
      VendorLedgerEntry2@1117 : Record 25;
      GLEntry@1118 : Record 17;
      GLEntry2@1120 : Record 17;
      Months@1119 : Integer;
      SalaryHeader@1121 : Record 50123;
      SalaryLines@1122 : Record 50124;
      Netsalary@1123 : Decimal;
      Dimensioncode@1124 : Code[30];
      Amt2@1125 : Decimal;
      Amt@1089 : Decimal;
      STAmounts@1126 : Decimal;
      Loanrepayment@1127 : Decimal;
      GetLoanBals@1128 : Codeunit 50009;
      PrincipalDue@1129 : Decimal;
      IntrestDue@1130 : Decimal;
      Gnljnline3@1131 : Record 81;
      AccountsReversalExcempt@1132 : Record 50208;
      MemberLoanRepaymentSchedule@1133 : Record 50008;
      SDate@1134 : Date;
      LoanApplicationCard@1135 : Page 50072;
      MemberLoanRepaymentSchedule2@1136 : Record 50008;
      datediff@1137 : Integer;
      finalnet@1138 : Decimal;
      apploanproduct@1139 : Code[50];
      orequest@1140 : Code[20];
      Employee@1141 : Record 5200;
      LoanApplicationsProcess@1142 : Record 50004;
      CustomerBD@1143 : Record 18;
      howlongnoofdays@1144 : Integer;
      LoanProductTypesBD@1145 : Record 50002;
      CustomerBDBD@1146 : Record 18;
      SpotcashDepositsBuffer@1147 : Record 52048;
      AccountTypesBDBD@1148 : Record 50046;
      LoanProductTypesBDBD@1149 : Record 50002;
      VendorBDBD@1150 : Record 23;
      SpotcashDepositsBuffer2@1151 : Record 52048;
      PostSalary@1160 : Codeunit 50012;
      Acctype@1159 : 'G/L Account,Customer,Vendor,Bank Account,Fixed Asset,IC Partner';
      BalAccType@1158 : 'G/L Account,Customer,Vendor,Bank Account,Fixed Asset,IC Partner';
      TransactionType2@1157 : ' ,Investment,Loan,Repayment,Withdrawal,Interest Due,Interest Paid,Deposit Contribution,Welfare Contribution,Registration Fee,Administration Fee,Appraisal,Dividend,Withholding Tax,Shares Contributions,Welfare Contribution 2,Loan Adjustment,Fixed Deposit Interest,Ledger Fees,ATM VISA,ATM POS,ATM';
      branch@1156 : Code[20];
      Customer@1155 : Record 18;
      UserSetup2@1154 : Record 91;
      Docno@1153 : Code[20];
      Amounttotransact@1152 : Decimal;
      IntDue@1162 : Decimal;
      InsuranceDue@1161 : Decimal;
      RebatesDistributions@1163 : Page 52260;
      VendorBDBDBD@1164 : Record 23;
      TempPhoneNo@1165 : Code[20];
      FinalPhone@1166 : Code[20];
      SpotCashRegistration@1167 : Record 50111;
      FOSASetup@1168 : Record 50050;
      TempMemberNo@1169 : Code[20];
      NoSeriesManagement@1170 : Codeunit 396;
      MemberNo@1171 : Code[20];
      FullName@1172 : Text;
      Ok@1173 : Boolean;
      TempAcc@1174 : Code[20];
      SavingsAcc@1175 : Code[20];
      ReqID@1176 : Code[20];
      DimensionValueBD@1177 : Record 349;
      MemberApplications@1178 : Record 50117;
      WithdrawalAmount@1179 : Decimal;
      EnquieryAmount@1180 : Decimal;
      AirtimeAmount@1181 : Decimal;
      Bankzetu@1182 : Record 270;
      BankAccountLedgerEntry@1183 : Record 271;
      VendorBalanceEquiery@1184 : Record 23;
      AccountTypesEnquiery@1185 : Record 50046;
      CustomerCheckID@1186 : Record 18;
      AccountTypesBDBDBDBD@1187 : Record 50046;
      LoanProductTypesBDBDBDBD@1188 : Record 50002;
      DepositCodeBD@1189 : Code[20];
      LoanOwner@1190 : Code[20];
      LoanAccountTypes@1191 : Record 50046;
      VendorLoans@1192 : Record 23;
      LoanString@1193 : Text;
      request_id2@1194 : Code[20];
      bdmessage@1195 : Text;
      nonmembervendor@1196 : Code[20];
      SalaryLines2@1197 : Record 50124;
      SalaryHeader2@1198 : Record 50123;
      thisloanee@1199 : Code[20];
      nooftimes@1200 : Integer;
      loanamount@1202 : Decimal;
      eloanwhitelist@1201 : Record 74025;
      SendSmsAlert@1203 : Codeunit 50004;

    PROCEDURE Spotcash@1(VAR request_id@1000 : Code[20];VAR phone_no@1001 : Code[50];VAR transaction_type@1002 : Integer;VAR amount@1003 : Text;VAR charges@1004 : Text;VAR "account _number"@1006 : Code[50];VAR cr_account@1007 : Code[50];VAR status@1009 : Text[50];VAR f_key@1010 : Code[50];VAR balance@1011 : Text;VAR message@1012 : Text[500];VAR response@1005 : Text[50];VAR "response message"@1008 : Text[250]);
    VAR
      ReversalEntry@1017 : Record 179;
      currentnum@1016 : Integer;
      transactions@1015 : ARRAY [1000] OF Integer;
      found@1014 : Boolean;
      j@1013 : Integer;
      Transactions2@1018 : Record 50048;
      VendorIA@1032 : Record 23;
      TotalDeducted@1031 : Decimal;
      DocNo@1030 : Code[20];
      AccountTypes@1029 : Record 50046;
      Vendor@1028 : Record 23;
      Customer2@1027 : Record 18;
      AmountToFOSA@1026 : Decimal;
      AccountTypesSavings@1025 : Record 50046;
      VendorSavings@1024 : Record 23;
      SpotCashEntries@1023 : Record 50109;
      SpotCashRegistration@1022 : Record 50111;
      FromAccount@1021 : Code[20];
      VendorTo@1020 : Record 23;
      VendorFrom@1019 : Record 23;
      ToAccount@1033 : Code[20];
      AmountIA@1034 : Decimal;
      Amounttotransact@1035 : Decimal;
    BEGIN
      //ERROR('..');
      //Get Account

      IF "account _number"='' THEN BEGIN
          SPotcashMembers.RESET;
          SPotcashMembers.SETRANGE("Phone No",phone_no);
          IF SPotcashMembers.FINDSET THEN BEGIN
             "account _number":=SPotcashMembers."Account No";
             cr_account:=SPotcashMembers."Account No";
          END;
      END;




      SPotcashMembers.RESET;
      SPotcashMembers.SETRANGE("Member Code","account _number");
      IF SPotcashMembers.FINDSET THEN BEGIN
         "account _number":=SPotcashMembers."Account No";
         Vendor.GET("account _number");
         IF Vendor.Status<>Vendor.Status::Active THEN BEGIN
            Vendor.Status:=Vendor.Status::Active;
            Vendor.MODIFY;
            COMMIT;
         END;
         IF Vendor.Blocked=Vendor.Blocked::All THEN BEGIN
            Vendor.Blocked:=Vendor.Blocked::" ";
            Vendor.MODIFY;
            COMMIT;
         END;
      END;

      IF transaction_type=5 THEN BEGIN
         IF (cr_account='') AND ("account _number"<>'') THEN BEGIN
             cr_account:="account _number";
         END;
      END;
      IF transaction_type=10 THEN BEGIN
         IF (cr_account='') AND ("account _number"<>'') THEN BEGIN
             cr_account:="account _number";
         END;
      END;
      IF transaction_type=1 THEN BEGIN
         IF (cr_account='') AND ("account _number"<>'') THEN BEGIN
             cr_account:="account _number";
         END;
         IF "account _number"='' THEN BEGIN
                SPotcashMembers.RESET;
                SPotcashMembers.SETRANGE("Phone No",phone_no);
                IF SPotcashMembers.FINDSET THEN BEGIN
                   cr_account:=SPotcashMembers."Account No";
                   "account _number":=SPotcashMembers."Account No";
                END;
         END;
      END;
      IF transaction_type=8 THEN BEGIN
         IF (cr_account='') AND ("account _number"<>'') THEN BEGIN
             cr_account:="account _number";
         END;
         IF "account _number"='' THEN BEGIN
                SPotcashMembers.RESET;
                SPotcashMembers.SETRANGE("Phone No",phone_no);
                IF SPotcashMembers.FINDSET THEN BEGIN
                   cr_account:=SPotcashMembers."Account No";
                   "account _number":=SPotcashMembers."Account No";
                END;
         END;
      END;
      IF transaction_type=12 THEN BEGIN
         IF (cr_account='') AND ("account _number"<>'') THEN BEGIN
             cr_account:="account _number";
         END;
         IF "account _number"='' THEN BEGIN
                SPotcashMembers.RESET;
                SPotcashMembers.SETRANGE("Phone No",phone_no);
                IF SPotcashMembers.FINDSET THEN BEGIN
                   cr_account:=SPotcashMembers."Account No";
                   "account _number":=SPotcashMembers."Account No";
                END;
         END;
      END;
      IF transaction_type=109 THEN BEGIN
         IF (cr_account='') AND ("account _number"<>'') THEN BEGIN
             cr_account:="account _number";
         END;
         IF "account _number"='' THEN BEGIN
                AccountTypes.RESET;
                AccountTypes.SETRANGE("Share Capital",TRUE);
                AccountTypes.FINDSET;
                SPotcashMembers.RESET;
                SPotcashMembers.SETRANGE("Phone No",phone_no);
                IF SPotcashMembers.FINDSET THEN BEGIN
                   Vendor.RESET;
                   Vendor.SETRANGE("Owner Member No",SPotcashMembers."Member Code");
                   Vendor.SETRANGE("Account Type",AccountTypes.Code);
                   Vendor.FINDSET;
                   cr_account:=Vendor."No.";
                   "account _number":=Vendor."No.";
                END;
         END;
      END;
      IF transaction_type=209 THEN BEGIN
         IF (cr_account='') AND ("account _number"<>'') THEN BEGIN
             cr_account:="account _number";
         END;
         IF "account _number"='' THEN BEGIN
                AccountTypes.RESET;
                AccountTypes.SETRANGE("NWD Account",TRUE);
                AccountTypes.FINDSET;
                SPotcashMembers.RESET;
                SPotcashMembers.SETRANGE("Phone No",phone_no);
                IF SPotcashMembers.FINDSET THEN BEGIN
                   Vendor.RESET;
                   Vendor.SETRANGE("Owner Member No",SPotcashMembers."Member Code");
                   Vendor.SETRANGE("Account Type",AccountTypes.Code);
                   Vendor.FINDSET;
                   cr_account:=Vendor."No.";
                   "account _number":=Vendor."No.";
                END;
         END;
      END;










      request_id2:=COPYSTR(request_id,1,15);
      request_id:=request_id;

      GLEntry.RESET;
      GLEntry.SETRANGE("Document No.",request_id2);//request_id);
      GLEntry.SETRANGE(Reversed,FALSE);
      IF GLEntry.FINDLAST THEN BEGIN
      response:='14';
         //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
              IF (transaction_type<>12) AND (transaction_type<>10) THEN BEGIN
                    SpotCashEntries.RESET;
                    SpotCashEntries.SETRANGE("Request ID",request_id);
                    IF SpotCashEntries.FINDLAST THEN BEGIN
                       SpotCashEntries.CALCFIELDS(Posted);
                    {
                          "response message":='Duplicate transaction: Transaction Type: '+FORMAT(SpotCashEntries."Transaction Type")+
                                               'Amount: '+FORMAT(SpotCashEntries.Amount)+
                                               'Account No: '+FORMAT(SpotCashEntries."Account No")+
                                               'Status: '+FORMAT(SpotCashEntries.Status)+
                                               'Balance: '+FORMAT(SpotCashEntries.Balance)+
                                               'Message: '+FORMAT(SpotCashEntries.Message)+
                                               'Transaction Date: '+FORMAT(SpotCashEntries."Transaction Date")+
                                               'Transaction Time: '+FORMAT(SpotCashEntries."Transaction Time")+
                                               'MPESA Ref: '+FORMAT(SpotCashEntries."MPESA Ref");}
                                               request_id:=request_id;
                                               phone_no:=phone_no;
                                               transaction_type:=transaction_type;
                                               amount:=amount;
                                               charges:=charges;
                                               "account _number":="account _number";
                                               cr_account:=cr_account;
                                               IF SpotCashEntries.Posted THEN BEGIN
                                                 status:='Success';
                                               END;
                                               f_key:=f_key;
                                               balance:=FORMAT(SpotCashEntries.Balance);
                                               response:='00';
                                               "response message":='Transaction was a Success';


                          EXIT;
                    END;
                END;
         //+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

      END;






      //====if it is a spotcash Deposit paybill resubmit========================
      IF transaction_type=600 THEN BEGIN
         SpotcashDepositsBuffer.RESET;
         SpotcashDepositsBuffer.SETRANGE(RequestID,request_id);
         IF SpotcashDepositsBuffer.FINDLAST THEN BEGIN
                                     request_id:=request_id;
                                     phone_no:=phone_no;
                                     transaction_type:=transaction_type;
                                     amount:=amount;
                                     charges:=charges;
                                     "account _number":="account _number";
                                     cr_account:=cr_account;
                                     IF SpotCashEntries.Posted THEN BEGIN
                                       status:='Success';
                                     END;
                                     f_key:=f_key;
                                     balance:=FORMAT(SpotCashEntries.Balance);
                                     response:='00';
                                     "response message":='Sacco paybill Deposit Transaction was a Success';
                                     EXIT;
         END;
      END;
      //====end if is a spotcash Deposit paybill resubmit=======================

      //====if it is a REVERSAL resubmit========================
      IF transaction_type=100 THEN BEGIN
         SpotCashEntries.RESET;
         SpotCashEntries.SETRANGE("Request ID",request_id);
         IF SpotCashEntries.FINDLAST THEN BEGIN
                                     request_id:=request_id;
                                     phone_no:=phone_no;
                                     transaction_type:=transaction_type;
                                     amount:=amount;
                                     charges:=charges;
                                     "account _number":="account _number";
                                     cr_account:=cr_account;
                                     IF SpotCashEntries.Posted THEN BEGIN
                                       status:='Success';
                                     END;
                                     f_key:=f_key;
                                     balance:=FORMAT(SpotCashEntries.Balance);
                                     response:='00';
                                     "response message":='Reversal was Previously a Success';
                                     EXIT;
         END;
      END;
      //====end if is a REVERSAL resubmit=======================


      //====if it is a Ministatement resubmit========================
      IF transaction_type=12 THEN BEGIN
         SpotCashEntries.RESET;
         SpotCashEntries.SETRANGE("Request ID",request_id);
         IF SpotCashEntries.FINDLAST THEN BEGIN
                                     request_id:=request_id;
                                     phone_no:=phone_no;
                                     transaction_type:=transaction_type;
                                     amount:=amount;
                                     charges:=charges;
                                     "account _number":="account _number";
                                     cr_account:=cr_account;
                                     IF SpotCashEntries.Posted THEN BEGIN
                                       status:='Success';
                                     END;
                                     f_key:=f_key;
                                     balance:=FORMAT(SpotCashEntries.Balance);
                                     response:='00';
                                     message:=SpotCashEntries.Message;
                                     "response message":='Transaction was a success';
                                     EXIT;
         END;
      END;
      //====end if is a Ministatement resubmit=======================

      //====if it is a LOAN BAL resubmit========================
      IF transaction_type=10 THEN BEGIN
         SpotCashEntries.RESET;
         SpotCashEntries.SETRANGE("Request ID",request_id);
         SpotCashEntries.SETFILTER(Message,'<>%1','');
         IF SpotCashEntries.FINDSET THEN BEGIN
                                     //ERROR('...');
                                     request_id:=request_id;
                                     phone_no:=phone_no;
                                     transaction_type:=transaction_type;
                                     amount:=amount;
                                     charges:=charges;
                                     "account _number":="account _number";
                                     cr_account:=cr_account;
                                     IF SpotCashEntries.Posted THEN BEGIN
                                       status:='Success';
                                     END;
                                     f_key:=f_key;
                                     balance:=FORMAT(SpotCashEntries.Balance);
                                     response:='00';
                                     message:=SpotCashEntries.Message;
                                     "response message":='Transaction was a success';
                                     EXIT;
         END;
      END;
      //====end if is a LOAN BAL resubmit=======================


      //====if it is a ELOAN resubmit========================
      //ERROR('The code here was inconsistent..');
      SPotcashMembers.RESET;
                SPotcashMembers.SETRANGE("Phone No",phone_no);
                IF NOT SPotcashMembers.FIND('-') THEN BEGIN
                  response:='10';
                  "response message":='phone Number not linked';
                          EXIT;
                END;
      //====end if is a ELOAN resubmit=======================


      //Brian K
      //If it is being Resubmitted Clear Previous Entry========= & not in Ledgers
      SpotCashEntries.RESET;
      SpotCashEntries.SETRANGE("Request ID",request_id);
      IF SpotCashEntries.FIND('-') THEN BEGIN
        SpotCashEntries.DELETE;
        COMMIT;
      END;
      //End If it is being Resubmitted Clear Previous Entry=== & not in Ledgers


      IF cr_account='' THEN BEGIN
                SPotcashMembers.RESET;
                SPotcashMembers.SETRANGE("Phone No",phone_no);
                IF NOT SPotcashMembers.FIND('-') THEN BEGIN
                  response:='10';
                  "response message":='phone Number not linked';
                          EXIT;
                END;
                  {IF SPotcashMembers."SpotCash Status"<>SPotcashMembers.Status:: THEN BEGIN
                  response:='10';
                    "response message":='Member not Approved';
                            EXIT;
                  END;}
      END;


















      //Deposits to Accounts===============================For Members Unregistered=========================

       IF transaction_type=600 THEN BEGIN
         // ERROR('..1');
         nonmembervendor:='';
          SpotcashDepositsBuffer.INIT;
          SpotcashDepositsBuffer.RequestID:=request_id;
          SpotcashDepositsBuffer.Date:=TODAY;
          SpotcashDepositsBuffer.Time:=TIME;
          SpotcashDepositsBuffer."Transacted By":="account _number";
          SpotcashDepositsBuffer."Deposit Code":=cr_account;
          SpotcashDepositsBuffer."Phone No":=phone_no;
          EVALUATE(SpotcashDepositsBuffer.Amount,amount);
          SpotcashDepositsBuffer."Transacted By ID":=COPYSTR(cr_account,1,8);
          SpotcashDepositsBuffer."Deposit to Code":=COPYSTR(cr_account,9);

          //IF ID is less than 8 Characters try less than 8 ie 7,6,5-----------------
          CustomerCheckID.RESET;
          CustomerCheckID.SETRANGE("Identification No.",SpotcashDepositsBuffer."Transacted By ID");
          IF NOT CustomerCheckID.FINDSET THEN BEGIN
              SpotcashDepositsBuffer."Transacted By ID":=COPYSTR(cr_account,1,7);
              SpotcashDepositsBuffer."Deposit to Code":=COPYSTR(cr_account,8);
          END;

          CustomerCheckID.RESET;
          CustomerCheckID.SETRANGE("Identification No.",SpotcashDepositsBuffer."Transacted By ID");
          IF NOT CustomerCheckID.FINDSET THEN BEGIN
              SpotcashDepositsBuffer."Transacted By ID":=COPYSTR(cr_account,1,6);
              SpotcashDepositsBuffer."Deposit to Code":=COPYSTR(cr_account,7);
          END;

          CustomerCheckID.SETRANGE("Identification No.",SpotcashDepositsBuffer."Transacted By ID");
          IF NOT CustomerCheckID.FINDSET THEN BEGIN
              SpotcashDepositsBuffer."Transacted By ID":=COPYSTR(cr_account,1,5);
              SpotcashDepositsBuffer."Deposit to Code":=COPYSTR(cr_account,6);
          END;

          CustomerCheckID.RESET;
          CustomerCheckID.SETRANGE("Identification No.",SpotcashDepositsBuffer."Transacted By ID");
          IF NOT CustomerCheckID.FINDSET THEN BEGIN
              SpotcashDepositsBuffer."Transacted By ID":=COPYSTR(cr_account,1,9);
              SpotcashDepositsBuffer."Deposit to Code":=COPYSTR(cr_account,10);
          END;

          CustomerCheckID.RESET;
          CustomerCheckID.SETRANGE("Identification No.",SpotcashDepositsBuffer."Transacted By ID");
          IF NOT CustomerCheckID.FINDSET THEN BEGIN
              SpotcashDepositsBuffer."Transacted By ID":=COPYSTR(cr_account,1,10);
              SpotcashDepositsBuffer."Deposit to Code":=COPYSTR(cr_account,11);
          END;

          CustomerCheckID.RESET;
          CustomerCheckID.SETRANGE("Identification No.",SpotcashDepositsBuffer."Transacted By ID");
          IF NOT CustomerCheckID.FINDSET THEN BEGIN
              SpotcashDepositsBuffer."Transacted By ID":=COPYSTR(cr_account,1,11);
              SpotcashDepositsBuffer."Deposit to Code":=COPYSTR(cr_account,12);
          END;

          CustomerCheckID.RESET;
          CustomerCheckID.SETRANGE("Identification No.",SpotcashDepositsBuffer."Transacted By ID");
          IF NOT CustomerCheckID.FINDSET THEN BEGIN
              SpotcashDepositsBuffer."Transacted By ID":=COPYSTR(cr_account,1,12);
              SpotcashDepositsBuffer."Deposit to Code":=COPYSTR(cr_account,13);
          END;
          CustomerCheckID.RESET;
          CustomerCheckID.SETRANGE("Identification No.",SpotcashDepositsBuffer."Transacted By ID");
          IF NOT CustomerCheckID.FINDSET THEN BEGIN
              SpotcashDepositsBuffer."Transacted By ID":=COPYSTR(cr_account,1,13);
              SpotcashDepositsBuffer."Deposit to Code":=COPYSTR(cr_account,14);
          END;
          CustomerCheckID.RESET;
          CustomerCheckID.SETRANGE("Identification No.",SpotcashDepositsBuffer."Transacted By ID");
          IF NOT CustomerCheckID.FINDSET THEN BEGIN
              SpotcashDepositsBuffer."Transacted By ID":=COPYSTR(cr_account,1,14);
              SpotcashDepositsBuffer."Deposit to Code":=COPYSTR(cr_account,15);
          END;
          CustomerCheckID.RESET;
          CustomerCheckID.SETRANGE("Identification No.",SpotcashDepositsBuffer."Transacted By ID");
          IF NOT CustomerCheckID.FINDSET THEN BEGIN
              SpotcashDepositsBuffer."Transacted By ID":=COPYSTR(cr_account,1,15);
              SpotcashDepositsBuffer."Deposit to Code":=COPYSTR(cr_account,16);
          END;
          CustomerCheckID.RESET;
          CustomerCheckID.SETRANGE("Identification No.",SpotcashDepositsBuffer."Transacted By ID");
          IF NOT CustomerCheckID.FINDSET THEN BEGIN
              SpotcashDepositsBuffer."Transacted By ID":=COPYSTR(cr_account,1,16);
              SpotcashDepositsBuffer."Deposit to Code":=COPYSTR(cr_account,17);
          END;
          CustomerCheckID.RESET;
          CustomerCheckID.SETRANGE("Identification No.",SpotcashDepositsBuffer."Transacted By ID");
          IF NOT CustomerCheckID.FINDSET THEN BEGIN
              SpotcashDepositsBuffer."Transacted By ID":=COPYSTR(cr_account,1,17);
              SpotcashDepositsBuffer."Deposit to Code":=COPYSTR(cr_account,18);
          END;
          CustomerCheckID.RESET;
          CustomerCheckID.SETRANGE("Identification No.",SpotcashDepositsBuffer."Transacted By ID");
          IF NOT CustomerCheckID.FINDSET THEN BEGIN
              SpotcashDepositsBuffer."Transacted By ID":=COPYSTR(cr_account,1,18);
              SpotcashDepositsBuffer."Deposit to Code":=COPYSTR(cr_account,19);
          END;
          CustomerCheckID.RESET;
          CustomerCheckID.SETRANGE("Identification No.",SpotcashDepositsBuffer."Transacted By ID");
          IF NOT CustomerCheckID.FINDSET THEN BEGIN
              SpotcashDepositsBuffer."Transacted By ID":=COPYSTR(cr_account,1,19);
              SpotcashDepositsBuffer."Deposit to Code":=COPYSTR(cr_account,20);
          END;
          CustomerCheckID.RESET;
          CustomerCheckID.SETRANGE("Identification No.",SpotcashDepositsBuffer."Transacted By ID");
          IF NOT CustomerCheckID.FINDSET THEN BEGIN
              SpotcashDepositsBuffer."Transacted By ID":=COPYSTR(cr_account,1,20);
              SpotcashDepositsBuffer."Deposit to Code":=COPYSTR(cr_account,21);
          END;
          //end IF ID is less than 8 Characters try less than 8 ie 7,6,5-----------------


          //If Paybill Code is not put -or is wrong then put money in FOSA Account=========================
           DepositCodeBD:='';
           AccountTypesBDBDBDBD.RESET;
           AccountTypesBDBDBDBD.SETRANGE("Paybill Short Codes",SpotcashDepositsBuffer."Deposit to Code");
           IF AccountTypesBDBDBDBD.FINDSET THEN BEGIN
              DepositCodeBD:=AccountTypesBDBDBDBD."Paybill Short Codes";
           END;
           IF DepositCodeBD='' THEN BEGIN
              LoanProductTypesBDBDBDBD.RESET;
              LoanProductTypesBDBDBDBD.SETRANGE("Paybill Short Codes",SpotcashDepositsBuffer."Deposit to Code");
              IF LoanProductTypesBDBDBDBD.FINDSET THEN BEGIN
                 DepositCodeBD:=LoanProductTypesBDBDBDBD."Paybill Short Codes";
              END;
           END;
           IF DepositCodeBD='' THEN BEGIN
                 AccountTypesBDBDBDBD.RESET;
                 AccountTypesBDBDBDBD.SETRANGE("Savings Account",TRUE);
                 IF AccountTypesBDBDBDBD.FINDSET THEN BEGIN
                    DepositCodeBD:=AccountTypesBDBDBDBD."Paybill Short Codes";
                    SpotcashDepositsBuffer."Deposit to Code":=DepositCodeBD;
                 END;
           END;
          //End If Paybill Code is not put -or is wrong then put money in FOSA Account=========================

          //ERROR('ID: %1\Deposit Code: %2',SpotcashDepositsBuffer."Transacted By ID",
          //                                SpotcashDepositsBuffer."Deposit to Code");

          CustomerBDBD.RESET;
          CustomerBDBD.SETRANGE("Identification No.",SpotcashDepositsBuffer."Transacted By ID");
          IF CustomerBDBD.FINDSET THEN BEGIN
                     SpotcashDepositsBuffer."Destination owner":=CustomerBDBD."No.";
                     SpotcashDepositsBuffer."Destination Account Name":=CustomerBDBD.Name;
                     AccountTypesBDBD.RESET;
                     AccountTypesBDBD.SETRANGE("Paybill Short Codes",SpotcashDepositsBuffer."Deposit to Code");
                     IF AccountTypesBDBD.FINDSET THEN BEGIN
                         SpotcashDepositsBuffer."Destination Account Type":=AccountTypesBDBD.Code;
                         SpotcashDepositsBuffer."Destination Account Name":=AccountTypesBDBD.Description;
                     END
                     ELSE BEGIN
                         LoanProductTypesBDBD.RESET;
                         LoanProductTypesBDBD.SETRANGE("Paybill Short Codes",SpotcashDepositsBuffer."Deposit to Code");
                         IF LoanProductTypesBDBD.FINDSET THEN BEGIN
                            SpotcashDepositsBuffer."Destination Account Type":=LoanProductTypesBDBD.Code;
                            SpotcashDepositsBuffer.Loan:=TRUE;
                            SpotcashDepositsBuffer."Destination Account Name":=LoanProductTypesBDBD.Description;
                         END;
                     END;
                     VendorBDBD.RESET;
                     VendorBDBD.SETRANGE("Owner Member No",CustomerBDBD."No.");
                     VendorBDBD.SETRANGE("Vendor Posting Group",SpotcashDepositsBuffer."Destination Account Type");
                     VendorBDBD.SETRANGE(Status,VendorBDBD.Status::Active);
                     IF VendorBDBD.FINDSET THEN BEGIN
                         SpotcashDepositsBuffer."Destination Account No":=VendorBDBD."No.";
                         SpotcashDepositsBuffer.Posted:=FALSE;
                     END;

          END;
                     SpotcashDepositsBuffer.INSERT;
                     COMMIT;

                     //Now Actual Posting From that Account+++++++++++++++++++++++++++++++++++++++++++++++++++++

                     SpotcashDepositsBuffer2.RESET;
                     SpotcashDepositsBuffer2.SETRANGE(RequestID,request_id);
                     SpotcashDepositsBuffer2.SETFILTER("Destination Account No",'<>%1','');
                     IF SpotcashDepositsBuffer2.FINDSET THEN BEGIN
                            IF SpotcashDepositsBuffer2.Loan=FALSE THEN BEGIN
                                  //Cr Account
                                  //Dr Spotcash Control(For Paybill)
                                    PostSalary.ClearLines;
                                    GeneralSetup.RESET;
                                    GeneralSetup.GET;
                                    Acctype:=Acctype::Vendor;
                                    BalAccType:=BalAccType::Vendor;
                                    TransactionType2:=TransactionType2::"Deposit Contribution";
                                    DocNo:=request_id;
                                    PostSalary.GetDocNo(DocNo);
                                    Customer.GET(SpotcashDepositsBuffer2."Destination owner");
                                    branch:=Customer."Global Dimension 1 Code";
                                    PostSalary.CreateJnlLine33(BalAccType,SpotcashDepositsBuffer2."Destination Account No",BalAccType,
                                                        SpotcashDepositsBuffer2."Destination Account No", COPYSTR('Spotcash Paybill Deposit by:'+phone_no,1,40),
                                                        SpotcashDepositsBuffer2.Amount,TransactionType2,branch,0,SpotcashDepositsBuffer2."Destination owner");

                                    Acctype:=Acctype::"Bank Account";
                                    BalAccType:=BalAccType::"Bank Account";
                                    Bankzetu.RESET;
                                    Bankzetu.SETRANGE("Sacco Paybill Account",TRUE);
                                    Bankzetu.FINDSET;
                                    TransactionType2:=TransactionType2::"Deposit Contribution";
                                    PostSalary.CreateJnlLine33(BalAccType,Bankzetu."No.",BalAccType,
                                                        Bankzetu."No.", COPYSTR('Spotcash Paybill Deposit by:'+phone_no,1,40),
                                                        -SpotcashDepositsBuffer2.Amount,TransactionType2,branch,0,SpotcashDepositsBuffer2."Destination owner");
                                    PostSalary.PostLines;
                                    COMMIT;
                                    VendorBDBDBD.RESET;
                                    VendorBDBDBD.GET(SpotcashDepositsBuffer2."Destination Account No");
                                    VendorBDBDBD.CALCFIELDS(Balance);
                                    nonmembervendor:=VendorBDBDBD."No.";
                                    balance:=FORMAT(VendorBDBDBD.Balance);
                                    SpotcashDepositsBuffer2.Posted:=TRUE;
                                    SpotcashDepositsBuffer2.MODIFY;
                                    COMMIT;
                            END;
                            IF SpotcashDepositsBuffer2.Loan THEN BEGIN

                                          Acctype:=Acctype::Vendor;
                                          BalAccType:=BalAccType::Vendor;
                                          TransactionType2:=TransactionType2::Repayment;
                                          DocNo:=request_id;
                                          PostSalary.GetDocNo(DocNo);
                                          Customer.GET(SpotcashDepositsBuffer2."Destination owner");
                                          branch:=Customer."Global Dimension 1 Code";
                                          Amounttotransact:=0;
                                          Amounttotransact:=SpotcashDepositsBuffer2.Amount;
                                          InsuranceDue:=0;
                                          IntDue:=0;
                                          InsuranceDue:=RebatesDistributions.GetInsuranceDue(SpotcashDepositsBuffer2."Destination Account No");
                                          IntDue:=RebatesDistributions.GetInterestDue(SpotcashDepositsBuffer2."Destination Account No");

                                          IF InsuranceDue>=Amounttotransact THEN BEGIN
                                             InsuranceDue:=Amounttotransact;
                                             Amounttotransact:=0;
                                          END;
                                          IF InsuranceDue<Amounttotransact THEN BEGIN
                                             InsuranceDue:=InsuranceDue;
                                             Amounttotransact:=Amounttotransact-InsuranceDue;
                                          END;
                                          IF IntDue>=Amounttotransact THEN BEGIN
                                             IntDue:=Amounttotransact;
                                             Amounttotransact:=0;
                                          END;
                                          IF IntDue<Amounttotransact THEN BEGIN
                                             IntDue:=IntDue;
                                             Amounttotransact:=Amounttotransact-IntDue;
                                          END;
                                          //ERROR('Ins: %1\Int: %2\Loan: %3',InsuranceDue,IntrestDue,Amounttotransact);
                                          PostSalary.ClearLines;
                                          IF InsuranceDue<>0 THEN BEGIN
                                              TransactionType2:=TransactionType2::"Ledger Fees";
                                              PostSalary.CreateJnlLine33(BalAccType,SpotcashDepositsBuffer2."Destination Account No",BalAccType,
                                                                        SpotcashDepositsBuffer2."Destination Account No", COPYSTR('Insurance Paid (Spotcash Paybill Deposit) by: '+phone_no,1,40),
                                                                        InsuranceDue,TransactionType2,branch,0,SpotcashDepositsBuffer2."Destination owner");
                                          END;
                                          IF IntDue<>0 THEN BEGIN
                                              TransactionType2:=TransactionType2::"Interest Paid";
                                              PostSalary.CreateJnlLine33(BalAccType,SpotcashDepositsBuffer2."Destination Account No",BalAccType,
                                                                        SpotcashDepositsBuffer2."Destination Account No", COPYSTR('Interest Paid (Spotcash Paybill Deposit) by: '+phone_no,1,40),
                                                                        IntDue,TransactionType2,branch,0,SpotcashDepositsBuffer2."Destination owner");
                                          END;
                                          IF Amounttotransact<>0 THEN BEGIN
                                              TransactionType2:=TransactionType2::Repayment;
                                              PostSalary.CreateJnlLine33(BalAccType,SpotcashDepositsBuffer2."Destination Account No",BalAccType,
                                                                        SpotcashDepositsBuffer2."Destination Account No", COPYSTR('Loan Repayment (Spotcash Paybill Deposit) by:'+phone_no,1,40),
                                                                        Amounttotransact,TransactionType2,branch,0,SpotcashDepositsBuffer2."Destination owner");
                                          END;
                                          //EXIT;
                                          //ERROR('inserted to Jnl');
                                          BalAccType:=BalAccType::"G/L Account";
                                          Acctype:=Acctype::"G/L Account";
                                          BalAccType:=BalAccType::"G/L Account";
                                          {
                                          TransactionType2:=TransactionType2::"Deposit Contribution";
                                          GeneralSetup.RESET;
                                          GeneralSetup.GET;
                                          PostSalary.CreateJnlLine33(BalAccType,GeneralSetup."SpotCash Control Account",BalAccType,
                                                              GeneralSetup."SpotCash Control Account", COPYSTR('Spotcash Paybill Deposit',1,40),
                                                              -SpotcashDepositsBuffer2.Amount,TransactionType2,branch,0,SpotcashDepositsBuffer2."Destination owner");
                                           }
                                            Acctype:=Acctype::"Bank Account";
                                            BalAccType:=BalAccType::"Bank Account";
                                            Bankzetu.RESET;
                                            Bankzetu.SETRANGE("Sacco Paybill Account",TRUE);
                                            Bankzetu.FINDSET;
                                            TransactionType2:=TransactionType2::"Deposit Contribution";
                                            PostSalary.CreateJnlLine33(BalAccType,Bankzetu."No.",BalAccType,
                                                        Bankzetu."No.", COPYSTR('Spotcash Paybill Deposit by:'+phone_no,1,40),
                                                        -SpotcashDepositsBuffer2.Amount,TransactionType2,branch,0,SpotcashDepositsBuffer2."Destination owner");

                                          // EXIT;
                                           PostSalary.PostLines;
                                           COMMIT;

                                           VendorBDBDBD.RESET;
                                           VendorBDBDBD.GET(SpotcashDepositsBuffer2."Destination Account No");
                                           VendorBDBDBD.CALCFIELDS(Balance);
                                           nonmembervendor:=VendorBDBDBD."No.";
                                           balance:=FORMAT(VendorBDBDBD.Balance);
                                           SpotcashDepositsBuffer2.Posted:=TRUE;
                                           SpotcashDepositsBuffer2.MODIFY;
                                           COMMIT;


                                   END;

                           // END;

                     END;

                     //End Now Actual Posting From that Account+++++++++++++++++++++++++++++++++++++++++++++++++
                      status:='1';
                      response:='00';
                      "response message":='success';
                      //Insert Spotcash Entry Data==============================
                      SpotCashEntries.INIT;
                      SpotCashEntries."Request ID":=request_id;
                      SpotCashEntries."Phone No":=phone_no;
                      SpotCashEntries."Transaction Type":=transaction_type;
                      SpotCashEntries."Transaction Time":=TIME;
                      SpotCashEntries."Transaction Date":=TODAY;
                      SpotCashEntries.Status:='Success';
                      IF nonmembervendor='' THEN BEGIN
                          VendorBDBDBD.RESET;
                          VendorBDBDBD.GET(SpotcashDepositsBuffer2."Destination Account No");
                          VendorBDBDBD.CALCFIELDS(Balance);
                          nonmembervendor:=VendorBDBDBD."No.";
                      END;
                      VendorBDBDBD.GET(nonmembervendor);
                      VendorBDBDBD.CALCFIELDS(Balance);
                      balance:=FORMAT(VendorBDBDBD.Balance);
                      EVALUATE(SpotCashEntries.Balance,balance);
                      SpotCashEntries.Message:='Non Member Deposit';
                      IF amount<>''THEN BEGIN
                       EVALUATE(SpotCashEntries.Amount,amount);
                      END;
                      IF charges<>''THEN BEGIN
                         EVALUATE(SpotCashEntries.Charges,charges);
                      END;
                      SpotCashEntries."Account No":="account _number";
                      SpotCashEntries."Cr Account No":=nonmembervendor;
                      SpotCashEntries.Status:=status;
                      SpotCashEntries."F Key":=f_key;
                      SpotCashEntries.INSERT;
                      //End Insert Spotcas Entry Data===========================
                      EXIT;

       END;
       //End Deposits to Accounts===============================For Members Unregistered=========================






































      //Inter Account Transfer======================================================================================
      IF transaction_type=15 THEN BEGIN
                              //ERROR('..');
                              SpotCashRegistration.RESET;
                              SpotCashRegistration.SETRANGE("Phone No",phone_no);
                              IF NOT SpotCashRegistration.FINDSET THEN BEGIN
                                 response:='01';
                                 "response message":='Phone Number is not linked to a FOSA Account!';
                                 //Insert Spotcash Entry Data==============================
                                SpotCashEntries.INIT;
                                SpotCashEntries."Request ID":=request_id;
                                SpotCashEntries."Phone No":=phone_no;
                                SpotCashEntries."Transaction Type":=transaction_type;
                                SpotCashEntries."Transaction Time":=TIME;
                                SpotCashEntries."Transaction Date":=TODAY;
                                SpotCashEntries.Status:='Phone Number is not linked to a FOSA Account!';
                                VendorBDBDBD.GET(cr_account);
                                VendorBDBDBD.CALCFIELDS(Balance);
                                balance:=FORMAT(VendorBDBDBD.Balance);
                                EVALUATE(SpotCashEntries.Balance,balance);
                                SpotCashEntries.Message:='01';
                                IF amount<>''THEN BEGIN
                                 EVALUATE(SpotCashEntries.Amount,amount);
                                END;
                                IF charges<>''THEN BEGIN
                                   EVALUATE(SpotCashEntries.Charges,charges);
                                END;
                                SpotCashEntries."Account No":="account _number";
                                SpotCashEntries."Cr Account No":=cr_account;
                                SpotCashEntries.Status:=status;
                                SpotCashEntries."F Key":=f_key;
                                SpotCashEntries.INSERT;
                                //End Insert Spotcas Entry Data===========================
                                 EXIT;
                              END;
                              IF SpotCashRegistration.FINDSET THEN BEGIN
                                 FromAccount:=SpotCashRegistration."Account No";
                              END;

                              VendorIA.RESET;
                              IF VendorIA.GET(FromAccount)=FALSE THEN BEGIN
                                 response:='01';
                                 "response message":='Phone Number is not linked to a FOSA Account!';
                                  //Insert Spotcash Entry Data==============================
                                SpotCashEntries.INIT;
                                SpotCashEntries."Request ID":=request_id;
                                SpotCashEntries."Phone No":=phone_no;
                                SpotCashEntries."Transaction Type":=transaction_type;
                                SpotCashEntries."Transaction Time":=TIME;
                                SpotCashEntries."Transaction Date":=TODAY;
                                SpotCashEntries.Status:='Phone Number is not linked to a FOSA Account!';
                                VendorBDBDBD.GET(cr_account);
                                VendorBDBDBD.CALCFIELDS(Balance);
                                balance:=FORMAT(VendorBDBDBD.Balance);
                                EVALUATE(SpotCashEntries.Balance,balance);
                                SpotCashEntries.Message:='01';
                                IF amount<>''THEN BEGIN
                                 EVALUATE(SpotCashEntries.Amount,amount);
                                END;
                                IF charges<>''THEN BEGIN
                                   EVALUATE(SpotCashEntries.Charges,charges);
                                END;
                                SpotCashEntries."Account No":="account _number";
                                SpotCashEntries."Cr Account No":=cr_account;
                                SpotCashEntries.Status:=status;
                                SpotCashEntries."F Key":=f_key;
                                SpotCashEntries.INSERT;
                                //End Insert Spotcas Entry Data===========================
                                 EXIT;
                              END;
                              VendorIA.RESET;
                              IF VendorIA.GET(cr_account)=FALSE THEN BEGIN
                                 response:='01';
                                 "response message":='Destination Account does not exist!';
                                  //Insert Spotcash Entry Data==============================
                                SpotCashEntries.INIT;
                                SpotCashEntries."Request ID":=request_id;
                                SpotCashEntries."Phone No":=phone_no;
                                SpotCashEntries."Transaction Type":=transaction_type;
                                SpotCashEntries."Transaction Time":=TIME;
                                SpotCashEntries."Transaction Date":=TODAY;
                                SpotCashEntries.Status:='Destination Account does not exist!';
                                VendorBDBDBD.GET(cr_account);
                                VendorBDBDBD.CALCFIELDS(Balance);
                                balance:=FORMAT(VendorBDBDBD.Balance);
                                EVALUATE(SpotCashEntries.Balance,balance);
                                SpotCashEntries.Message:='01';
                                IF amount<>''THEN BEGIN
                                 EVALUATE(SpotCashEntries.Amount,amount);
                                END;
                                IF charges<>''THEN BEGIN
                                   EVALUATE(SpotCashEntries.Charges,charges);
                                END;
                                SpotCashEntries."Account No":="account _number";
                                SpotCashEntries."Cr Account No":=cr_account;
                                SpotCashEntries.Status:=status;
                                SpotCashEntries."F Key":=f_key;
                                SpotCashEntries.INSERT;
                                //End Insert Spotcas Entry Data===========================
                                 EXIT;
                              END;

                              VendorTo.GET(cr_account);    ToAccount:=VendorTo."No.";
                              VendorFrom.GET(FromAccount); FromAccount:=VendorFrom."No.";
                              AmountIA:=0;
                              EVALUATE(AmountIA,amount);



                              //Check Balance if there if not exit=============================================
                              VendorFrom.CALCFIELDS(Balance);
                              IF VendorFrom.Balance>AmountIA THEN BEGIN
                                             response:='01';
                                             "response message":='Source Account does not have Enough Money!';
                                             //Insert Spotcash Entry Data==============================
                                              SpotCashEntries.INIT;
                                              SpotCashEntries."Request ID":=request_id;
                                              SpotCashEntries."Phone No":=phone_no;
                                              SpotCashEntries."Transaction Type":=transaction_type;
                                              SpotCashEntries."Transaction Time":=TIME;
                                              SpotCashEntries."Transaction Date":=TODAY;
                                              SpotCashEntries.Status:='Destination Account does not exist!';
                                              VendorBDBDBD.GET(VendorIA."No.");
                                              VendorBDBDBD.CALCFIELDS(Balance);
                                              balance:=FORMAT(VendorBDBDBD.Balance);
                                              EVALUATE(SpotCashEntries.Balance,balance);
                                              SpotCashEntries.Message:='01';
                                              IF amount<>''THEN BEGIN
                                               EVALUATE(SpotCashEntries.Amount,amount);
                                              END;
                                              IF charges<>''THEN BEGIN
                                                 EVALUATE(SpotCashEntries.Charges,charges);
                                              END;
                                              SpotCashEntries."Account No":="account _number";
                                              SpotCashEntries."Cr Account No":=cr_account;
                                              SpotCashEntries.Status:=status;
                                              SpotCashEntries."F Key":=f_key;
                                              SpotCashEntries.INSERT;
                                              //End Insert Spotcas Entry Data===========================
                                               EXIT;
                              END;
                              //End Check Balance if there if not exit=========================================


                              //If the Destination Account is Not Loan=========================================
                              AccountTypes.RESET;
                              AccountTypes.SETRANGE(Code,VendorTo."Account Type");
                              AccountTypes.SETRANGE(Loan,FALSE);
                              IF AccountTypes.FINDSET  THEN BEGIN
                                                     //Cr To Account==============
                                                     //Dr From Account============
                                                     PostSalary.ClearLines;
                                                     Acctype:=Acctype::Vendor;
                                                     BalAccType:=BalAccType::Vendor;
                                                     Customer.RESET;
                                                     Customer.GET(VendorTo."Owner Member No");
                                                     branch:=Customer."Global Dimension 1 Code";
                                                     TransactionType2:=TransactionType2::" ";
                                                     DocNo:=COPYSTR(request_id,1,15);
                                                     PostSalary.GetDocNo(DocNo);
                                                     PostSalary.CreateJnlLine3(BalAccType,ToAccount,BalAccType,ToAccount,
                                                       COPYSTR('InterAccount Transfer '+FromAccount+'>'+ToAccount,1,40),ABS(AmountIA),TransactionType2,branch,0);


                                                     Acctype:=Acctype::Vendor;
                                                     BalAccType:=BalAccType::Vendor;
                                                     Customer.RESET;
                                                     Customer.GET(VendorFrom."Owner Member No");
                                                     branch:=Customer."Global Dimension 1 Code";
                                                     TransactionType2:=TransactionType2::" ";
                                                     DocNo:=COPYSTR(request_id,1,15);
                                                     PostSalary.GetDocNo(DocNo);
                                                     PostSalary.CreateJnlLine3(BalAccType,FromAccount,BalAccType,FromAccount,
                                                       COPYSTR('InterAccount Transfer '+FromAccount+'>'+ToAccount,1,40),-ABS(AmountIA),TransactionType2,branch,0);
                                                     PostSalary.PostLines;
                              END;
                              //End If the Destination Account is Not Loan=====================================


          //If the Destination Account is Loan=========================================
          AccountTypes.RESET;
          AccountTypes.SETRANGE(Code,VendorTo."Account Type");
          AccountTypes.SETRANGE(Loan,TRUE);
          IF AccountTypes.FINDSET  THEN BEGIN
                                  //Cr To Account==============
                                  //Dr From Account============
                                              Acctype:=Acctype::Vendor;
                                              BalAccType:=BalAccType::Vendor;
                                              TransactionType2:=TransactionType2::Repayment;
                                              DocNo:=request_id;
                                              PostSalary.GetDocNo(request_id);
                                              Customer.GET(VendorTo."Owner Member No");
                                              branch:=Customer."Global Dimension 1 Code";
                                              Amounttotransact:=0;
                                              Amounttotransact:=AmountIA;
                                              InsuranceDue:=0;
                                              IntDue:=0;
                                              InsuranceDue:=RebatesDistributions.GetInsuranceDue(ToAccount);
                                              IntDue:=RebatesDistributions.GetInterestDue(ToAccount);

                                              IF InsuranceDue>=Amounttotransact THEN BEGIN
                                                  InsuranceDue:=Amounttotransact;
                                                  Amounttotransact:=0;
                                              END;
                                              IF InsuranceDue<Amounttotransact THEN BEGIN
                                                  InsuranceDue:=InsuranceDue;
                                                  Amounttotransact:=Amounttotransact-InsuranceDue;
                                              END;
                                              IF IntDue>=Amounttotransact THEN BEGIN
                                                  IntDue:=Amounttotransact;
                                                  Amounttotransact:=0;
                                              END;
                                              IF IntDue<Amounttotransact THEN BEGIN
                                                  IntDue:=IntDue;
                                                  Amounttotransact:=Amounttotransact-IntDue;
                                              END;
                                              //ERROR('Ins: %1\Int: %2\Loan: %3',InsuranceDue,IntrestDue,Amounttotransact);
                                              PostSalary.ClearLines;
                                              IF InsuranceDue<>0 THEN BEGIN
                                                  TransactionType2:=TransactionType2::"Ledger Fees";
                                                  PostSalary.CreateJnlLine33(BalAccType,ToAccount,BalAccType,
                                                                            ToAccount, COPYSTR('Ins:-InterAccount Transfer '+FromAccount+'>'+ToAccount,1,40),
                                                                            InsuranceDue,TransactionType2,branch,0,SpotcashDepositsBuffer2."Destination owner");
                                              END;
                                              IF IntDue<>0 THEN BEGIN
                                                  TransactionType2:=TransactionType2::"Interest Paid";
                                                  PostSalary.CreateJnlLine33(BalAccType,ToAccount,BalAccType,
                                                                            ToAccount, COPYSTR('Int:-InterAccount Transfer '+FromAccount+'>'+ToAccount,1,40),
                                                                            IntDue,TransactionType2,branch,0,SpotcashDepositsBuffer2."Destination owner");
                                              END;
                                              IF Amounttotransact<>0 THEN BEGIN
                                                  TransactionType2:=TransactionType2::Repayment;
                                                  PostSalary.CreateJnlLine33(BalAccType,ToAccount,BalAccType,
                                                                            ToAccount, COPYSTR('Repayment:-InterAccount Transfer '+FromAccount+'>'+ToAccount,1,40),
                                                                            Amounttotransact,TransactionType2,branch,0,SpotcashDepositsBuffer2."Destination owner");
                                              END;

                                            Acctype:=Acctype::Vendor;
                                            BalAccType:=BalAccType::Vendor;
                                            Customer.RESET;
                                            Customer.GET(VendorFrom."Owner Member No");
                                            branch:=Customer."Global Dimension 1 Code";
                                            TransactionType2:=TransactionType2::" ";
                                            DocNo:=COPYSTR(request_id,1,15);
                                            PostSalary.GetDocNo(DocNo);
                                            PostSalary.CreateJnlLine3(BalAccType,FromAccount,BalAccType,FromAccount,
                                              COPYSTR('InterAccount Transfer '+FromAccount+'>'+ToAccount,1,40),-ABS(AmountIA),TransactionType2,branch,0);
                                            PostSalary.PostLines;
          END;
      //End If the Destination Account is Loan=====================================
      response:='00';
      "response message":='InterAccount Transfer was successfull';
                                //Insert Spotcash Entry Data==============================
                                SpotCashEntries.INIT;
                                SpotCashEntries."Request ID":=request_id;
                                SpotCashEntries."Phone No":=phone_no;
                                SpotCashEntries."Transaction Type":=transaction_type;
                                SpotCashEntries."Transaction Time":=TIME;
                                SpotCashEntries."Transaction Date":=TODAY;
                                SpotCashEntries.Status:='InterAccount Transfer was successfull';
                                VendorBDBDBD.GET(cr_account);
                                VendorBDBDBD.CALCFIELDS(Balance);
                                balance:=FORMAT(VendorBDBDBD.Balance);
                                EVALUATE(SpotCashEntries.Balance,balance);
                                SpotCashEntries.Message:='01';
                                IF amount<>''THEN BEGIN
                                 EVALUATE(SpotCashEntries.Amount,amount);
                                END;
                                IF charges<>''THEN BEGIN
                                   EVALUATE(SpotCashEntries.Charges,charges);
                                END;
                                SpotCashEntries."Account No":="account _number";
                                SpotCashEntries."Cr Account No":=cr_account;
                                SpotCashEntries.Status:=status;
                                SpotCashEntries."F Key":=f_key;
                                SpotCashEntries.INSERT;
                                //End Insert Spotcas Entry Data===========================
      EXIT;
      END;
      //End Inter Account Transfer==================================================================================




















      SPotcashMembers.RESET;
      SPotcashMembers.SETRANGE("Phone No",phone_no);
      IF SPotcashMembers.FIND('-') THEN BEGIN
                  Account.GET(SPotcashMembers."Account No");


                  Account.CALCFIELDS("Balance (LCY)");
                  IF Member.GET(Account."Owner Member No") THEN BEGIN
                      Dimensioncode:=Member."Global Dimension 1 Code";
                  END;

                  SpotCashEntries.INIT;
                  SpotCashEntries."Request ID":=request_id;
                  SpotCashEntries."Phone No":=phone_no;
                  SpotCashEntries."Transaction Type":=transaction_type;
                  IF amount<>''THEN BEGIN
                     EVALUATE(SpotCashEntries.Amount,amount);
                  END;
                  IF charges<>''THEN BEGIN
                     EVALUATE(SpotCashEntries.Charges,charges);
                  END;
                  SpotCashEntries."Account No":="account _number";
                  SpotCashEntries."Cr Account No":=cr_account;
                  SpotCashEntries.Status:=status;
                  SpotCashEntries."F Key":=f_key;
                  IF balance<>'' THEN BEGIN
                     EVALUATE(SpotCashEntries.Balance,balance);
                  END;
                  SpotCashEntries.Message:=message;
                  SpotCashEntries."Transaction Date":=TODAY;
                  SpotCashEntries."Transaction Time":=TIME;
                  //++++++++++++++++++++++++++++++++++++++++++++++++++++++
                  CustomerBD.RESET;
                  CustomerBD.GET(Account."Owner Member No");
                  IF CustomerBD.Status<>CustomerBD.Status::Active THEN BEGIN
                      SpotCashEntries.Message:='Dear '+CustomerBD.Name+',your status is not Active! Please visit your nearest Chai Sacco Branch';
                        response:='01';
                        SpotCashEntries.Status:=status;

                        "response message":='Dear '+CustomerBD.Name+',your status is not Active! Please visit your nearest Chai Sacco Branch';
                        EXIT;
                  END;
                  //++++++++++++++++++++++++++++++++++++++++++++++++++++++
                  IF amount<>''THEN BEGIN
                       EVALUATE(SpotCashEntries.Amount,amount);
                      END;
                      IF charges<>''THEN BEGIN
                         EVALUATE(SpotCashEntries.Charges,charges);
                      END;
                      SpotCashEntries."Account No":="account _number";
                      SpotCashEntries."Cr Account No":=cr_account;
                      SpotCashEntries.Status:=status;
                      SpotCashEntries."F Key":=f_key;
                  SpotCashEntries.INSERT;



                  //++++++++++++++++++++++++++++++++++++++++++++++++++++++
                  CustomerBD.RESET;
                  CustomerBD.GET(Account."Owner Member No");
                  IF CustomerBD.Status<>CustomerBD.Status::Active THEN BEGIN
                        SpotCashEntries.Message:='Dear '+CustomerBD.Name+',your status is not Active! Please visit your nearest Chai Sacco Branch';
                        response:='01';
                        status:='01';
                        "response message":='Dear '+CustomerBD.Name+',your status is not Active! Please visit your nearest Chai Sacco Branch';
                        EXIT;
                  END;
                  //++++++++++++++++++++++++++++++++++++++++++++++++++++++
      {
      IF "account _number"='0299901304301' THEN BEGIN
                 ERROR('...6');
              END; }



























      // Spotcash withdrawal
        IF transaction_type=1 THEN BEGIN

             CalcAvailableBalance(Account."No.");
             CustomerBD.RESET;
             CustomerBD.GET(Account."Owner Member No");
             IF Account."Account Remarks"<>'' THEN BEGIN
                   balance:=FORMAT(AvailableBalance);
                   response:='22';
                    "response message":='Transaction Failed,Contact the nearest Chai Sacco Branch';
                               //Insert Spotcash Entry Data==============================
                                SpotCashEntries.INIT;
                                SpotCashEntries."Request ID":=request_id;
                                SpotCashEntries."Phone No":=phone_no;
                                SpotCashEntries."Transaction Type":=transaction_type;
                                SpotCashEntries."Transaction Time":=TIME;
                                SpotCashEntries."Transaction Date":=TODAY;
                                SpotCashEntries.Status:='Transaction Failed,Contact the nearest Chai Sacco Branch';
                                VendorBDBDBD.GET(cr_account);
                                VendorBDBDBD.CALCFIELDS(Balance);
                                balance:=FORMAT(VendorBDBDBD.Balance);
                                EVALUATE(SpotCashEntries.Balance,balance);
                                SpotCashEntries.Message:='22';
                                IF amount<>''THEN BEGIN
                                 EVALUATE(SpotCashEntries.Amount,amount);
                                END;
                                IF charges<>''THEN BEGIN
                                   EVALUATE(SpotCashEntries.Charges,charges);
                                END;
                                SpotCashEntries."Account No":="account _number";
                                SpotCashEntries."Cr Account No":=cr_account;
                                SpotCashEntries.Status:=status;
                                SpotCashEntries."F Key":=f_key;
                                SpotCashEntries.INSERT;
                                //End Insert Spotcas Entry Data===========================
              EXIT;
            END;

              GeneralSetup.GET;
              WithdrawalAmount:=0;
              EVALUATE(WithdrawalAmount,amount);

              scharges.RESET;
              scharges.SETRANGE(Code,GeneralSetup."Mobile Banking Withdrawal");
              IF scharges.FIND('-') THEN BEGIN
              Bal:=AvailableBalance-scharges."Charge Amount";
               EVALUATE(Amt,amount);
              IF Bal<Amt THEN BEGIN
                balance:=FORMAT(AvailableBalance);
                response:='01';
                "response message":='Insufficient Funds';
                             //Insert Spotcash Entry Data==============================
                                SpotCashEntries.INIT;
                                SpotCashEntries."Request ID":=request_id;
                                SpotCashEntries."Phone No":=phone_no;
                                SpotCashEntries."Transaction Type":=transaction_type;
                                SpotCashEntries."Transaction Time":=TIME;
                                SpotCashEntries."Transaction Date":=TODAY;
                                SpotCashEntries.Status:='Insufficient Funds';
                                VendorBDBDBD.GET(cr_account);
                                VendorBDBDBD.CALCFIELDS(Balance);
                                balance:=FORMAT(VendorBDBDBD.Balance);
                                EVALUATE(SpotCashEntries.Balance,balance);
                                SpotCashEntries.Message:='01';
                                IF amount<>''THEN BEGIN
                                 EVALUATE(SpotCashEntries.Amount,amount);
                                END;
                                IF charges<>''THEN BEGIN
                                   EVALUATE(SpotCashEntries.Charges,charges);
                                END;
                                SpotCashEntries."Account No":="account _number";
                                SpotCashEntries."Cr Account No":=cr_account;
                                SpotCashEntries.Status:=status;
                                SpotCashEntries."F Key":=f_key;
                                SpotCashEntries.INSERT;
                                //End Insert Spotcas Entry Data===========================
                EXIT;
              END;
              END ELSE BEGIN
              EVALUATE(Amt,amount);  //ERROR('...1-*%1',AvailableBalance);
              IF AvailableBalance<Amt THEN BEGIN
                balance:=FORMAT(AvailableBalance);
                response:='01';
                "response message":='Insufficient Funds';
                               //Insert Spotcash Entry Data==============================
                                SpotCashEntries.INIT;
                                SpotCashEntries."Request ID":=request_id;
                                SpotCashEntries."Phone No":=phone_no;
                                SpotCashEntries."Transaction Type":=transaction_type;
                                SpotCashEntries."Transaction Time":=TIME;
                                SpotCashEntries."Transaction Date":=TODAY;
                                SpotCashEntries.Status:='Insufficient Funds';
                                VendorBDBDBD.GET(cr_account);
                                VendorBDBDBD.CALCFIELDS(Balance);
                                balance:=FORMAT(VendorBDBDBD.Balance);
                                EVALUATE(SpotCashEntries.Balance,balance);
                                SpotCashEntries.Message:='01';
                                IF amount<>''THEN BEGIN
                                 EVALUATE(SpotCashEntries.Amount,amount);
                                END;
                                IF charges<>''THEN BEGIN
                                   EVALUATE(SpotCashEntries.Charges,charges);
                                END;
                                SpotCashEntries."Account No":="account _number";
                                SpotCashEntries."Cr Account No":=cr_account;
                                SpotCashEntries.Status:=status;
                                SpotCashEntries."F Key":=f_key;
                                SpotCashEntries.INSERT;
                                //End Insert Spotcas Entry Data===========================
                EXIT;
              END;



              //post withdrawal
              // DELETE ANY LINE ITEM THAT MAY BE PRESENT
                GenJournalLine.RESET;
                GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
                GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
                GenJournalLine.DELETEALL;

                IF DefaultBatch.GET('PURCHASES','SpotCash') THEN
                DefaultBatch.DELETE;

                //POSTING MAIN TRANSACTION

                DefaultBatch.INIT;
                DefaultBatch."Journal Template Name":='PURCHASES';
                DefaultBatch.Name:='SpotCash';
                DefaultBatch.INSERT;

                GenJournalLine.INIT;
                GenJournalLine."Journal Template Name":='PURCHASES';
                GenJournalLine."Journal Batch Name":='SpotCash';
                GenJournalLine."Document No.":=request_id;
                GenJournalLine."External Document No.":=request_id;
                GenJournalLine5.RESET;
                GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
                GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
                IF GenJournalLine5.FIND('+') THEN BEGIN
                GenJournalLine."Line No.":=GenJournalLine5."Line No."+10000;
                END;
                GenJournalLine."Account Type":=GenJournalLine."Account Type"::Vendor;
                GenJournalLine."Account No.":=Account."No.";
                GenJournalLine.VALIDATE(GenJournalLine."Account No.");
                GenJournalLine."Posting Date":=TODAY;

                ///////////////
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Members."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 1 Code");
                GenJournalLine."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 2 Code");
                END;
                GenJournalLine.Description:=FORMAT(phone_no)+'-Spotcash Withdrawal';
                //GenJournalLine."Currency Code":="Currency Code";
                GenJournalLine.VALIDATE(GenJournalLine."Currency Code");

                EVALUATE(GenJournalLine.Amount,amount);


                GenJournalLine.VALIDATE(GenJournalLine.Amount);

                GenJournalLine."Bal. Account Type":=GenJournalLine."Bal. Account Type"::"G/L Account";
                GeneralSetup.GET;
                GenJournalLine."Bal. Account No.":=GeneralSetup."SpotCash Control Account";
                //===============================Paybill Bank========================================
                                 GenJournalLine."Bal. Account Type":=GenJournalLine1."Bal. Account Type"::"Bank Account";
                                 Bankzetu.RESET;
                                 Bankzetu.SETRANGE("Paybill Bank",TRUE);
                                 IF NOT Bankzetu.FINDSET THEN BEGIN
                                     response:='01';
                                     "response message":='Please setup Bank that is linked to Paybill';
                                     //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:='Please setup Bank that is linked to Paybill';
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='01';
                                      IF amount<>''THEN BEGIN
                                        EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                          EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
                                     EXIT;
                                 END;
                                 Bankzetu.RESET;
                                 Bankzetu.SETRANGE("Paybill Bank",TRUE);
                                 IF Bankzetu.FINDSET THEN BEGIN
                                     GenJournalLine."Bal. Account No.":=Bankzetu."No.";
                                 END;
                          //===============================End Paybill Bank====================================
                GenJournalLine.VALIDATE(GenJournalLine."Bal. Account No.");
                GenJournalLine.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");
                IF GenJournalLine.Amount<>0 THEN
                  GenJournalLine.INSERT;
                //END;

              ///Postcharges
              //Main charge
             { GenJournalLine.RESET;
              GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
              GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
              GenJournalLine.DELETEALL;

              IF DefaultBatch.GET('PURCHASES','SpotCash') THEN
              DefaultBatch.DELETE;

              DefaultBatch.RESET;
              DefaultBatch."Journal Template Name":='PURCHASES';
              DefaultBatch.Name:='SpotCash';
              DefaultBatch.INSERT;}
              //posting main charge
              //Total Charges=========================================================================================
              GenJournalLine2.INIT;
              GenJournalLine2."Journal Template Name":='PURCHASES';
              GenJournalLine2."Journal Batch Name":='SpotCash';
              GenJournalLine2."Document No.":=request_id;
              GenJournalLine5.RESET;
              GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
              GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
              IF GenJournalLine5.FIND('+') THEN BEGIN
              GenJournalLine2."Line No.":=GenJournalLine5."Line No."+10000;
              END;
              //GenJournalLine."Line No.":=LineNo;

              GenJournalLine2."Posting Date":=TODAY;
              GenJournalLine2.Description:=FORMAT(phone_no)+'-Sacco Withdrawal Charges';

              GenJournalLine2."Account Type":=GenJournalLine2."Account Type"::Vendor;
              GenJournalLine2."Account No.":=Account."No.";
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine2."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";;
                GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 1 Code");
                GenJournalLine2."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 2 Code");
                END;
              TransactionTypes.RESET;
              TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotCashWithdrawal);
              IF TransactionTypes.FINDSET THEN BEGIN
                TransactionCharges.RESET; //ERROR('%1',TransactionTypes.Type);
                TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
                TransactionCharges.SETFILTER("Minimum Amount",'<=%1',WithdrawalAmount);
                TransactionCharges.SETFILTER("Maximum Amount",'>=%1',WithdrawalAmount);
                IF TransactionCharges.FIND('-') THEN BEGIN
                 // GenJournalLine2."Account No.":=TransactionCharges."GL Account";
                   //ERROR('%1',TransactionCharges."Maximum Amount");
                  GenJournalLine2.Amount:=(TransactionCharges."Charge Amount")+TransactionCharges."Safaricom Amount"+TransactionCharges."TL Amount"+(TransactionCharges."Excise %"/100)*TransactionCharges."Charge Amount";
                  GenJournalLine2.Amount:=GenJournalLine2.Amount; //ERROR('%1',GenJournalLine2.Amount);
                END;
                GenJournalLine2.VALIDATE(GenJournalLine2.Amount);
              END;
            //END;

              GenJournalLine2.VALIDATE(GenJournalLine2.Amount);
             // GenJournalLine2."Bal. Account Type":=GenJournalLine2."Bal. Account Type"::"G/L Account";
              //GenJournalLine2."Bal. Account No.":=scharges."GL Account";
              GenJournalLine2.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");;
              IF GenJournalLine2.Amount<>0 THEN
                GenJournalLine2.INSERT;
              END;
              //End Total Chai-sacco Charge==================================================================

              {GenJournalLine2.INIT;
              GenJournalLine2."Journal Template Name":='PURCHASES';
              GenJournalLine2."Journal Batch Name":='SpotCash';
              GenJournalLine2."Document No.":=request_id;
              GenJournalLine5.RESET;
              GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
              GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
              IF GenJournalLine5.FIND('+') THEN BEGIN
              GenJournalLine2."Line No.":=GenJournalLine5."Line No."+10000;
              END;
              //GenJournalLine."Line No.":=LineNo;

              GenJournalLine2."Posting Date":=TODAY;
              GenJournalLine2.Description:=FORMAT(phone_no)+'-Mobile Withdrawal Charge';

              GenJournalLine2."Account Type":=GenJournalLine2."Account Type"::Vendor;
              GenJournalLine2."Account No.":=Account."No.";
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Members."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine2."Shortcut Dimension 1 Code":=AccountHolders."Global Dimension 1 Code";
                GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 1 Code");
                GenJournalLine2."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 2 Code");
                END;
              TransactionTypes.RESET;
              TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotWith);
              IF TransactionTypes.FIND('-') THEN BEGIN
                Amt2:=0;
                EVALUATE(Amt2,amount);
                TransactionCharges.RESET;
                TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
                TransactionCharges.SETFILTER("Minimum Amount",'<=%1',Amt2);
                TransactionCharges.SETFILTER("Maximum Amount",'>=%1',Amt2);
                IF TransactionCharges.FIND('-') THEN BEGIN
                 // GenJournalLine2."Account No.":=TransactionCharges."GL Account";
                  GenJournalLine2.Amount:=TransactionCharges."Settlement Amount";
                  GenJournalLine2.Amount:=GenJournalLine2.Amount;
                END;
                GenJournalLine2.VALIDATE(GenJournalLine2.Amount);
              END;
            //END;

              GenJournalLine2.VALIDATE(GenJournalLine2.Amount);
             // GenJournalLine2."Bal. Account Type":=GenJournalLine2."Bal. Account Type"::"G/L Account";
              //GenJournalLine2."Bal. Account No.":=scharges."GL Account";
              GenJournalLine2.VALIDATE("Shortcut Dimension 1 Code",Dimensioncode);
              IF GenJournalLine2.Amount<>0 THEN
                GenJournalLine2.INSERT;}
             // END;

            //post sacco charge======================================================================
            GenJournalLine.RESET;
            GenJournalLine.INIT;
            GenJournalLine."Journal Template Name":='PURCHASES';
            GenJournalLine."Journal Batch Name":='SpotCash';
            GenJournalLine."Document No.":=request_id;
            GenJournalLine5.RESET;
            GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
            GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
            IF GenJournalLine5.FIND('+') THEN BEGIN
            GenJournalLine."Line No.":=GenJournalLine5."Line No."+10000;
            END;
            //GenJournalLine."Line No.":=LineNo;
            GenJournalLine."Posting Date":=TODAY;
            GenJournalLine.Description:=COPYSTR(FORMAT(phone_no)+'-SpotCash Withdrawal Charges',1,40);
            GenJournalLine."Account Type":=GenJournalLine."Account Type"::"G/L Account";
            AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Members."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                    GenJournalLine."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";;
                    GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 1 Code");
                    GenJournalLine."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                    GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 2 Code");
                END;
            TransactionTypes.RESET;
            TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotCashWithdrawal);
            IF TransactionTypes.FIND('-') THEN BEGIN
              TransactionCharges.RESET;
              TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
              TransactionCharges.SETFILTER("Minimum Amount",'<=%1',WithdrawalAmount);
              TransactionCharges.SETFILTER("Maximum Amount",'>=%1',WithdrawalAmount);
              IF TransactionCharges.FIND('-') THEN BEGIN

                GenJournalLine."Account No.":=TransactionCharges."GL Account";
                GenJournalLine.Amount:=-TransactionCharges."Charge Amount";
                GenJournalLine.VALIDATE(GenJournalLine.Amount);
              END;
            END;
            GenJournalLine.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");
            IF GenJournalLine.Amount<>0 THEN
            GenJournalLine.INSERT;
            //End Charges=====================================================================================



         //post excise duty====================================================================================



                GenJournalLine2.RESET;
                GenJournalLine2.INIT;
                GenJournalLine2."Journal Template Name":='PURCHASES';
                GenJournalLine2."Journal Batch Name":='SpotCash';
                GenJournalLine2."Document No.":=request_id;
                GenJournalLine5.RESET;
                GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
                GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
                IF GenJournalLine5.FIND('+') THEN BEGIN
                GenJournalLine2."Line No.":=GenJournalLine5."Line No."+10000;
                END;
                //GenJournalLine."Line No.":=LineNo;
                GenJournalLine2."Posting Date":=TODAY;
                GenJournalLine2.Description:=COPYSTR(FORMAT(phone_no)+'-SpotCash Withdrawal excise duty',1,40);
                GenJournalLine2."Account Type":=GenJournalLine1."Account Type"::"G/L Account";
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine2."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";;
                GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 1 Code");
                GenJournalLine2."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 2 Code");
                END;
                TransactionTypes.RESET;
                TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotCashWithdrawal);
                IF TransactionTypes.FIND('-') THEN BEGIN
                Amt2:=0;
                EVALUATE(Amt2,amount);
                TransactionCharges.RESET;
                TransactionCharges.SETFILTER("Minimum Amount",'<=%1',WithdrawalAmount);
                TransactionCharges.SETFILTER("Maximum Amount",'>=%1',WithdrawalAmount);
                TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
                //TransactionCharges.SETFILTER("Minimum Amount",'<=%1',Amt2);
                //TransactionCharges.SETFILTER("Maximum Amount",'>=%1',Amt2);
                IF TransactionCharges.FIND('-') THEN BEGIN

                  GenJournalLine2."Account No.":=TransactionCharges."Excise G/L Account";
                  GenJournalLine2.Amount:=(TransactionCharges."Excise %"/100)*TransactionCharges."Charge Amount";
                  GenJournalLine2.Amount:=-GenJournalLine2.Amount;
                  GenJournalLine2.VALIDATE(GenJournalLine2.Amount);
                END;
                END;
                GenJournalLine2.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");
                IF GenJournalLine2.Amount<>0 THEN
                GenJournalLine2.INSERT;

             //End Excise Duty==========================================================================

               //Safaricom==================================================================
                         //post settlement charge

                          GenJournalLine1.RESET;
                          GenJournalLine1.INIT;
                          GenJournalLine1."Journal Template Name":='PURCHASES';
                          GenJournalLine1."Journal Batch Name":='SpotCash';
                          GenJournalLine1."Document No.":=request_id;
                          GenJournalLine5.RESET;
                          GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
                          GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
                          IF GenJournalLine5.FIND('+') THEN BEGIN
                          GenJournalLine1."Line No.":=GenJournalLine5."Line No."+10000;
                          END;
                          //GenJournalLine."Line No.":=LineNo;
                          GenJournalLine1."Posting Date":=TODAY;
                          GenJournalLine1.Description:=COPYSTR(FORMAT(phone_no)+'-SpotCash Safaricom Withdrawal Charges',1,40);
                          GenJournalLine1."Account Type":=GenJournalLine1."Account Type"::"Bank Account";
                          AccountHolders.RESET;
                          AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
                          IF AccountHolders.FIND('-') THEN BEGIN
                          GenJournalLine1."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";;
                          GenJournalLine1.VALIDATE(GenJournalLine1."Shortcut Dimension 1 Code");
                          GenJournalLine1."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                          GenJournalLine1.VALIDATE(GenJournalLine1."Shortcut Dimension 2 Code");
                          END;
                          TransactionTypes.RESET;
                          TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotCashWithdrawal);
                          IF TransactionTypes.FIND('-') THEN BEGIN
                          Amt2:=0;
                          EVALUATE(Amt2,amount);
                          TransactionCharges.RESET;
                          TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
                          TransactionCharges.SETFILTER("Minimum Amount",'<=%1',WithdrawalAmount);
                          TransactionCharges.SETFILTER("Maximum Amount",'>=%1',WithdrawalAmount);
                         // TransactionCharges.SETFILTER("Minimum Amount",'<=%1',Amt2);
                         // TransactionCharges.SETFILTER("Maximum Amount",'>=%1',Amt2);
                          IF TransactionCharges.FIND('-') THEN BEGIN

                           // GenJournalLine1."Account No.":=TransactionCharges."Safaricom Account";
                           Bankzetu.RESET;
                           Bankzetu.SETRANGE("Paybill Bank",TRUE);
                           IF NOT Bankzetu.FINDSET THEN BEGIN
                               response:='01';
                               "response message":='Please setup Bank that is linked to Paybill';
                                     //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:='Please setup Bank that is linked to Paybill';
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='01';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
                               EXIT;
                           END;
                           Bankzetu.RESET;
                           Bankzetu.SETRANGE("Paybill Bank",TRUE);
                           IF Bankzetu.FINDSET THEN BEGIN
                               GenJournalLine1."Account No.":=Bankzetu."No.";
                           END;
                            GenJournalLine1.Amount:=-TransactionCharges."Safaricom Amount";

                            GenJournalLine1.VALIDATE(GenJournalLine1.Amount);
                          END;
                          END;
                          GenJournalLine1.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");
                          IF GenJournalLine1.Amount<>0 THEN
                          GenJournalLine1.INSERT;
               //End Safaricom==============================================================
               //TL==================================================================
                         //post settlement charge

                          GenJournalLine1.RESET;
                          GenJournalLine1.INIT;
                          GenJournalLine1."Journal Template Name":='PURCHASES';
                          GenJournalLine1."Journal Batch Name":='SpotCash';
                          GenJournalLine1."Document No.":=request_id;
                          GenJournalLine5.RESET;
                          GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
                          GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
                          IF GenJournalLine5.FIND('+') THEN BEGIN
                          GenJournalLine1."Line No.":=GenJournalLine5."Line No."+10000;
                          END;
                          //GenJournalLine."Line No.":=LineNo;
                          GenJournalLine1."Posting Date":=TODAY;
                          GenJournalLine1.Description:=COPYSTR(FORMAT(phone_no)+'-SpotCash TL Withdrawal Charges',1,40);
                          GenJournalLine1."Account Type":=GenJournalLine1."Account Type"::"G/L Account";
                          AccountHolders.RESET;
                          AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
                          IF AccountHolders.FIND('-') THEN BEGIN
                          GenJournalLine1."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";;
                          GenJournalLine1.VALIDATE(GenJournalLine1."Shortcut Dimension 1 Code");
                          GenJournalLine1."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                          GenJournalLine1.VALIDATE(GenJournalLine1."Shortcut Dimension 2 Code");
                          END;
                          TransactionTypes.RESET;
                          TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotCashWithdrawal);
                          IF TransactionTypes.FIND('-') THEN BEGIN
                          Amt2:=0;
                          EVALUATE(Amt2,amount);
                          TransactionCharges.RESET;
                          TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
                          TransactionCharges.SETFILTER("Minimum Amount",'<=%1',WithdrawalAmount);
                          TransactionCharges.SETFILTER("Maximum Amount",'>=%1',WithdrawalAmount);
                         // TransactionCharges.SETFILTER("Minimum Amount",'<=%1',Amt2);
                         // TransactionCharges.SETFILTER("Maximum Amount",'>=%1',Amt2);
                          IF TransactionCharges.FIND('-') THEN BEGIN

                            GenJournalLine1."Account No.":=TransactionCharges."TL Account";
                            GenJournalLine1.Amount:=-TransactionCharges."TL Amount";
                            GenJournalLine1.VALIDATE(GenJournalLine1.Amount);
                          END;
                          END;
                          //===============================Paybill Bank========================================
                                 GenJournalLine1."Account Type":=GenJournalLine1."Account Type"::"Bank Account";
                                 Bankzetu.RESET;
                                 Bankzetu.SETRANGE("Paybill Bank",TRUE);
                                 IF NOT Bankzetu.FINDSET THEN BEGIN
                                     response:='01';
                                     "response message":='Please setup Bank that is linked to Paybill';
                                     //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:='Please setup Bank that is linked to Paybill';
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='01';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
                                     EXIT;
                                 END;
                                 Bankzetu.RESET;
                                 Bankzetu.SETRANGE("Paybill Bank",TRUE);
                                 IF Bankzetu.FINDSET THEN BEGIN
                                     GenJournalLine1."Account No.":=Bankzetu."No.";
                                 END;
                          //===============================End Paybill Bank====================================
                          GenJournalLine1.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");
                          IF GenJournalLine1.Amount<>0 THEN
                          GenJournalLine1.INSERT;
               //End TL==============================================================

            {
            //post settlement charge

                GenJournalLine1.RESET;
                GenJournalLine1.INIT;
                GenJournalLine1."Journal Template Name":='PURCHASES';
                GenJournalLine1."Journal Batch Name":='SpotCash';
                GenJournalLine1."Document No.":=request_id;
                GenJournalLine5.RESET;
                GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
                GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
                IF GenJournalLine5.FIND('+') THEN BEGIN
                GenJournalLine1."Line No.":=GenJournalLine5."Line No."+10000;
                END;
                //GenJournalLine."Line No.":=LineNo;
                GenJournalLine1."Posting Date":=TODAY;
                GenJournalLine1.Description:=FORMAT(phone_no)+'-SpotCash Settlement Charges';
                GenJournalLine1."Account Type":=GenJournalLine1."Account Type"::"G/L Account";
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine1."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";;
                GenJournalLine1.VALIDATE(GenJournalLine1."Shortcut Dimension 1 Code");
                GenJournalLine1."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine1.VALIDATE(GenJournalLine1."Shortcut Dimension 2 Code");
                END;
                TransactionTypes.RESET;
                TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotCashWithdrawal);
                IF TransactionTypes.FIND('-') THEN BEGIN
                Amt2:=0;
                EVALUATE(Amt2,amount);
                TransactionCharges.RESET;
                TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
               // TransactionCharges.SETFILTER("Minimum Amount",'<=%1',Amt2);
               // TransactionCharges.SETFILTER("Maximum Amount",'>=%1',Amt2);
                IF TransactionCharges.FIND('-') THEN BEGIN

                  GenJournalLine1."Account No.":=TransactionCharges."Settlement GL Account";
                  GenJournalLine1.Amount:=-TransactionCharges."Settlement Amount";
                  GenJournalLine1.VALIDATE(GenJournalLine1.Amount);
                END;
                END;
                GenJournalLine1.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");
                IF GenJournalLine1.Amount<>0 THEN
                GenJournalLine1.INSERT;
                }

              // EXIT;
              //POST TRANSACTIONS
              GenJournalLine.RESET;
              GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
              GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
              CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post",GenJournalLine);

              {GenJournalLine2.RESET;
              GenJournalLine2.SETRANGE(GenJournalLine2."Journal Template Name",'PURCHASES');
              GenJournalLine2.SETRANGE(GenJournalLine2."Journal Batch Name",'SptCh-CHGS');
              CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post",GenJournalLine2); }
              CalcAvailableBalance(Account."No.");
              balance:=FORMAT(AvailableBalance);
              status:='1';
              response:='00';
              "response message":='success';
                                      //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:='Success';
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='00';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
            END;





















       // Request for Balance //Only for Savings Account==================================================================
        IF transaction_type=8 THEN BEGIN


              EnquieryAmount:=0;
              EVALUATE(EnquieryAmount,amount);

              CustomerBD.RESET;
              CustomerBD.GET(Account."Owner Member No");
              CalcAvailableBalance(Account."No.");
              GeneralSetup.GET;
              scharges.RESET;
              scharges.SETRANGE(Code,GeneralSetup."Spotcash Application Charge");
              IF scharges.FIND('-') THEN BEGIN
              Bal:=AvailableBalance-scharges."Charge Amount";
               EVALUATE(Amt,amount);
              IF Bal<Amt THEN BEGIN
                balance:=FORMAT(AvailableBalance);
                response:='01';  //ERROR('1...');
                "response message":='Insufficient Funds';
                                      //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:='Insufficient Funds';
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      SpotCashEntries.Balance:=(VendorBDBDBD.Balance);
                                      SpotCashEntries.Message:='01';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
                    EXIT;
              END;
              END;



        SPotcashMembers.RESET;
        SPotcashMembers.SETRANGE("Phone No",phone_no);
        IF SPotcashMembers.FIND('-') THEN BEGIN
          Account.GET(SPotcashMembers."Account No");

          GenJournalLine.RESET;
          GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
          GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
          GenJournalLine.DELETEALL;

          IF DefaultBatch.GET('PURCHASES','SpotCash') THEN
          DefaultBatch.DELETE;

          //POSTING MAIN TRANSACTION

          DefaultBatch.INIT;
          DefaultBatch."Journal Template Name":='PURCHASES';
          DefaultBatch.Name:='SpotCash';
          DefaultBatch.INSERT;

              GenJournalLine2.INIT;
              GenJournalLine2."Journal Template Name":='PURCHASES';
              GenJournalLine2."Journal Batch Name":='SpotCash';
              GenJournalLine2."Document No.":=request_id;
              GenJournalLine5.RESET;
              GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
              GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
              IF GenJournalLine5.FIND('+') THEN BEGIN
              GenJournalLine2."Line No.":=GenJournalLine5."Line No."+10000;
              END;
              //GenJournalLine."Line No.":=LineNo;

              GenJournalLine2."Posting Date":=TODAY;
              GenJournalLine2.Description:=COPYSTR(FORMAT(phone_no)+'-SpotCash Balance Enquiry',1,40);

              GenJournalLine2."Account Type":=GenJournalLine2."Account Type"::Vendor;
              GenJournalLine2."Account No.":=Account."No.";
              AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                      GenJournalLine2."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";
                      GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 1 Code");
                      GenJournalLine2."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                      GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 2 Code");
                END;
              TransactionTypes.RESET;
              TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery); //9999999
              IF TransactionTypes.FIND('-') THEN BEGIN
                TransactionCharges.RESET;
                TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
                IF TransactionCharges.FIND('-') THEN BEGIN
                 // GenJournalLine2."Account No.":=TransactionCharges."GL Account";
                  GenJournalLine2.Amount:=(TransactionCharges."Charge Amount"+TransactionCharges."Settlement Amount"+(TransactionCharges."Excise %"/100)*TransactionCharges."Charge Amount");
                  GenJournalLine2.Amount:=GenJournalLine2.Amount;
                END;
                GenJournalLine2.VALIDATE(GenJournalLine2.Amount);
              END;
            //END;

              GenJournalLine2.VALIDATE(GenJournalLine2.Amount);
             // GenJournalLine2."Bal. Account Type":=GenJournalLine2."Bal. Account Type"::"G/L Account";
              //GenJournalLine2."Bal. Account No.":=scharges."GL Account";
              GenJournalLine2.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");
              IF GenJournalLine2.Amount<>0 THEN
                GenJournalLine2.INSERT;
              END;

            //post sacco charge
            GenJournalLine.RESET;
            GenJournalLine.INIT;
            GenJournalLine."Journal Template Name":='PURCHASES';
            GenJournalLine."Journal Batch Name":='SpotCash';
            GenJournalLine."Document No.":=request_id;
            GenJournalLine5.RESET;
            GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
            GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
            IF GenJournalLine5.FIND('+') THEN BEGIN
            GenJournalLine."Line No.":=GenJournalLine5."Line No."+10000;
            END;
            //GenJournalLine."Line No.":=LineNo;
            GenJournalLine."Posting Date":=TODAY;
            GenJournalLine.Description:=COPYSTR(FORMAT(phone_no)+'-SpotCash Enquiry Charges',1,40);
            GenJournalLine."Account Type":=GenJournalLine."Account Type"::"G/L Account";
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 1 Code");
                GenJournalLine."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 2 Code");
                END;
            TransactionTypes.RESET;
            TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
            IF TransactionTypes.FIND('-') THEN BEGIN
              TransactionCharges.RESET;
              TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
              IF TransactionCharges.FIND('-') THEN BEGIN

                GenJournalLine."Account No.":=TransactionCharges."GL Account";
                GenJournalLine.Amount:=-TransactionCharges."Charge Amount";
                GenJournalLine.VALIDATE(GenJournalLine.Amount);
              END;
            END;
            GenJournalLine.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");
            IF GenJournalLine.Amount<>0 THEN
            GenJournalLine.INSERT;

             //post SETTLEMENT charge
            GenJournalLine.RESET;
            GenJournalLine.INIT;
            GenJournalLine."Journal Template Name":='PURCHASES';
            GenJournalLine."Journal Batch Name":='SpotCash';
            GenJournalLine."Document No.":=request_id;
            GenJournalLine5.RESET;
            GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
            GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
            IF GenJournalLine5.FIND('+') THEN BEGIN
            GenJournalLine."Line No.":=GenJournalLine5."Line No."+10000;
            END;
            //GenJournalLine."Line No.":=LineNo;
            GenJournalLine."Posting Date":=TODAY;
            GenJournalLine.Description:=COPYSTR(FORMAT(phone_no)+'-SpotCash Settlement Enquiry Charges',1,40);
            GenJournalLine."Account Type":=GenJournalLine."Account Type"::"G/L Account";
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 1 Code");
                GenJournalLine."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 2 Code");
                END;
            TransactionTypes.RESET;
            TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
            IF TransactionTypes.FIND('-') THEN BEGIN
              TransactionCharges.RESET;
              TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
              IF TransactionCharges.FIND('-') THEN BEGIN

                GenJournalLine."Account No.":=TransactionCharges."Settlement GL Account";
                GenJournalLine.Amount:=-TransactionCharges."Settlement Amount";
                GenJournalLine.VALIDATE(GenJournalLine.Amount);
              END;
            END;
            GenJournalLine.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");
            IF GenJournalLine.Amount<>0 THEN
            GenJournalLine.INSERT;



            //post execize duty charge


                GenJournalLine1.RESET;
                GenJournalLine1.INIT;
                GenJournalLine1."Journal Template Name":='PURCHASES';
                GenJournalLine1."Journal Batch Name":='SpotCash';
                GenJournalLine1."Document No.":=request_id;
                GenJournalLine5.RESET;
                GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
                GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
                IF GenJournalLine5.FIND('+') THEN BEGIN
                GenJournalLine1."Line No.":=GenJournalLine5."Line No."+10000;
                END;
                //GenJournalLine."Line No.":=LineNo;
                GenJournalLine1."Posting Date":=TODAY;
                GenJournalLine1.Description:=FORMAT(phone_no)+'-SpotCash Enquiry Charges';
                GenJournalLine1."Account Type":=GenJournalLine1."Account Type"::"G/L Account";
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine1."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";
                GenJournalLine1.VALIDATE(GenJournalLine1."Shortcut Dimension 1 Code");
                GenJournalLine1."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine1.VALIDATE(GenJournalLine1."Shortcut Dimension 2 Code");
                END;
                TransactionTypes.RESET;
                TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
                IF TransactionTypes.FIND('-') THEN BEGIN
                TransactionCharges.RESET;
                TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
                IF TransactionCharges.FIND('-') THEN BEGIN

                  GenJournalLine1."Account No.":=TransactionCharges."Excise G/L Account";
                  GenJournalLine1.Amount:=(TransactionCharges."Excise %"/100)*TransactionCharges."Charge Amount";
                  GenJournalLine1.Amount:=-1*GenJournalLine1.Amount;
                  GenJournalLine1.VALIDATE(GenJournalLine1.Amount);
                END;
                END;
                GenJournalLine1.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");
                IF GenJournalLine1.Amount<>0 THEN
                GenJournalLine1.INSERT;

             // EXIT;

              //POST TRANSACTIONS
              GenJournalLine.RESET;
              GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
              GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
              CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post",GenJournalLine);
              CalcAvailableBalance(Account."No.");
              balance:=FORMAT(AvailableBalance);
             response:='00';
             "response message":='success';
             SendSmsAlert.PostSMSCharge(phone_no,request_id);
                                      //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:='success';
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='00';
                                      IF amount<>''THEN BEGIN
                                        EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                          EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================

         END;
        // END;

      //End Only for Savings====================================================================================================



























      //Share Capital Balance===================================================================================================
       // Request for Balance
        IF transaction_type=109 THEN BEGIN
              CustomerBD.RESET;
              CustomerBD.GET(Account."Owner Member No");
              {
              AccountTypesBDBD.RESET;
              AccountTypesBDBD.SETRANGE("Share Capital",TRUE);
              IF AccountTypesBDBD.FINDSET THEN BEGIN
                 VendorBDBD.RESET;

                 VendorBDBD.SETRANGE("Account Type",AccountTypesBDBD.Code);
                 VendorBDBD.SETRANGE("Owner Member No",Account."Owner Member No");
                 IF VendorBDBD.FINDSET THEN BEGIN
                    Account.GET(VendorBDBD."No.");
                 END;
              END;
              }
              COMMIT;
              CalcAvailableBalance(Account."No.");
              GeneralSetup.GET;
              scharges.RESET;
              scharges.SETRANGE(Code,GeneralSetup."Spotcash Application Charge");
              IF scharges.FIND('-') THEN BEGIN
              CalcAvailableBalance(Account."No.");
              Bal:=AvailableBalance-scharges."Charge Amount";
               EVALUATE(Amt,amount);
              IF Bal<Amt THEN BEGIN
                balance:=FORMAT(AvailableBalance);

                //ERROR('%1..%2..%3..%4',Bal,Amt,AvailableBalance,Account."No.");
                response:='01'; //9999
                "response message":='Insufficient Funds';
                //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:='Insufficient Funds';
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      //balance:=FORMAT(VendorBDBDBD.Balance);
                                      SpotCashEntries.Balance:=(VendorBDBDBD.Balance);
                                      SpotCashEntries.Message:='01';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
                EXIT;
              END;
              END;

        SPotcashMembers.RESET;
        SPotcashMembers.SETRANGE("Phone No",phone_no);
        IF SPotcashMembers.FIND('-') THEN BEGIN
          Account.GET(SPotcashMembers."Account No");
                 VendorBDBD.RESET;
                 VendorBDBD.SETRANGE("Account Type",AccountTypesBDBD.Code);
                 VendorBDBD.SETRANGE("Owner Member No",Account."Owner Member No");
                 IF VendorBDBD.FINDSET THEN BEGIN
                    Account.GET(VendorBDBD."No.");
                 END;

          GenJournalLine.RESET;
          GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
          GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
          GenJournalLine.DELETEALL;

          IF DefaultBatch.GET('PURCHASES','SpotCash') THEN
          DefaultBatch.DELETE;

          //POSTING MAIN TRANSACTION

          DefaultBatch.INIT;
          DefaultBatch."Journal Template Name":='PURCHASES';
          DefaultBatch.Name:='SpotCash';
          DefaultBatch.INSERT;


              GenJournalLine2.INIT;
              GenJournalLine2."Journal Template Name":='PURCHASES';
              GenJournalLine2."Journal Batch Name":='SpotCash';
              GenJournalLine2."Document No.":=request_id;
              GenJournalLine5.RESET;
              GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
              GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
              IF GenJournalLine5.FIND('+') THEN BEGIN
              GenJournalLine2."Line No.":=GenJournalLine5."Line No."+10000;
              END;
              //GenJournalLine."Line No.":=LineNo;

              GenJournalLine2."Posting Date":=TODAY;
              GenJournalLine2.Description:=FORMAT(phone_no)+'-SpotCash Enquiry Charges';

              GenJournalLine2."Account Type":=GenJournalLine2."Account Type"::Vendor;
              GenJournalLine2."Account No.":=Account."No.";
              //Update From Which Account To Pay From======================================
              AccountTypesEnquiery.RESET;
              AccountTypesEnquiery.SETRANGE("Savings Account",TRUE);
              IF AccountTypesEnquiery.FINDSET THEN BEGIN
                 VendorBalanceEquiery.RESET;
                 VendorBalanceEquiery.SETRANGE("Account Type",AccountTypesEnquiery.Code);
                 VendorBalanceEquiery.SETRANGE("Owner Member No",Account."Owner Member No");
                 IF VendorBalanceEquiery.FINDSET THEN BEGIN
                    GenJournalLine2."Account Type":=GenJournalLine2."Account Type"::Vendor;
                    GenJournalLine2."Account No.":=VendorBalanceEquiery."No.";
                 END;
              END;
              //End Update From Which Account To Pay From===================================
              AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No."); //ERROR('1..'+Account."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine2."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";
                GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 1 Code");
                GenJournalLine2."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 2 Code");
                END;
              TransactionTypes.RESET;
              TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
              IF TransactionTypes.FIND('-') THEN BEGIN
                TransactionCharges.RESET;
                TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
                IF TransactionCharges.FIND('-') THEN BEGIN
                 // GenJournalLine2."Account No.":=TransactionCharges."GL Account";
                  GenJournalLine2.Amount:=(TransactionCharges."Charge Amount"+TransactionCharges."Settlement Amount"+(TransactionCharges."Excise %"/100)*TransactionCharges."Charge Amount");
                  GenJournalLine2.Amount:=GenJournalLine2.Amount;
                END;
                GenJournalLine2.VALIDATE(GenJournalLine2.Amount);
              END;
            //END;

              GenJournalLine2.VALIDATE(GenJournalLine2.Amount);
             // GenJournalLine2."Bal. Account Type":=GenJournalLine2."Bal. Account Type"::"G/L Account";
              //GenJournalLine2."Bal. Account No.":=scharges."GL Account";
              GenJournalLine2.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");
              IF GenJournalLine2.Amount<>0 THEN
                GenJournalLine2.INSERT;
              END;


      //post sacco charge
            GenJournalLine.RESET;
            GenJournalLine.INIT;
            GenJournalLine."Journal Template Name":='PURCHASES';
            GenJournalLine."Journal Batch Name":='SpotCash';
            GenJournalLine."Document No.":=request_id;
            GenJournalLine5.RESET;
            GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
            GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
            IF GenJournalLine5.FIND('+') THEN BEGIN
            GenJournalLine."Line No.":=GenJournalLine5."Line No."+10000;
            END;
            //GenJournalLine."Line No.":=LineNo;
            GenJournalLine."Posting Date":=TODAY;
            GenJournalLine.Description:=COPYSTR(FORMAT(phone_no)+'-SpotCash Enquiry Charges',1,40);
            GenJournalLine."Account Type":=GenJournalLine."Account Type"::"G/L Account";
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 1 Code");
                GenJournalLine."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 2 Code");
                END;
            TransactionTypes.RESET;
            TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
            IF TransactionTypes.FIND('-') THEN BEGIN
              TransactionCharges.RESET;
              TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
              IF TransactionCharges.FIND('-') THEN BEGIN

                GenJournalLine."Account No.":=TransactionCharges."GL Account";
                GenJournalLine.Amount:=-TransactionCharges."Charge Amount";
                GenJournalLine.VALIDATE(GenJournalLine.Amount);
              END;
            END;
            GenJournalLine.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");
            IF GenJournalLine.Amount<>0 THEN
            GenJournalLine.INSERT;

             //post SETTLEMENT charge
            GenJournalLine.RESET;
            GenJournalLine.INIT;
            GenJournalLine."Journal Template Name":='PURCHASES';
            GenJournalLine."Journal Batch Name":='SpotCash';
            GenJournalLine."Document No.":=request_id;
            GenJournalLine5.RESET;
            GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
            GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
            IF GenJournalLine5.FIND('+') THEN BEGIN
            GenJournalLine."Line No.":=GenJournalLine5."Line No."+10000;
            END;
            //GenJournalLine."Line No.":=LineNo;
            GenJournalLine."Posting Date":=TODAY;
            GenJournalLine.Description:=COPYSTR(FORMAT(phone_no)+'-SpotCash Settlement Enquiry Charges',1,40);
            GenJournalLine."Account Type":=GenJournalLine."Account Type"::"G/L Account";
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 1 Code");
                GenJournalLine."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 2 Code");
                END;
            TransactionTypes.RESET;
            TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
            IF TransactionTypes.FIND('-') THEN BEGIN
              TransactionCharges.RESET;
              TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
              IF TransactionCharges.FIND('-') THEN BEGIN

                GenJournalLine."Account No.":=TransactionCharges."Settlement GL Account";
                GenJournalLine.Amount:=-TransactionCharges."Settlement Amount";
                GenJournalLine.VALIDATE(GenJournalLine.Amount);
              END;
            END;
            GenJournalLine.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");
            IF GenJournalLine.Amount<>0 THEN
            GenJournalLine.INSERT;



            //post execize duty charge


                GenJournalLine1.RESET;
                GenJournalLine1.INIT;
                GenJournalLine1."Journal Template Name":='PURCHASES';
                GenJournalLine1."Journal Batch Name":='SpotCash';
                GenJournalLine1."Document No.":=request_id;
                GenJournalLine5.RESET;
                GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
                GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
                IF GenJournalLine5.FIND('+') THEN BEGIN
                GenJournalLine1."Line No.":=GenJournalLine5."Line No."+10000;
                END;
                //GenJournalLine."Line No.":=LineNo;
                GenJournalLine1."Posting Date":=TODAY;
                GenJournalLine1.Description:=FORMAT(phone_no)+'-SpotCash Enquiry Charges';
                GenJournalLine1."Account Type":=GenJournalLine1."Account Type"::"G/L Account";
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine1."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";
                GenJournalLine1.VALIDATE(GenJournalLine1."Shortcut Dimension 1 Code");
                GenJournalLine1."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine1.VALIDATE(GenJournalLine1."Shortcut Dimension 2 Code");
                END;
                TransactionTypes.RESET;
                TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
                IF TransactionTypes.FIND('-') THEN BEGIN
                TransactionCharges.RESET;
                TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
                IF TransactionCharges.FIND('-') THEN BEGIN

                  GenJournalLine1."Account No.":=TransactionCharges."Excise G/L Account";
                  GenJournalLine1.Amount:=(TransactionCharges."Excise %"/100)*TransactionCharges."Charge Amount";
                  GenJournalLine1.Amount:=-1*GenJournalLine1.Amount;
                  GenJournalLine1.VALIDATE(GenJournalLine1.Amount);
                END;
                END;
                GenJournalLine1.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");
                IF GenJournalLine1.Amount<>0 THEN
                GenJournalLine1.INSERT;






              //POST TRANSACTIONS
              GenJournalLine.RESET;
              GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
              GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
              CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post",GenJournalLine);

              AccountTypes2.RESET;
              AccountTypes2.SETRANGE("Share Capital",TRUE);
              AccountTypes2.FINDSET;
              CustAcc.GET(Account."Owner Member No");
              Account.RESET;
              Account.SETRANGE("Owner Member No",CustAcc."No.");
              Account.SETRANGE("Account Type",AccountTypes2.Code);
              Account.FINDSET;
              Account.CALCFIELDS(Balance);
              CalcAvailableBalance(Account."No.");
              balance:=FORMAT(Account.Balance); //ERROR(balance);
             response:='00';
             "response message":='success';
             //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:='Success';
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      //balance:=FORMAT(VendorBDBDBD.Balance);
                                      SpotCashEntries.Balance:=(Account.Balance);
                                      SpotCashEntries.Message:='00';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
         END;
        // END;
      //End Only for Share Capital Balance======================================================================================
























      //NWD Balance===================================================================================================
       // Request for Balance
        IF transaction_type=209 THEN BEGIN
              CustomerBD.RESET;
              CustomerBD.GET(Account."Owner Member No");

              COMMIT;
              CalcAvailableBalance(Account."No.");
              GeneralSetup.GET;
              scharges.RESET;
              scharges.SETRANGE(Code,GeneralSetup."Spotcash Application Charge");
              IF scharges.FIND('-') THEN BEGIN
              Bal:=AvailableBalance-scharges."Charge Amount";
               EVALUATE(Amt,amount);
              IF Bal<Amt THEN BEGIN
                balance:=FORMAT(AvailableBalance);
                response:='01';
                "response message":='Insufficient Funds';
                //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:='Insufficient Funds';
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      SpotCashEntries.Balance:=VendorBDBDBD.Balance;
                                      SpotCashEntries.Message:='01';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
                EXIT;
              END;
              END;

        SPotcashMembers.RESET;
        SPotcashMembers.SETRANGE("Phone No",phone_no);
        IF SPotcashMembers.FIND('-') THEN BEGIN
          Account.GET(SPotcashMembers."Account No");
                 VendorBDBD.RESET;
                 VendorBDBD.SETRANGE("Account Type",AccountTypesBDBD.Code);
                 VendorBDBD.SETRANGE("Owner Member No",Account."Owner Member No");
                 IF VendorBDBD.FINDSET THEN BEGIN
                    Account.GET(VendorBDBD."No.");
                 END;

          GenJournalLine.RESET;
          GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
          GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
          GenJournalLine.DELETEALL;

          IF DefaultBatch.GET('PURCHASES','SpotCash') THEN
          DefaultBatch.DELETE;

          //POSTING MAIN TRANSACTION

          DefaultBatch.INIT;
          DefaultBatch."Journal Template Name":='PURCHASES';
          DefaultBatch.Name:='SpotCash';
          DefaultBatch.INSERT;

              GenJournalLine2.INIT;
              GenJournalLine2."Journal Template Name":='PURCHASES';
              GenJournalLine2."Journal Batch Name":='SpotCash';
              GenJournalLine2."Document No.":=request_id;
              GenJournalLine5.RESET;
              GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
              GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
              IF GenJournalLine5.FIND('+') THEN BEGIN
              GenJournalLine2."Line No.":=GenJournalLine5."Line No."+10000;
              END;
              //GenJournalLine."Line No.":=LineNo;

              GenJournalLine2."Posting Date":=TODAY;
              GenJournalLine2.Description:=FORMAT(phone_no)+'-SpotCash Enquiry Charges';

              GenJournalLine2."Account Type":=GenJournalLine2."Account Type"::Vendor;
              GenJournalLine2."Account No.":=Account."No.";
              AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No."); //ERROR('1..'+Account."No.");
                //Update From Which Account To Pay From======================================
              AccountTypesEnquiery.RESET;
              AccountTypesEnquiery.SETRANGE("Savings Account",TRUE);
              IF AccountTypesEnquiery.FINDSET THEN BEGIN
                 VendorBalanceEquiery.RESET;
                 VendorBalanceEquiery.SETRANGE("Account Type",AccountTypesEnquiery.Code);
                 VendorBalanceEquiery.SETRANGE("Owner Member No",Account."Owner Member No");
                 IF VendorBalanceEquiery.FINDSET THEN BEGIN
                    GenJournalLine2."Account Type":=GenJournalLine2."Account Type"::Vendor;
                    GenJournalLine2."Account No.":=VendorBalanceEquiery."No.";
                 END;
              END;
              //End Update From Which Account To Pay From===================================
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine2."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";
                GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 1 Code");
                GenJournalLine2."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 2 Code");
                END;
              TransactionTypes.RESET;
              TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
              IF TransactionTypes.FIND('-') THEN BEGIN
                TransactionCharges.RESET;
                TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
                IF TransactionCharges.FIND('-') THEN BEGIN
                 // GenJournalLine2."Account No.":=TransactionCharges."GL Account";
                  GenJournalLine2.Amount:=(TransactionCharges."Charge Amount"+TransactionCharges."Settlement Amount"+(TransactionCharges."Excise %"/100)*TransactionCharges."Charge Amount");
                  GenJournalLine2.Amount:=GenJournalLine2.Amount;
                END;
                GenJournalLine2.VALIDATE(GenJournalLine2.Amount);
              END;
            //END;

              GenJournalLine2.VALIDATE(GenJournalLine2.Amount);
             // GenJournalLine2."Bal. Account Type":=GenJournalLine2."Bal. Account Type"::"G/L Account";
              //GenJournalLine2."Bal. Account No.":=scharges."GL Account";
              GenJournalLine2.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");
              IF GenJournalLine2.Amount<>0 THEN
                GenJournalLine2.INSERT;
              END;


      //post sacco charge
            GenJournalLine.RESET;
            GenJournalLine.INIT;
            GenJournalLine."Journal Template Name":='PURCHASES';
            GenJournalLine."Journal Batch Name":='SpotCash';
            GenJournalLine."Document No.":=request_id;
            GenJournalLine5.RESET;
            GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
            GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
            IF GenJournalLine5.FIND('+') THEN BEGIN
            GenJournalLine."Line No.":=GenJournalLine5."Line No."+10000;
            END;
            //GenJournalLine."Line No.":=LineNo;
            GenJournalLine."Posting Date":=TODAY;
            GenJournalLine.Description:=COPYSTR(FORMAT(phone_no)+'-SpotCash Enquiry Charges',1,40);
            GenJournalLine."Account Type":=GenJournalLine."Account Type"::"G/L Account";
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 1 Code");
                GenJournalLine."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 2 Code");
                END;
            TransactionTypes.RESET;
            TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
            IF TransactionTypes.FIND('-') THEN BEGIN
              TransactionCharges.RESET;
              TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
              IF TransactionCharges.FIND('-') THEN BEGIN

                GenJournalLine."Account No.":=TransactionCharges."GL Account";
                GenJournalLine.Amount:=-TransactionCharges."Charge Amount";
                GenJournalLine.VALIDATE(GenJournalLine.Amount);
              END;
            END;
            GenJournalLine.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");
            IF GenJournalLine.Amount<>0 THEN
            GenJournalLine.INSERT;

             //post SETTLEMENT charge
            GenJournalLine.RESET;
            GenJournalLine.INIT;
            GenJournalLine."Journal Template Name":='PURCHASES';
            GenJournalLine."Journal Batch Name":='SpotCash';
            GenJournalLine."Document No.":=request_id;
            GenJournalLine5.RESET;
            GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
            GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
            IF GenJournalLine5.FIND('+') THEN BEGIN
            GenJournalLine."Line No.":=GenJournalLine5."Line No."+10000;
            END;
            //GenJournalLine."Line No.":=LineNo;
            GenJournalLine."Posting Date":=TODAY;
            GenJournalLine.Description:=COPYSTR(FORMAT(phone_no)+'-SpotCash Settlement Enquiry Charges',1,40);
            GenJournalLine."Account Type":=GenJournalLine."Account Type"::"G/L Account";
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 1 Code");
                GenJournalLine."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 2 Code");
                END;
            TransactionTypes.RESET;
            TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
            IF TransactionTypes.FIND('-') THEN BEGIN
              TransactionCharges.RESET;
              TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
              IF TransactionCharges.FIND('-') THEN BEGIN

                GenJournalLine."Account No.":=TransactionCharges."Settlement GL Account";
                GenJournalLine.Amount:=-TransactionCharges."Settlement Amount";
                GenJournalLine.VALIDATE(GenJournalLine.Amount);
              END;
            END;
            GenJournalLine.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");
            IF GenJournalLine.Amount<>0 THEN
            GenJournalLine.INSERT;



            //post execize duty charge


                GenJournalLine1.RESET;
                GenJournalLine1.INIT;
                GenJournalLine1."Journal Template Name":='PURCHASES';
                GenJournalLine1."Journal Batch Name":='SpotCash';
                GenJournalLine1."Document No.":=request_id;
                GenJournalLine5.RESET;
                GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
                GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
                IF GenJournalLine5.FIND('+') THEN BEGIN
                GenJournalLine1."Line No.":=GenJournalLine5."Line No."+10000;
                END;
                //GenJournalLine."Line No.":=LineNo;
                GenJournalLine1."Posting Date":=TODAY;
                GenJournalLine1.Description:=FORMAT(phone_no)+'-SpotCash Enquiry Charges';
                GenJournalLine1."Account Type":=GenJournalLine1."Account Type"::"G/L Account";
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine1."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";
                GenJournalLine1.VALIDATE(GenJournalLine1."Shortcut Dimension 1 Code");
                GenJournalLine1."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine1.VALIDATE(GenJournalLine1."Shortcut Dimension 2 Code");
                END;
                TransactionTypes.RESET;
                TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
                IF TransactionTypes.FIND('-') THEN BEGIN
                TransactionCharges.RESET;
                TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
                IF TransactionCharges.FIND('-') THEN BEGIN

                  GenJournalLine1."Account No.":=TransactionCharges."Excise G/L Account";
                  GenJournalLine1.Amount:=(TransactionCharges."Excise %"/100)*TransactionCharges."Charge Amount";
                  GenJournalLine1.Amount:=-1*GenJournalLine1.Amount;
                  GenJournalLine1.VALIDATE(GenJournalLine1.Amount);
                END;
                END;
                GenJournalLine1.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");
                IF GenJournalLine1.Amount<>0 THEN
                GenJournalLine1.INSERT;






              //POST TRANSACTIONS
              GenJournalLine.RESET;
              GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
              GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
              CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post",GenJournalLine);
              CalcAvailableBalance(Account."No.");
              balance:=FORMAT(AvailableBalance);


              AccountTypes2.RESET;
              AccountTypes2.SETRANGE("NWD Account",TRUE);
              AccountTypes2.FINDSET;
              CustAcc.GET(Account."Owner Member No");
              Account.RESET;
              Account.SETRANGE("Owner Member No",CustAcc."No.");
              Account.SETRANGE("Account Type",AccountTypes2.Code);
              Account.FINDSET;
              Account.CALCFIELDS(Balance);
              CalcAvailableBalance(Account."No.");
              balance:=FORMAT(Account.Balance); //ERROR(balance);
             response:='00';
             "response message":='success';
             //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:='Success';
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                     // balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='00';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
         END;
        // END;
      //End Only for NWD Balance======================================================================================






























      //Request Loan Balance===============================================================
        IF transaction_type=10 THEN BEGIN
        SPotcashMembers.RESET;
        SPotcashMembers.SETRANGE("Phone No",phone_no);
        IF SPotcashMembers.FIND('-') THEN BEGIN
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
             LoanOwner:='';
              LoanString:='';
              SPotcashMembers.RESET;
              SPotcashMembers.SETRANGE("Phone No",phone_no);
              IF SPotcashMembers.FIND('-') THEN BEGIN
                 LoanOwner:=SPotcashMembers."Member Code";
                 LoanAccountTypes.RESET;
                 LoanAccountTypes.SETRANGE(Loan,TRUE);
                 IF LoanAccountTypes.FINDSET THEN BEGIN
                    VendorLoans.RESET;
                    VendorLoans.SETRANGE("Account Type",LoanAccountTypes.Code);
                    VendorLoans.SETRANGE("Owner Member No",LoanOwner);
                    VendorLoans.SETRANGE(Status,VendorLoans.Status::Active);
                    IF VendorLoans.FINDSET THEN BEGIN
                       LoanString:='[';
                      // LoanString+='[';
                       REPEAT
                           VendorLoans.CALCFIELDS(Balance);
                           LoanString+='{"LoanNo":'+'"'+VendorLoans."No."+'",';
                           LoanString+='"LoanType":'+'"'+VendorLoans.Name+'",';
                           LoanString+='"LoanBalance":'+'"'+FORMAT(VendorLoans.Balance,0,'<Precision,2:2><Standard Format,0>')+'"},';
                       UNTIL VendorLoans.NEXT=0;
                       LoanString:=COPYSTR(LoanString,1,STRLEN(LoanString)-1);
                       LoanString:=LoanString+']';
                    END;
                 END;
             END;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


          Account.GET(SPotcashMembers."Account No");
          Member.GET(Account."Owner Member No");
          CustomerBD.RESET;
          CustomerBD.GET(Member."No.");
          SCaccounts.RESET;
          SCaccounts.SETRANGE("Owner Member No",Account."Owner Member No");
          SCaccounts.SETRANGE("Account Type",'LOAN');
          IF SCaccounts.FINDSET THEN BEGIN
          REPEAT
          SCaccounts.CALCFIELDS("Balance (LCY)");
          IF SCaccounts."Balance (LCY)"<>0 THEN BEGIN
          balanc:=SCaccounts."Balance (LCY)";
          balance:=balance+','+SCaccounts.Name+':'+FORMAT(-1*balanc);
          END;
          UNTIL SCaccounts.NEXT=0;
          END;



          GenJournalLine.RESET;
          GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
          GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
          GenJournalLine.DELETEALL;

          IF DefaultBatch.GET('PURCHASES','SpotCash') THEN
          DefaultBatch.DELETE;

          //POSTING MAIN TRANSACTION
              AccountTypesBDBD.RESET;
              AccountTypesBDBD.SETRANGE("Savings Account",TRUE);
              IF AccountTypesBDBD.FINDSET THEN BEGIN
                 VendorBDBD.RESET;
                 VendorBDBD.SETRANGE("Account Type",AccountTypesBDBD.Code);
                 VendorBDBD.SETRANGE("Owner Member No",Account."Owner Member No");
                 IF VendorBDBD.FINDSET THEN BEGIN
                    Account.GET(VendorBDBD."No.");
                 END;
              END;
              CalcAvailableBalance(Account."No.");
              GeneralSetup.GET;
              scharges.RESET;
              scharges.SETRANGE(Code,GeneralSetup."Spotcash Application Charge");
              IF scharges.FIND('-') THEN BEGIN
              Bal:=AvailableBalance-scharges."Charge Amount";
               EVALUATE(Amt,amount);
              IF Bal<Amt THEN BEGIN
                balance:=FORMAT(AvailableBalance);
                response:='01';
                "response message":='Insufficient Funds';
                    //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:='Insufficient Funds';
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:=LoanString;
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
                EXIT;
              END;
              END;


          DefaultBatch.INIT;
          DefaultBatch."Journal Template Name":='PURCHASES';
          DefaultBatch.Name:='SpotCash';
          DefaultBatch.INSERT;

              GenJournalLine2.INIT;
              GenJournalLine2."Journal Template Name":='PURCHASES';
              GenJournalLine2."Journal Batch Name":='SpotCash';
              GenJournalLine2."Document No.":=request_id;
              GenJournalLine5.RESET;
              GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
              GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
              IF GenJournalLine5.FIND('+') THEN BEGIN
              GenJournalLine2."Line No.":=GenJournalLine5."Line No."+10000;
              END;
              //GenJournalLine."Line No.":=LineNo;

              GenJournalLine2."Posting Date":=TODAY;
              GenJournalLine2.Description:='Loan Balance SpotCash Enquiry Charges';

              GenJournalLine2."Account Type":=GenJournalLine2."Account Type"::Vendor;
              GenJournalLine2."Account No.":=Account."No.";
              //Update From Which Account To Pay From======================================
              AccountTypesEnquiery.RESET;
              AccountTypesEnquiery.SETRANGE("Savings Account",TRUE);
              IF AccountTypesEnquiery.FINDSET THEN BEGIN
                 VendorBalanceEquiery.RESET;
                 VendorBalanceEquiery.SETRANGE("Account Type",AccountTypesEnquiery.Code);
                 VendorBalanceEquiery.SETRANGE("Owner Member No",Account."Owner Member No");
                 IF VendorBalanceEquiery.FINDSET THEN BEGIN
                    GenJournalLine2."Account Type":=GenJournalLine2."Account Type"::Vendor;
                    GenJournalLine2."Account No.":=VendorBalanceEquiery."No.";
                 END;
              END;
              //End Update From Which Account To Pay From===================================
              AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No."); //ERROR('1..'+Account."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine2."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";
                GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 1 Code");
                GenJournalLine2."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 2 Code");
                END;
              TransactionTypes.RESET;
              TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
              IF TransactionTypes.FIND('-') THEN BEGIN
                TransactionCharges.RESET;
                TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
                IF TransactionCharges.FIND('-') THEN BEGIN
                 // GenJournalLine2."Account No.":=TransactionCharges."GL Account";
                  GenJournalLine2.Amount:=(TransactionCharges."Charge Amount"+TransactionCharges."Settlement Amount"+(TransactionCharges."Excise %"/100)*TransactionCharges."Charge Amount");
                  GenJournalLine2.Amount:=GenJournalLine2.Amount;
                END;
                GenJournalLine2.VALIDATE(GenJournalLine2.Amount);
              END;
            //END;

              GenJournalLine2.VALIDATE(GenJournalLine2.Amount);
             // GenJournalLine2."Bal. Account Type":=GenJournalLine2."Bal. Account Type"::"G/L Account";
              //GenJournalLine2."Bal. Account No.":=scharges."GL Account";
              GenJournalLine2.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");
              IF GenJournalLine2.Amount<>0 THEN
                GenJournalLine2.INSERT;
              END;


      //post sacco charge
            GenJournalLine.RESET;
            GenJournalLine.INIT;
            GenJournalLine."Journal Template Name":='PURCHASES';
            GenJournalLine."Journal Batch Name":='SpotCash';
            GenJournalLine."Document No.":=request_id;
            GenJournalLine5.RESET;
            GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
            GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
            IF GenJournalLine5.FIND('+') THEN BEGIN
            GenJournalLine."Line No.":=GenJournalLine5."Line No."+10000;
            END;
            //GenJournalLine."Line No.":=LineNo;
            GenJournalLine."Posting Date":=TODAY;
            GenJournalLine.Description:=COPYSTR('Loan Balances SpotCash Enquiry Charges',1,40);
            GenJournalLine."Account Type":=GenJournalLine."Account Type"::"G/L Account";
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 1 Code");
                GenJournalLine."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 2 Code");
                END;
            TransactionTypes.RESET;
            TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
            IF TransactionTypes.FIND('-') THEN BEGIN
              TransactionCharges.RESET;
              TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
              IF TransactionCharges.FIND('-') THEN BEGIN

                GenJournalLine."Account No.":=TransactionCharges."GL Account";
                GenJournalLine.Amount:=-TransactionCharges."Charge Amount";
                GenJournalLine.VALIDATE(GenJournalLine.Amount);
              END;
            END;
            GenJournalLine.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");
            IF GenJournalLine.Amount<>0 THEN
            GenJournalLine.INSERT;

             //post SETTLEMENT charge
            GenJournalLine.RESET;
            GenJournalLine.INIT;
            GenJournalLine."Journal Template Name":='PURCHASES';
            GenJournalLine."Journal Batch Name":='SpotCash';
            GenJournalLine."Document No.":=request_id;
            GenJournalLine5.RESET;
            GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
            GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
            IF GenJournalLine5.FIND('+') THEN BEGIN
            GenJournalLine."Line No.":=GenJournalLine5."Line No."+10000;
            END;
            //GenJournalLine."Line No.":=LineNo;
            GenJournalLine."Posting Date":=TODAY;
            GenJournalLine.Description:=COPYSTR(FORMAT(phone_no)+'-SpotCash Settlement Enquiry Charges',1,40);
            GenJournalLine."Account Type":=GenJournalLine."Account Type"::"G/L Account";
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 1 Code");
                GenJournalLine."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 2 Code");
                END;
            TransactionTypes.RESET;
            TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
            IF TransactionTypes.FIND('-') THEN BEGIN
              TransactionCharges.RESET;
              TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
              IF TransactionCharges.FIND('-') THEN BEGIN

                GenJournalLine."Account No.":=TransactionCharges."Settlement GL Account";
                GenJournalLine.Amount:=-TransactionCharges."Settlement Amount";
                GenJournalLine.VALIDATE(GenJournalLine.Amount);
              END;
            END;
            GenJournalLine.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");
            IF GenJournalLine.Amount<>0 THEN
            GenJournalLine.INSERT;



            //post execize duty charge


                GenJournalLine1.RESET;
                GenJournalLine1.INIT;
                GenJournalLine1."Journal Template Name":='PURCHASES';
                GenJournalLine1."Journal Batch Name":='SpotCash';
                GenJournalLine1."Document No.":=request_id;
                GenJournalLine5.RESET;
                GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
                GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
                IF GenJournalLine5.FIND('+') THEN BEGIN
                GenJournalLine1."Line No.":=GenJournalLine5."Line No."+10000;
                END;
                //GenJournalLine."Line No.":=LineNo;
                GenJournalLine1."Posting Date":=TODAY;
                GenJournalLine1.Description:=FORMAT(phone_no)+'-SpotCash Enquiry Charges';
                GenJournalLine1."Account Type":=GenJournalLine1."Account Type"::"G/L Account";
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine1."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";
                GenJournalLine1.VALIDATE(GenJournalLine1."Shortcut Dimension 1 Code");
                GenJournalLine1."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine1.VALIDATE(GenJournalLine1."Shortcut Dimension 2 Code");
                END;
                TransactionTypes.RESET;
                TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
                IF TransactionTypes.FIND('-') THEN BEGIN
                TransactionCharges.RESET;
                TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
                IF TransactionCharges.FIND('-') THEN BEGIN

                  GenJournalLine1."Account No.":=TransactionCharges."Excise G/L Account";
                  GenJournalLine1.Amount:=(TransactionCharges."Excise %"/100)*TransactionCharges."Charge Amount";
                  GenJournalLine1.Amount:=-1*GenJournalLine1.Amount;
                  GenJournalLine1.VALIDATE(GenJournalLine1.Amount);
                END;
                END;
                GenJournalLine1.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");
                IF GenJournalLine1.Amount<>0 THEN
                GenJournalLine1.INSERT;



              //POST TRANSACTIONS
              GenJournalLine.RESET;
              GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
              GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
              CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post",GenJournalLine);
              //CalcAvailableBalance(Account."No.");
              balanc:=balanc*-1;
             // balance:=FORMAT(balanc);
             balance:=balance;
             response:='00';
             "response message":='success';
             message:=LoanString;
                 //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:='Success';
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:=LoanString;
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
         END;




      //Loan Balances==================================================================================================
























      //Loan Details======================================================================================================
      //Request Loan Balance===============================================================
        IF transaction_type=101 THEN BEGIN
              LoanOwner:='';
              LoanString:='';
              SPotcashMembers.RESET;
              SPotcashMembers.SETRANGE("Phone No",phone_no);
              IF SPotcashMembers.FIND('-') THEN BEGIN
                 LoanOwner:=SPotcashMembers."Member Code";
                 LoanAccountTypes.RESET;
                 LoanAccountTypes.SETRANGE(Loan,TRUE);
                 IF LoanAccountTypes.FINDSET THEN BEGIN
                    VendorLoans.RESET;
                    VendorLoans.SETRANGE("Account Type",LoanAccountTypes.Code);
                    VendorLoans.SETRANGE("Owner Member No",LoanOwner);
                    VendorLoans.SETRANGE(Status,VendorLoans.Status::Active);
                    IF VendorLoans.FINDSET THEN BEGIN
                       LoanString:='[';
                      // LoanString+='[';
                       REPEAT
                           LoanString+='{"LoanNo":'+'"'+VendorLoans."No."+'",';
                           LoanString+='"LoanType":'+'"'+VendorLoans.Name+'",';
                           LoanString+='"LoanBalance":'+'"'+FORMAT(VendorLoans.Balance,0,'<Precision,2:2><Standard Format,0>')+'"},';
                       UNTIL VendorLoans.NEXT=0;
                       LoanString:=COPYSTR(LoanString,1,STRLEN(LoanString)-1);
                       LoanString:=LoanString+']';
                    END;
                 END;
             END;
             response:='00';
             "response message":=LoanString;
                 //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:=LoanString;
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      SpotCashEntries.Balance:=(VendorBDBDBD.Balance);
                                      SpotCashEntries.Message:=LoanString;
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
        END;










      //Loan Balances==================================================================================================
      //End Loan Details==================================================================================================



















      // Spotcash Deposit
       IF transaction_type=5 THEN BEGIN

              // DELETE ANY LINE ITEM THAT MAY BE PRESENT
                GenJournalLine.RESET;
                GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
                GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
                GenJournalLine.DELETEALL;

                IF DefaultBatch.GET('PURCHASES','SpotCash') THEN
                DefaultBatch.DELETE;

                //POSTING MAIN TRANSACTION

                DefaultBatch.INIT;
                DefaultBatch."Journal Template Name":='PURCHASES';
                DefaultBatch.Name:='SpotCash';
                DefaultBatch.INSERT;

                GenJournalLine.INIT;
                GenJournalLine."Journal Template Name":='PURCHASES';
                GenJournalLine."Journal Batch Name":='SpotCash';
                GenJournalLine."Document No.":=request_id;
                GenJournalLine."External Document No.":=request_id;
                GenJournalLine."Line No.":=10000;
                SCaccounts.GET(SPotcashMembers."Account No");
                GenJournalLine."Account Type":=GenJournalLine."Account Type"::Vendor;
                GenJournalLine."Account No.":=SCaccounts."No.";
                GenJournalLine.VALIDATE(GenJournalLine."Account No.");
                GenJournalLine."Posting Date":=TODAY;

                ///////////////
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Members."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine."Shortcut Dimension 1 Code":=AccountHolders."Global Dimension 1 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 1 Code");
                GenJournalLine."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 2 Code");
                END;
                GenJournalLine.Description:=FORMAT(phone_no)+'-Spotcash Deposit';
                //GenJournalLine."Currency Code":="Currency Code";
                GenJournalLine.VALIDATE(GenJournalLine."Currency Code");
                EVALUATE(GenJournalLine.Amount,amount);
                GenJournalLine.Amount:=-GenJournalLine.Amount;


                GenJournalLine.VALIDATE(GenJournalLine.Amount);

                GenJournalLine."Bal. Account Type":=GenJournalLine."Bal. Account Type"::"G/L Account";
                GeneralSetup.GET;
                GenJournalLine."Bal. Account No.":=GeneralSetup."SpotCash Control Account";
                //===============================Paybill Bank========================================
                                 GenJournalLine."Bal. Account Type":=GenJournalLine1."Bal. Account Type"::"Bank Account";
                                 Bankzetu.RESET;
                                 Bankzetu.SETRANGE("Paybill Bank",TRUE);
                                 IF NOT Bankzetu.FINDSET THEN BEGIN
                                     response:='01';
                                     "response message":='Please setup Bank that is linked to Paybill';
                                     EXIT;
                                 END;
                                 Bankzetu.RESET;
                                 Bankzetu.SETRANGE("Paybill Bank",TRUE);
                                 IF Bankzetu.FINDSET THEN BEGIN
                                     GenJournalLine."Bal. Account No.":=Bankzetu."No.";
                                 END;
                //===============================End Paybill Bank====================================
                GenJournalLine.VALIDATE(GenJournalLine."Bal. Account No.");
                GenJournalLine.VALIDATE(GenJournalLine."Bal. Account No.");
                GenJournalLine.VALIDATE("Shortcut Dimension 1 Code",Dimensioncode);
                IF GenJournalLine.Amount<>0 THEN
                  GenJournalLine.INSERT;
                  //POST TRANSACTIONS
                  GenJournalLine.RESET;
                  GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
                  GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
                  CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post",GenJournalLine);
                  CalcAvailableBalance(Account."No.");
                  balance:=FORMAT(AvailableBalance);
                  status:='1';
                  response:='00';
                  "response message":='success';
                      //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:='Success';
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      SpotCashEntries.Balance:=(VendorBDBDBD.Balance);
                                      SpotCashEntries.Message:='00';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
                END;













         // Reversal
       IF transaction_type=100 THEN BEGIN

              // DELETE ANY LINE ITEM THAT MAY BE PRESENT
                GenJournalLine.RESET;
                GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
                GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
                GenJournalLine.DELETEALL;

                IF DefaultBatch.GET('PURCHASES','SpotCash') THEN
                DefaultBatch.DELETE;

                //POSTING MAIN TRANSACTION

                DefaultBatch.INIT;
                DefaultBatch."Journal Template Name":='PURCHASES';
                DefaultBatch.Name:='SpotCash';
                DefaultBatch.INSERT;
                GeneralSetup.GET;
                orequest:=DELSTR(request_id,10,1);

          GLEntry.RESET;
          GLEntry.SETRANGE("Document No.",orequest);
         // GLEntry.SETFILTER("G/L Account No.",'<>%1',GeneralSetup."Withdrawable Deposits G/L Acc");
          //GLEntry.SETFILTER("G/L Account No.",'<>%1','200-101|200-102|200-103|200-104|200-105|200-106|200-107|200-108|200-109|200-100|200-111');
          IF GLEntry.FINDSET THEN BEGIN
            REPEAT
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                        GLEntry2.RESET;
                        GLEntry2.SETRANGE("Posting Date",GLEntry."Posting Date");
                        GLEntry2.SETRANGE("Document No.",GLEntry."Document No.");
                        GLEntry2.SETRANGE(Reversed,FALSE);
                        IF GLEntry2.FINDSET THEN BEGIN
                           currentnum:=0;
                           REPEAT
                                       CLEAR(ReversalEntry);
                                       found:=FALSE;
                                       FOR j:=1 TO currentnum DO  BEGIN
                                           IF (transactions[j]=GLEntry2."Transaction No.") THEN BEGIN
                                               found:=TRUE;
                                           END;
                                       END;
                                       IF (found=FALSE) THEN BEGIN
                                           ReversalEntry.ReverseTransaction2(GLEntry2."Transaction No.");
                                           currentnum+=1;
                                           transactions[currentnum]:=GLEntry2."Transaction No."
                                      END;
                                      Transactions2.RESET;
                                      Transactions2.SETRANGE(No,GLEntry2."Document No.");
                                      IF Transactions2.FINDSET THEN BEGIN
                                         REPEAT
                                            Transactions2.Reversed:=TRUE;
                                            Transactions2.MODIFY;
                                         UNTIL Transactions2.NEXT=0;
                                      END;

                           UNTIL GLEntry2.NEXT=0;
                          // MESSAGE('Reversed Successfully');
                        END;
            //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
                                                        {
                                                            AccountsReversalExcempt.RESET;
                                                            AccountsReversalExcempt.SETRANGE(Account,GLEntry."G/L Account No.");
                                                            IF NOT AccountsReversalExcempt.FINDFIRST THEN BEGIN
                                                            GenJournalLine.INIT;
                                                            GenJournalLine."Journal Template Name":='PURCHASES';
                                                            GenJournalLine."Journal Batch Name":='SpotCash';
                                                            GenJournalLine."Document No.":=request_id;
                                                            GenJournalLine."External Document No.":=request_id;
                                                            GenJournalLine5.RESET;
                                                            GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
                                                            GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
                                                            IF GenJournalLine5.FIND('+') THEN BEGIN
                                                            GenJournalLine."Line No.":=GenJournalLine5."Line No."+10000;
                                                            END;
                                                            GenJournalLine."Account Type":=GenJournalLine."Account Type"::"G/L Account";
                                                            GenJournalLine."Account No.":=GLEntry."G/L Account No.";
                                                            GenJournalLine.VALIDATE(GenJournalLine."Account No.");
                                                            GenJournalLine."Posting Date":=TODAY;
                                                            GenJournalLine."Shortcut Dimension 1 Code":=GLEntry."Global Dimension 1 Code";
                                                            GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 1 Code");
                                                            GenJournalLine.Description:=FORMAT(phone_no)+'-Spotcash Reversal';
                                                            //GenJournalLine."Currency Code":="Currency Code";
                                                            //GenJournalLine.VALIDATE(GenJournalLine."Currency Code");
                                                           /// EVALUATE(GenJournalLine.Amount,amount);
                                                            GenJournalLine.Amount:=-1*GLEntry.Amount;
                                                            GenJournalLine.VALIDATE(GenJournalLine.Amount);
                                                            GenJournalLine."Bal. Account Type":=GenJournalLine."Bal. Account Type"::Vendor;
                                                            GLEntry2.RESET;
                                                            GLEntry2.SETRANGE("Document No.",orequest);
                                                            GLEntry2.SETRANGE("Bal. Account Type",GLEntry2."Bal. Account Type"::Vendor);
                                                            IF GLEntry2.FIND('-') THEN BEGIN
                                                            GenJournalLine."Bal. Account No.":=GLEntry2."Bal. Account No.";
                                                            END;
                                                            GenJournalLine.VALIDATE(GenJournalLine."Bal. Account No.");
                                                            GenJournalLine.VALIDATE("Shortcut Dimension 1 Code",Dimensioncode);
                                                            IF GenJournalLine.Amount<>0 THEN
                                                              GenJournalLine.INSERT;
                                                          END;
                                                          }
             UNTIL GLEntry.NEXT=0;

          END;

               //POST TRANSACTIONS
               //   GenJournalLine.RESET;
               //   GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
               //   GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
               //   IF GenJournalLine.FIND('-') THEN BEGIN
                //    CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post",GenJournalLine);
                    CalcAvailableBalance(Account."No.");
                    balance:=FORMAT(AvailableBalance);
                    status:='1';
                    response:='00';
                    "response message":='success';
                        //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:='Success';
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      SpotCashEntries.Balance:=(VendorBDBDBD.Balance);
                                      SpotCashEntries.Message:='00';
                                      IF amount<>''THEN BEGIN
                                        EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                          EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
               //     END;
                END;
























        //Buy Airtime
         IF transaction_type=3 THEN BEGIN
             //99
             AirtimeAmount:=0;
             EVALUATE(AirtimeAmount,amount);
              CalcAvailableBalance(Account."No.");
              GeneralSetup.GET;
              IF Account."Account Remarks"<>'' THEN BEGIN
           balance:=FORMAT(AvailableBalance);
           response:='01';
            "response message":='Transaction Failed, Contact the nearest Chai Sacco Branch';
            EXIT;
          END;
            //  scharges.RESET;
             // scharges.SETRANGE(Code,GeneralSetup."Mobile Banking Withdrawal");
             // IF scharges.FIND('-') THEN BEGIN
              Bal:=AvailableBalance;
               EVALUATE(Amt,amount);
              IF Bal<Amt THEN BEGIN
                balance:=FORMAT(AvailableBalance);
                response:='01';
                "response message":='Insufficient Funds';
                EXIT;
              END;
              //post airtime
              // DELETE ANY LINE ITEM THAT MAY BE PRESENT
                GenJournalLine.RESET;
                GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
                GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
                GenJournalLine.DELETEALL;

                IF DefaultBatch.GET('PURCHASES','SpotCash') THEN
                DefaultBatch.DELETE;

                //POSTING MAIN TRANSACTION

                DefaultBatch.INIT;
                DefaultBatch."Journal Template Name":='PURCHASES';
                DefaultBatch.Name:='SpotCash';
                DefaultBatch.INSERT;

                GenJournalLine.INIT;
                GenJournalLine."Journal Template Name":='PURCHASES';
                GenJournalLine."Journal Batch Name":='SpotCash';
                GenJournalLine."Document No.":=request_id;
                GenJournalLine."External Document No.":=request_id;
                GenJournalLine."Line No.":=10000;
                GenJournalLine."Account Type":=GenJournalLine."Account Type"::Vendor;
                GenJournalLine."Account No.":=Account."No.";
                GenJournalLine.VALIDATE(GenJournalLine."Account No.");
                GenJournalLine."Posting Date":=TODAY;

                ///////////////
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Members."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                CustomerBDBD.RESET;
                CustomerBDBD.GET(AccountHolders."Owner Member No");
                GenJournalLine."Shortcut Dimension 1 Code":=CustomerBDBD."Global Dimension 1 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 1 Code");
                GenJournalLine."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 2 Code");
                END;
                GenJournalLine.Description:=FORMAT(phone_no)+'-Spotcash Airtime Purchase';
                //GenJournalLine."Currency Code":="Currency Code";
                GenJournalLine.VALIDATE(GenJournalLine."Currency Code");

                EVALUATE(GenJournalLine.Amount,amount);


                GenJournalLine.VALIDATE(GenJournalLine.Amount);

                GenJournalLine."Bal. Account Type":=GenJournalLine."Bal. Account Type"::"Bank Account";
                Bankzetu.RESET;
                Bankzetu.SETRANGE("Paybill Bank",TRUE);
                Bankzetu.FINDSET;
                GenJournalLine."Bal. Account No.":=Bankzetu."No.";
                GenJournalLine.VALIDATE(GenJournalLine."Bal. Account No.");
                GenJournalLine.VALIDATE("Shortcut Dimension 1 Code",CustomerBDBD."Global Dimension 1 Code");
                IF GenJournalLine.Amount<>0 THEN
                  GenJournalLine.INSERT;
                //END;

               //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

                //Total Charges=========================================================================================
              GenJournalLine2.INIT;
              GenJournalLine2."Journal Template Name":='PURCHASES';
              GenJournalLine2."Journal Batch Name":='SpotCash';
              GenJournalLine2."Document No.":=request_id;
              GenJournalLine5.RESET;
              GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
              GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
              IF GenJournalLine5.FIND('+') THEN BEGIN
              GenJournalLine2."Line No.":=GenJournalLine5."Line No."+10000;
              END;
              //GenJournalLine."Line No.":=LineNo;

              GenJournalLine2."Posting Date":=TODAY;
              GenJournalLine2.Description:=FORMAT(phone_no)+'-Sacco Withdrawal Charges';

              GenJournalLine2."Account Type":=GenJournalLine2."Account Type"::Vendor;
              GenJournalLine2."Account No.":=Account."No.";
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine2."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";;
                GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 1 Code");
                GenJournalLine2."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 2 Code");
                END;
              TransactionTypes.RESET;
              TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotCashBuyAirtime);
              IF TransactionTypes.FINDSET THEN BEGIN
                TransactionCharges.RESET; //ERROR('%1',TransactionTypes.Type);
                TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
                IF TransactionCharges.FIND('-') THEN BEGIN
                  GenJournalLine2.Amount:=(TransactionCharges."Percentage of Amount"*AirtimeAmount/100)+((TransactionCharges."Percentage of Amount"*AirtimeAmount/100)*TransactionCharges."Excise %"/100);
                  GenJournalLine2.Amount:=GenJournalLine2.Amount; //ERROR('%1',GenJournalLine2.Amount);


                GenJournalLine2.VALIDATE(GenJournalLine2.Amount);


              GenJournalLine2.VALIDATE(GenJournalLine2.Amount);
             // GenJournalLine2."Bal. Account Type":=GenJournalLine2."Bal. Account Type"::"G/L Account";
             // GenJournalLine2."Bal. Account No.":=TransactionCharges."GL Account";
              GenJournalLine2.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");;
              IF GenJournalLine2.Amount<>0 THEN
                GenJournalLine2.INSERT;
              END;
              END;

              //End Total Chai-sacco Charge==================================================================

            //post sacco charge======================================================================
            GenJournalLine.RESET;
            GenJournalLine.INIT;
            GenJournalLine."Journal Template Name":='PURCHASES';
            GenJournalLine."Journal Batch Name":='SpotCash';
            GenJournalLine."Document No.":=request_id;
            GenJournalLine5.RESET;
            GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
            GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
            IF GenJournalLine5.FIND('+') THEN BEGIN
            GenJournalLine."Line No.":=GenJournalLine5."Line No."+10000;
            END;
            //GenJournalLine."Line No.":=LineNo;
            GenJournalLine."Posting Date":=TODAY;
            GenJournalLine.Description:=COPYSTR(FORMAT(phone_no)+'-SpotCash Airtime Purchase Charges',1,40);
            GenJournalLine."Account Type":=GenJournalLine."Account Type"::"G/L Account";
            AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Members."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                    GenJournalLine."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";;
                    GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 1 Code");
                    GenJournalLine."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                    GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 2 Code");
                END;
            TransactionTypes.RESET;
            TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotCashBuyAirtime);
            IF TransactionTypes.FIND('-') THEN BEGIN
              TransactionCharges.RESET;
              TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
             // TransactionCharges.SETFILTER("Minimum Amount",'<=%1',WithdrawalAmount);
             // TransactionCharges.SETFILTER("Maximum Amount",'>=%1',WithdrawalAmount);
              IF TransactionCharges.FIND('-') THEN BEGIN

                GenJournalLine."Account No.":=TransactionCharges."GL Account";
                GenJournalLine.Amount:=-(TransactionCharges."Percentage of Amount"*AirtimeAmount/100);
                GenJournalLine.VALIDATE(GenJournalLine.Amount);
              END;
            END;
            GenJournalLine.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");
            IF GenJournalLine.Amount<>0 THEN
            GenJournalLine.INSERT;
            //End Charges=====================================================================================



         //post excise duty====================================================================================



                GenJournalLine2.RESET;
                GenJournalLine2.INIT;
                GenJournalLine2."Journal Template Name":='PURCHASES';
                GenJournalLine2."Journal Batch Name":='SpotCash';
                GenJournalLine2."Document No.":=request_id;
                GenJournalLine5.RESET;
                GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
                GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
                IF GenJournalLine5.FIND('+') THEN BEGIN
                GenJournalLine2."Line No.":=GenJournalLine5."Line No."+10000;
                END;
                //GenJournalLine."Line No.":=LineNo;
                GenJournalLine2."Posting Date":=TODAY;
                GenJournalLine2.Description:=COPYSTR(FORMAT(phone_no)+'-SpotCash Airtime Purchase excise duty',1,40);
                GenJournalLine2."Account Type":=GenJournalLine1."Account Type"::"G/L Account";
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine2."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";;
                GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 1 Code");
                GenJournalLine2."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 2 Code");
                END;
                TransactionTypes.RESET;
                TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotCashBuyAirtime);
                IF TransactionTypes.FIND('-') THEN BEGIN
                Amt2:=0;
                EVALUATE(Amt2,amount);
                TransactionCharges.RESET;TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
                 IF TransactionCharges.FIND('-') THEN BEGIN

                  GenJournalLine2."Account No.":=TransactionCharges."Excise G/L Account";
                  GenJournalLine2.Amount:=(TransactionCharges."Excise %"/100)*(TransactionCharges."Percentage of Amount"/100*AirtimeAmount);
                  GenJournalLine2.Amount:=-GenJournalLine2.Amount;
                  GenJournalLine2.VALIDATE(GenJournalLine2.Amount);
                END;
                END;
                GenJournalLine2.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");
                IF GenJournalLine2.Amount<>0 THEN
                GenJournalLine2.INSERT;

             //End Excise Duty==========================================================================


               //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



              //EXIT;
              //POST TRANSACTIONS
              GenJournalLine.RESET;
              GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
              GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
              CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post",GenJournalLine);
              CalcAvailableBalance(Account."No.");
              balance:=FORMAT(AvailableBalance);
              status:='1';
              response:='00';
              "response message":='success';
                  //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:='Success';
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      SpotCashEntries.Balance:=(VendorBDBDBD.Balance);
                                      SpotCashEntries.Message:='00';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
            //END;
            END;










       // Request Ministatement
       IF transaction_type=12 THEN BEGIN
          CustomerBD.GET(Account."Owner Member No");
          AccountLedger.RESET;
          AccountLedger.SETCURRENTKEY("Posting Date");
          AccountLedger.ASCENDING(FALSE);
          AccountLedger.SETRANGE(AccountLedger."Vendor No.",Account."No.");
          AccountLedger.SETRANGE(Reversed,FALSE);
          IF AccountLedger.FINDSET THEN BEGIN
          iterate:=0;
           REPEAT
             IF iterate<5 THEN BEGIN
                AccountLedger.CALCFIELDS(Amount);
                message:=FORMAT(AccountLedger."Posting Date")+'|'+AccountLedger.Description+'|'+FORMAT(1*AccountLedger.Amount)+'#'+message;
                iterate:=iterate+1;
             END
           UNTIL AccountLedger.NEXT=0;
           bdmessage:=message;

                GenJournalLine.RESET;
          GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
          GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
          GenJournalLine.DELETEALL;

          IF DefaultBatch.GET('PURCHASES','SpotCash') THEN
          DefaultBatch.DELETE;

          //POSTING MAIN TRANSACTION

          DefaultBatch.INIT;
          DefaultBatch."Journal Template Name":='PURCHASES';
          DefaultBatch.Name:='SpotCash';
          DefaultBatch.INSERT;

              GenJournalLine2.INIT;
              GenJournalLine2."Journal Template Name":='PURCHASES';
              GenJournalLine2."Journal Batch Name":='SpotCash';
              GenJournalLine2."Document No.":=request_id;
              GenJournalLine5.RESET;
              GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
              GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
              IF GenJournalLine5.FIND('+') THEN BEGIN
              GenJournalLine2."Line No.":=GenJournalLine5."Line No."+10000;
              END;
              //GenJournalLine."Line No.":=LineNo;

              GenJournalLine2."Posting Date":=TODAY;
              GenJournalLine2.Description:=FORMAT(phone_no)+'-SpotCash Ministatement Charges';

              GenJournalLine2."Account Type":=GenJournalLine2."Account Type"::Vendor;
              GenJournalLine2."Account No.":=Account."No.";
              AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine2."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";
                GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 1 Code");
                GenJournalLine2."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 2 Code");
                END;
              TransactionTypes.RESET;
              TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
              IF TransactionTypes.FIND('-') THEN BEGIN
                TransactionCharges.RESET;
                TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
                IF TransactionCharges.FIND('-') THEN BEGIN
                 // GenJournalLine2."Account No.":=TransactionCharges."GL Account";
                  GenJournalLine2.Amount:=(TransactionCharges."Charge Amount"+(TransactionCharges."Excise %"/100)*TransactionCharges."Charge Amount");
                  GenJournalLine2.Amount:=GenJournalLine2.Amount;
                END;
                GenJournalLine2.VALIDATE(GenJournalLine2.Amount);
              END;
            //END;

              GenJournalLine2.VALIDATE(GenJournalLine2.Amount);
             // GenJournalLine2."Bal. Account Type":=GenJournalLine2."Bal. Account Type"::"G/L Account";
              //GenJournalLine2."Bal. Account No.":=scharges."GL Account";
              GenJournalLine2.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");
              IF GenJournalLine2.Amount<>0 THEN
                GenJournalLine2.INSERT;
              END;

            //post sacco charge
            GenJournalLine.RESET;
            GenJournalLine.INIT;
            GenJournalLine."Journal Template Name":='PURCHASES';
            GenJournalLine."Journal Batch Name":='SpotCash';
            GenJournalLine."Document No.":=request_id;
            GenJournalLine5.RESET;
            GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
            GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
            IF GenJournalLine5.FIND('+') THEN BEGIN
            GenJournalLine."Line No.":=GenJournalLine5."Line No."+10000;
            END;
            //GenJournalLine."Line No.":=LineNo;
            GenJournalLine."Posting Date":=TODAY;
            GenJournalLine.Description:=FORMAT(phone_no)+'-SpotCash Ministatement Charges';
            GenJournalLine."Account Type":=GenJournalLine."Account Type"::"G/L Account";
            AccountHolders.RESET;
            AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
            IF AccountHolders.FIND('-') THEN BEGIN
            GenJournalLine."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";
            GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 1 Code");
            GenJournalLine."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
            GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 2 Code");
            END;
            TransactionTypes.RESET;
            TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
            IF TransactionTypes.FIND('-') THEN BEGIN
              TransactionCharges.RESET;
              TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
              IF TransactionCharges.FIND('-') THEN BEGIN

                GenJournalLine."Account No.":=TransactionCharges."GL Account";
                GenJournalLine.Amount:=-TransactionCharges."Charge Amount";
                GenJournalLine.VALIDATE(GenJournalLine.Amount);
              END;
            END;
            GenJournalLine.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");
            IF GenJournalLine.Amount<>0 THEN
            GenJournalLine.INSERT;



            //post execize duty charge


                GenJournalLine1.RESET;
                GenJournalLine1.INIT;
                GenJournalLine1."Journal Template Name":='PURCHASES';
                GenJournalLine1."Journal Batch Name":='SpotCash';
                GenJournalLine1."Document No.":=request_id;
                GenJournalLine5.RESET;
                GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
                GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
                IF GenJournalLine5.FIND('+') THEN BEGIN
                GenJournalLine1."Line No.":=GenJournalLine5."Line No."+10000;
                END;
                //GenJournalLine."Line No.":=LineNo;
                GenJournalLine1."Posting Date":=TODAY;
                GenJournalLine1.Description:=FORMAT(phone_no)+'-SpotCash Ministatement Charges';
                GenJournalLine1."Account Type":=GenJournalLine1."Account Type"::"G/L Account";
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine1."Shortcut Dimension 1 Code":=CustomerBD."Global Dimension 1 Code";
                GenJournalLine1.VALIDATE(GenJournalLine1."Shortcut Dimension 1 Code");
                GenJournalLine1."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine1.VALIDATE(GenJournalLine1."Shortcut Dimension 2 Code");
                END;
                TransactionTypes.RESET;
                TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
                IF TransactionTypes.FIND('-') THEN BEGIN
                TransactionCharges.RESET;
                TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
                IF TransactionCharges.FIND('-') THEN BEGIN

                  GenJournalLine1."Account No.":=TransactionCharges."Excise G/L Account";
                  GenJournalLine1.Amount:=(TransactionCharges."Excise %"/100)*TransactionCharges."Charge Amount";
                  GenJournalLine1.Amount:=-GenJournalLine1.Amount;
                  GenJournalLine1.VALIDATE(GenJournalLine1.Amount);
                END;
                END;
                GenJournalLine1.VALIDATE("Shortcut Dimension 1 Code",CustomerBD."Global Dimension 1 Code");
                IF GenJournalLine1.Amount<>0 THEN
                GenJournalLine1.INSERT;

              //POST TRANSACTIONS
              GenJournalLine.RESET;
              GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
              GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
              CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post",GenJournalLine);
                CalcAvailableBalance(Account."No.");
                balance:=FORMAT(AvailableBalance);
                status:='1';
                response:='00';
                "response message":='success';
                    //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:='Success';
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:=COPYSTR(bdmessage,1,250);
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
          END;



















      //Request Share Balance
        IF transaction_type=9 THEN BEGIN
        SPotcashMembers.RESET;
        SPotcashMembers.SETRANGE("Phone No",phone_no);
        IF SPotcashMembers.FIND('-') THEN BEGIN

          Account.GET(SPotcashMembers."Account No");
          Member.GET(Account."Owner Member No");
          SCaccounts.RESET;
          SCaccounts.SETRANGE("Owner Member No",Account."Owner Member No");
          SCaccounts.SETFILTER("Account Type",'%1','BS102');
          IF SCaccounts.FINDSET THEN BEGIN
          REPEAT
          SCaccounts.CALCFIELDS("Balance (LCY)");
          balanc:=balanc+SCaccounts."Balance (LCY)";
          UNTIL SCaccounts.NEXT=0;
          END;

          GenJournalLine.RESET;
          GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
          GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
          GenJournalLine.DELETEALL;

          IF DefaultBatch.GET('PURCHASES','SpotCash') THEN
          DefaultBatch.DELETE;

          //POSTING MAIN TRANSACTION

          DefaultBatch.INIT;
          DefaultBatch."Journal Template Name":='PURCHASES';
          DefaultBatch.Name:='SpotCash';
          DefaultBatch.INSERT;

              GenJournalLine2.INIT;
              GenJournalLine2."Journal Template Name":='PURCHASES';
              GenJournalLine2."Journal Batch Name":='SpotCash';
              GenJournalLine2."Document No.":=request_id;
              GenJournalLine5.RESET;
              GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
              GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
              IF GenJournalLine5.FIND('+') THEN BEGIN
              GenJournalLine2."Line No.":=GenJournalLine5."Line No."+10000;
              END;
              //GenJournalLine."Line No.":=LineNo;

              GenJournalLine2."Posting Date":=TODAY;
              GenJournalLine2.Description:=FORMAT(phone_no)+'-SpotCash Enquiry Charges';

              GenJournalLine2."Account Type":=GenJournalLine2."Account Type"::Vendor;
              GenJournalLine2."Account No.":=Account."No.";
              AccountHolders.RESET;
              AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
              IF AccountHolders.FIND('-') THEN BEGIN
              GenJournalLine2."Shortcut Dimension 1 Code":=AccountHolders."Global Dimension 1 Code";
              GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 1 Code");
              GenJournalLine2."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
              GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 2 Code");
              END;
              TransactionTypes.RESET;
              TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
              IF TransactionTypes.FIND('-') THEN BEGIN
                TransactionCharges.RESET;
                TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
                IF TransactionCharges.FIND('-') THEN BEGIN
                 // GenJournalLine2."Account No.":=TransactionCharges."GL Account";
                  GenJournalLine2.Amount:=(TransactionCharges."Charge Amount"+(TransactionCharges."Excise %"/100)*TransactionCharges."Charge Amount");
                  GenJournalLine2.Amount:=GenJournalLine2.Amount;
                END;
                GenJournalLine2.VALIDATE(GenJournalLine2.Amount);
              END;
            //END;

              GenJournalLine2.VALIDATE(GenJournalLine2.Amount);
             // GenJournalLine2."Bal. Account Type":=GenJournalLine2."Bal. Account Type"::"G/L Account";
              //GenJournalLine2."Bal. Account No.":=scharges."GL Account";
              GenJournalLine2.VALIDATE("Shortcut Dimension 1 Code",Dimensioncode);
              IF GenJournalLine2.Amount<>0 THEN
                GenJournalLine2.INSERT;
              END;

            //post sacco charge
            GenJournalLine.RESET;
            GenJournalLine.INIT;
            GenJournalLine."Journal Template Name":='PURCHASES';
            GenJournalLine."Journal Batch Name":='SpotCash';
            GenJournalLine."Document No.":=request_id;
            GenJournalLine5.RESET;
            GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
            GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
            IF GenJournalLine5.FIND('+') THEN BEGIN
            GenJournalLine."Line No.":=GenJournalLine5."Line No."+10000;
            END;
            //GenJournalLine."Line No.":=LineNo;
            GenJournalLine."Posting Date":=TODAY;
            GenJournalLine.Description:=FORMAT(phone_no)+'-SpotCash Enquiry Charges';
            GenJournalLine."Account Type":=GenJournalLine."Account Type"::"G/L Account";
            AccountHolders.RESET;
            AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
            IF AccountHolders.FIND('-') THEN BEGIN
            GenJournalLine."Shortcut Dimension 1 Code":=AccountHolders."Global Dimension 1 Code";
            GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 1 Code");
            GenJournalLine."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
            GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 2 Code");
            END;
            TransactionTypes.RESET;
            TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
            IF TransactionTypes.FIND('-') THEN BEGIN
              TransactionCharges.RESET;
              TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
              IF TransactionCharges.FIND('-') THEN BEGIN

                GenJournalLine."Account No.":=TransactionCharges."GL Account";
                GenJournalLine.Amount:=-TransactionCharges."Charge Amount";
                GenJournalLine.VALIDATE(GenJournalLine.Amount);
              END;
            END;
            GenJournalLine.VALIDATE("Shortcut Dimension 1 Code",Dimensioncode);
            IF GenJournalLine.Amount<>0 THEN
            GenJournalLine.INSERT;



            //post execize duty


                GenJournalLine1.RESET;
                GenJournalLine1.INIT;
                GenJournalLine1."Journal Template Name":='PURCHASES';
                GenJournalLine1."Journal Batch Name":='SpotCash';
                GenJournalLine1."Document No.":=request_id;
                GenJournalLine5.RESET;
                GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
                GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
                IF GenJournalLine5.FIND('+') THEN BEGIN
                GenJournalLine1."Line No.":=GenJournalLine5."Line No."+10000;
                END;
                //GenJournalLine."Line No.":=LineNo;
                GenJournalLine1."Posting Date":=TODAY;
                GenJournalLine1.Description:=FORMAT(phone_no)+'-SpotCash Enquiry Charges';
                GenJournalLine1."Account Type":=GenJournalLine1."Account Type"::"G/L Account";
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine1."Shortcut Dimension 1 Code":=AccountHolders."Global Dimension 1 Code";
                GenJournalLine1.VALIDATE(GenJournalLine1."Shortcut Dimension 1 Code");
                GenJournalLine1."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine1.VALIDATE(GenJournalLine1."Shortcut Dimension 2 Code");
                END;
                TransactionTypes.RESET;
                TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
                IF TransactionTypes.FIND('-') THEN BEGIN
                TransactionCharges.RESET;
                TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
                IF TransactionCharges.FIND('-') THEN BEGIN

                  GenJournalLine1."Account No.":=TransactionCharges."Excise G/L Account";
                  GenJournalLine1.Amount:=(TransactionCharges."Excise %"/100)*TransactionCharges."Charge Amount";
                  GenJournalLine1.Amount:=-GenJournalLine1.Amount;
                  GenJournalLine1.VALIDATE(GenJournalLine1.Amount);
                END;
                END;
                GenJournalLine1.VALIDATE("Shortcut Dimension 1 Code",Dimensioncode);
                IF GenJournalLine1.Amount<>0 THEN
                GenJournalLine1.INSERT;

              //POST TRANSACTIONS
              GenJournalLine.RESET;
              GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
              GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
              CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post",GenJournalLine);
              //CalcAvailableBalance(Account."No.");
              balance:=FORMAT(balanc);
             response:='00';
             "response message":='success';
                 //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:='Success';
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='00';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
         END;









      //Request E-Loan
      IF transaction_type=16 THEN BEGIN
             CalcAvailableBalance(Account."No.");
              GeneralSetup.GET;


            LoanProductTypes.RESET;
            LoanProductTypes.SETRANGE(eLoan,TRUE);
            LoanProductTypes.SETRANGE("Passes through MPESA",FALSE);
            IF LoanProductTypes.FIND('-') THEN BEGIN
             EVALUATE(Amt,amount);


             SPotcashMembers.RESET;
             SPotcashMembers.SETRANGE("Phone No",phone_no);
             IF NOT SPotcashMembers.FIND('-') THEN BEGIN
               balance:=FORMAT(AvailableBalance);
               response:='22';
               "response message":='Visit your branch and register for the Service';
                   //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:='Visit your Branc and register for te service';
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='22';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
               EXIT;
             END;
             {
             Vendor.RESET;
             Vendor.SETRANGE("Owner Member No",Account."Owner Member No");
             Vendor.SETRANGE("Vendor Posting Group",'902');
             IF Vendor.FIND('+') THEN BEGIN
                Vendor.CALCFIELDS("Balance (LCY)");
                IF Vendor."Balance (LCY)"<10000 THEN BEGIN
                 balance:=FORMAT(AvailableBalance);
                 response:='12';
                "response message":='You must have deposits of atleast 10,000';
                EXIT;
                END
             END;
             }
             {SMSNotificationRegistration.RESET;
             SMSNotificationRegistration.SETRANGE("Phone No",phone_no);
             SMSNotificationRegistration.SETRANGE("E-Loan Subscribed",TRUE);
             IF NOT SMSNotificationRegistration.FIND('-') THEN BEGIN
               balance:=FORMAT(AvailableBalance);
               response:='22';
               "response message":='Visit your branch and register for the Service';
               EXIT;
             END;}
             {
             NWDs:=0;
             AccountTypes2.RESET;
             AccountTypes2.SETRANGE("NWD Account",TRUE);
             IF AccountTypes2.FINDSET THEN BEGIN
             REPEAT
                SCaccounts.RESET;
                SCaccounts.SETRANGE("Account Type",AccountTypes2.Code);
                IF SCaccounts.FIND('-') THEN BEGIN
                  SCaccounts.CALCFIELDS("Balance (LCY)");
                  NWDs:=NWDs+SCaccounts."Balance (LCY)";
                END;
              UNTIL AccountTypes2.NEXT=0;
              IF NWDs<LoanProductTypes."MF Loan To Share" THEN BEGIN
               balance:=FORMAT(AvailableBalance);
                 response:='12';
                "response message":='Amount higher than maximum allowed';
                EXIT;
              END;
             END;

             IF Amt<LoanProductTypes."Min. Loan Amount"THEN BEGIN
                 balance:=FORMAT(AvailableBalance);
                 response:='12';
                "response message":='The minimum allowed amount is ksh '+FORMAT(LoanProductTypes."Min. Loan Amount");
                EXIT;
             END;
             }

            {
              Months:=0;
              Netsalary:=0;
              STAmounts:=0;
              Loanrepayment:=0;
              PrincipalDue:=0;
              IntrestDue:=0;
              SalaryLines.RESET;
              SalaryLines.SETRANGE("Account No.",Account."No.");
              IF SalaryLines.FINDSET THEN BEGIN
                REPEAT
                 IF SalaryHeader.GET(SalaryLines."Document No.") THEN BEGIN
                  IF SalaryHeader.Posted=TRUE THEN BEGIN
                    IF TODAY-SalaryHeader."Date Created"<=90  THEN BEGIN
                      Months:=Months+1;
                      Netsalary:=Netsalary+SalaryLines.Amount;
                    END;
                  END;
                  END;
              UNTIL SalaryLines.NEXT=0;
              END;
             }
             Employee.RESET;
             Employee.SETRANGE("Member No",Account."Owner Member No");
             IF NOT Employee.FINDSET THEN BEGIN
                 response:='12';
                 "response message":='Member Salary not processed at Chai Sacco!';
                     //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:='Member salary not processed at Chai sacco';
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='12';
                                      IF amount<>''THEN BEGIN
                                        EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                          EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
                 EXIT;
             END;

             Netsalary:=0;
             Employee.RESET;
             Employee.SETRANGE("Member No",Account."Owner Member No");
             IF Employee.FINDSET THEN BEGIN
                Netsalary:=Employee."Net pay";
             END;
               Netsalary:=Netsalary*LoanProductTypes."% of Net Salary"/100;

             IF Amt>Netsalary THEN BEGIN
                 response:='12';
                 "response message":='You are Eligible for Loan of Amount: Ksh. '+FORMAT(Netsalary,0,'<Precision,2:2><Standard Format,0>')+' based on Payroll!';
                     //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='12';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
                 EXIT;
             END;
             IF Amt<LoanProductTypes."Min. Loan Amount" THEN BEGIN
                 response:='12';
                 "response message":='You are Requesting Less Amount than your allowed Minimum of Ksh.'+FORMAT(LoanProductTypes."Min. Loan Amount",0,'<Precision,2:2><Standard Format,0>')+'!';
                     //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='12';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
                 EXIT;
             END;

             {
             IF Months<1 THEN BEGIN
                 balance:=FORMAT(AvailableBalance);
                 response:='12';
                "response message":='You must have at least three consecutive salaries through the Sacco';
                EXIT;
              END;
              }
              {
             IF Netsalary>0 THEN BEGIN

             Netsalary:=Netsalary/Months;
             END ELSE BEGIN
                 balance:=FORMAT(AvailableBalance);
                 response:='12';
                "response message":='You must have at least three consecutive salaries through the Sacco';
                EXIT;
             END;
              }
              {
             StandingOrders.RESET;
             StandingOrders.SETRANGE("Source Account No",Account."No.");
             StandingOrders.SETFILTER("Effective / Start Date",'<=%1',Todate);
             StandingOrders.SETFILTER("Expected End Date",'>=%1',Todate);
             IF StandingOrders.FINDSET THEN BEGIN
              REPEAT
                STAmounts:=STAmounts+StandingOrders."Deduction Amount";
              UNTIL StandingOrders.NEXT=0;
             END;
             }
             {
            LoanApplications.RESET;
            LoanApplications.SETRANGE("Member Code",Account."Owner Member No");
            LoanApplications.SETRANGE(Posted,TRUE);
            LoanApplications.CALCFIELDS("Oustanding Balance");
            LoanApplications.SETFILTER("Oustanding Balance",'>%1',0);
            LoanApplications.SETFILTER("Loan Product Type",'<>%1','');
            LoanApplications.SETFILTER("Loan Product Type",'<>%1','FL0000010');
           // LoanApplications.SETFILTER("Loan Product Type",'%1..%2','FL351','FL370');
            IF LoanApplications.FINDSET THEN BEGIN
            PrincipalDue:=0;
            IntrestDue:=0;
                REPEAT
             IF LoanProductTypes.GET(LoanApplications."Loan Product Type") THEN
             IF LoanProductTypes."Guarantor Loan Ratio"=LoanProductTypes."Guarantor Loan Ratio"::"2" THEN BEGIN
             //SDate:=CALCDATE ('<CM-1M+1D>', TODAY);
             SDate:=DMY2DATE(DATE2DMY(LoanApplications."Issued Date",1),DATE2DMY(TODAY,2),DATE2DMY(TODAY,3));

             MemberLoanRepaymentSchedule.RESET;
             MemberLoanRepaymentSchedule.SETRANGE("Loan No.",LoanApplications."Loan  No.");
             MemberLoanRepaymentSchedule.SETRANGE("Repayment Date",SDate);

             IF MemberLoanRepaymentSchedule.FIND('-') THEN BEGIN
                // PrincipalDue:=PrincipalDue+GetLoanBals.GetIntrestDue(LoanApplications."Loan  No.",'PRINCIPAL');
                 //IntrestDue:=IntrestDue+GetLoanBals.GetIntrestDue(LoanApplications."Loan  No.",'INTEREST');
                 PrincipalDue:=PrincipalDue+MemberLoanRepaymentSchedule."Principal Repayment";
                 IntrestDue:=IntrestDue+MemberLoanRepaymentSchedule."Monthly Interest";
                 END ELSE BEGIN
                 LoanApplicationCard.CalcScheduleglobal(LoanApplications."Loan  No.");
                 MemberLoanRepaymentSchedule2.RESET;
                 MemberLoanRepaymentSchedule2.SETRANGE("Loan No.",LoanApplications."Loan  No.");
                 MemberLoanRepaymentSchedule2.SETRANGE("Repayment Date",SDate);
                 IF MemberLoanRepaymentSchedule2.FIND('-') THEN BEGIN
                     PrincipalDue:=PrincipalDue+MemberLoanRepaymentSchedule2."Principal Repayment";
                     IntrestDue:=IntrestDue+MemberLoanRepaymentSchedule2."Monthly Interest";
                   END;
                    END;
                     END;
                UNTIL LoanApplications.NEXT=0;
            END;

            Loanrepayment:=ABS(PrincipalDue)+ABS(IntrestDue);
            Netsalary:=Netsalary-(STAmounts+Loanrepayment);

             IF Amt>(0.75*Netsalary) THEN BEGIN
                finalnet:=0.75*Netsalary;
                 balance:=FORMAT(AvailableBalance);
                 response:='12';
                "response message":='You do not qualify for the amount applied.You qualify for KSH '+FORMAT(finalnet);
                EXIT;
             END;
            }
            { Vendor.RESET;
             Vendor.SETRANGE("Owner Member No",Account."Owner Member No");
             Vendor.SETRANGE("Vendor Posting Group",'LN0005');
             IF Vendor.FIND('+') THEN BEGIN
                Vendor.CALCFIELDS("Balance (LCY)");
                IF Vendor."Balance (LCY)"<>0 THEN BEGIN
                 balance:=FORMAT(AvailableBalance);
                 response:='12';
                "response message":='You have an outstanding one month crop advance loan';
                EXIT;
                END;
             END;}

             Vendor.RESET;
             Vendor.SETRANGE("Owner Member No",Account."Owner Member No");
             Vendor.SETRANGE("Vendor Posting Group",LoanProductTypes.Code);
             IF Vendor.FIND('+') THEN BEGIN
                Vendor.CALCFIELDS("Balance (LCY)");
                IF Vendor."Balance (LCY)"<>0 THEN BEGIN
                 balance:=FORMAT(AvailableBalance);
                 response:='12';
                "response message":='You have an outstanding '+Vendor.Name+', Clear it to enjoy the service';
                    //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='12';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
                EXIT;
                END
             END;
            END;
            //00

      //Check if Member Already has a loan that is in Progress=======
      //Check if this Member is already having a loan in Application to Disbursal stage|Not Disbursed
          LoanApplicationsProcess.RESET;
          LoanApplicationsProcess.SETRANGE("Member Code",Account."Owner Member No");
          LoanApplicationsProcess.SETRANGE(Posted,FALSE);
         // LoanApplicationsProcess.SETFILTER("Loan  No.",'<>%1',LoanNumber);
          IF LoanApplicationsProcess.FINDSET THEN BEGIN
            response:='12';
            "response message":='Member '+LoanApplicationsProcess."Member Code"+' already has a loan No: '+LoanApplicationsProcess."Loan  No."+' of Type: '+LoanApplicationsProcess."Loan Product Type Name"+
            ' in stage: '+FORMAT(LoanApplicationsProcess."Loan Stage")+' which hasnt been disbursed! Please wait for that to be Disbursed!';
                //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='12';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
            EXIT;
          END;
      //End Check if Member Already has a loan that is in Progress===

      //Check Registration==========================================
      CustomerBD.RESET;
      CustomerBD.GET(Account."Owner Member No");
      IF CustomerBD."Registration Date"=0D THEN BEGIN
            response:='12';
            "response message":='Your Loan Request has not been processed because your your Member Registration date is unanavailable!';
                //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='12';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
            EXIT;
      END;
      GeneralSetup.RESET;
      GeneralSetup.GET;
      howlongnoofdays:=0;
      howlongnoofdays:=TODAY-CustomerBD."Registration Date";
      IF howlongnoofdays<=0 THEN BEGIN
         response:='12';
         "response message":=CustomerBD.Name+' you must have been a member for '+FORMAT(GeneralSetup."Required Consecutive Payouts")+
          ' Months before Applying for a Loan!';
              //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='12';
                                      IF amount<>''THEN BEGIN
                                        EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                          EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
          EXIT;
      END;
      IF (DATE2DMY(TODAY,2)-DATE2DMY(CustomerBD."Registration Date",2))<GeneralSetup."Required Consecutive Payouts" THEN BEGIN
         response:='12';
         "response message":=CustomerBD.Name+' has been in the sacco for less than '+FORMAT(GeneralSetup."Required Consecutive Payouts")+
          ' months before Applying for a Loan! ';
              //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='12';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
          EXIT;
      END;
      //End Check Registration======================================

           ELoan."E-Loan"(Account."No.",amount,phone_no);
           CalcAvailableBalance(Account."No.");
              balance:=FORMAT(AvailableBalance);
              status:='1';
              response:='00';
              "response message":='success';
                  //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:='Success';
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='00';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
        END;



      //==========================Eloan- Goes to MPESA=========================================================================


      //Request E-Loan
      IF transaction_type=21 THEN BEGIN
             IF Account."No."<>'' THEN BEGIN
               CalcAvailableBalance(Account."No.");
             END;
              GeneralSetup.GET;




      //Allow only specific======================================
      eloanwhitelist.RESET;

      //If not on white list==========================
      IF NOT eloanwhitelist.GET(phone_no) THEN BEGIN
          response:='12';
          "response message":='This member is not on eloan White List. Please contact ICT Office';
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='12';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
          EXIT;
      END;
      //End If not on white list========================


      IF eloanwhitelist.GET(phone_no) THEN BEGIN

            LoanProductTypes.RESET;
            LoanProductTypes.SETRANGE(eLoan,TRUE);
            LoanProductTypes.SETRANGE("Passes through MPESA",TRUE);
            IF LoanProductTypes.FIND('-') THEN BEGIN
             EVALUATE(Amt,amount);

             SPotcashMembers.RESET;
             SPotcashMembers.SETRANGE("Phone No",phone_no);
             IF NOT SPotcashMembers.FIND('-') THEN BEGIN
               balance:=FORMAT(AvailableBalance);
               response:='22';
               "response message":='Visit your branch and register for the Service';
                   //Insert Spotcash Entry Data==============================
                                      IF cr_account='' THEN BEGIN
                                         Cust.RESET;
                                         Cust.SETRANGE("Mobile Phone No",phone_no);
                                         IF Cust.FINDSET THEN BEGIN
                                            AccountTypes.RESET;
                                            AccountTypes.SETRANGE("Savings Account",TRUE);
                                            IF AccountTypes.FINDSET THEN BEGIN
                                                Vendor.RESET;
                                                Vendor.SETRANGE("Owner Member No",Cust."No.");
                                                Vendor.SETRANGE("Account Type",AccountTypes.Code);
                                                IF Vendor.FINDSET THEN BEGIN
                                                   cr_account:=Vendor."No.";
                                                END;
                                            END;
                                         END;
                                      END;
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='22';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
               EXIT;
             END;


               Netsalary:=0;
               thisloanee:='';
               nooftimes:=0;
               SPotcashMembers.RESET;
               SPotcashMembers.SETRANGE("Phone No",phone_no);
               IF SPotcashMembers.FINDSET THEN BEGIN
                  thisloanee:=SPotcashMembers."Member Code";
               END;
               SalaryHeader.RESET;
               SalaryHeader.SETRANGE(Posted,TRUE);
               IF SalaryHeader.FINDSET THEN BEGIN
                  REPEAT
                      SalaryLines.RESET;
                      SalaryLines.SETRANGE("Document No.",SalaryHeader."No.");
                      SalaryLines.SETRANGE("Owner Member No",thisloanee);
                      IF SalaryLines.FINDSET THEN BEGIN
                         nooftimes+=1;
                         Netsalary+=(SalaryLines.Amount-SalaryLines."Commission Paid"-SalaryLines."Excise Duty Paid");
                      END;
                  UNTIL SalaryHeader.NEXT=0;
               END;
               IF nooftimes<>0 THEN BEGIN
                   Netsalary:=Netsalary/nooftimes;
                   Netsalary:=Netsalary*LoanProductTypes."% of Net Salary"/100;
               END;
               IF Netsalary=0 THEN BEGIN
                  Employee.RESET;
                  Employee.SETRANGE("Member No",thisloanee);
                  IF Employee.FINDSET THEN BEGIN
                     Netsalary:=Employee."Fixed Pay";
                     Netsalary:=Netsalary*LoanProductTypes."% of Net Salary"/100;
                  END;
               END;
             IF Amt>Netsalary THEN BEGIN
                 response:='12';
                 "response message":='You are Eligible for Loan of Amount: Ksh. '+FORMAT(Netsalary,0,'<Precision,2:2><Standard Format,0>')+' based on Payroll!';
                     //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='12';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
                 EXIT;
             END;
             IF Amt<LoanProductTypes."Min. Loan Amount" THEN BEGIN
                 response:='12';
                 "response message":='You are Requesting Less Amount than your allowed Minimum of Ksh.'+FORMAT(LoanProductTypes."Min. Loan Amount",0,'<Precision,2:2><Standard Format,0>')+'!';
                 //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='12';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
                 EXIT;
             END;
             IF Amt>LoanProductTypes."Max. Loan Amount" THEN BEGIN
                 response:='12';
                 "response message":='You are Requesting More Amount than your allowed Minimum of Ksh.'+FORMAT(LoanProductTypes."Max. Loan Amount",0,'<Precision,2:2><Standard Format,0>')+'!';
                 //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='12';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
                 EXIT;
             END;


                  LoanProductTypesBD.RESET;
                  LoanProductTypesBD.SETRANGE(eLoan,TRUE);
                  IF LoanProductTypesBD.FINDSET THEN BEGIN
                        REPEAT
                               Vendor.RESET;
                               Vendor.SETRANGE("Owner Member No",Account."Owner Member No");
                               Vendor.SETRANGE("Vendor Posting Group",LoanProductTypesBD.Code);
                               IF Vendor.FIND('+') THEN BEGIN
                                      Vendor.CALCFIELDS("Balance (LCY)");
                                      IF Vendor."Balance (LCY)"<>0 THEN BEGIN
                                           balance:=FORMAT(AvailableBalance);
                                           response:='12';
                                          "response message":='You have an outstanding '+Vendor.Name+', Clear it to enjoy the service';
                                          //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='12';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
                                          EXIT;
                                      END
                               END;
                        UNTIL LoanProductTypesBD.NEXT=0;
            END;
            END;
            //00

      //Check if Member Already has a loan that is in Progress=======
      {
      //Check if this Member is already having a loan in Application to Disbursal stage|Not Disbursed
          LoanApplicationsProcess.RESET;
          LoanApplicationsProcess.SETRANGE("Member Code",Account."Owner Member No");
          LoanApplicationsProcess.SETRANGE(Posted,FALSE);
         // LoanApplicationsProcess.SETFILTER("Loan  No.",'<>%1',LoanNumber);
          IF LoanApplicationsProcess.FINDSET THEN BEGIN
            response:='12';
            "response message":='Member '+LoanApplicationsProcess."Member Code"+' already has a loan No: '+LoanApplicationsProcess."Loan  No."+' of Type: '+LoanApplicationsProcess."Loan Product Type Name"+
            ' in stage: '+FORMAT(LoanApplicationsProcess."Loan Stage")+' which hasnt been disbursed! Please wait for that to be Disbursed!';
            //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='12';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
            EXIT;
          END;
      //End Check if Member Already has a loan that is in Progress===
      }
      //Check Registration==========================================
      CustomerBD.RESET;
      CustomerBD.GET(Account."Owner Member No");
      IF CustomerBD."Registration Date"=0D THEN BEGIN
            response:='12';
            "response message":='Your Loan Request has not been processed because your your Member Registration date is unanavailable!';
            //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='12';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
            EXIT;
      END;
      GeneralSetup.RESET;
      GeneralSetup.GET;
      howlongnoofdays:=0;
      howlongnoofdays:=TODAY-CustomerBD."Registration Date"; //ERROR('%1..%2',CustomerBD."Registration Date",howlongnoofdays);
      IF howlongnoofdays<=0 THEN BEGIN
         response:='12';
         "response message":=CustomerBD.Name+' you must have been a member for '+FORMAT(GeneralSetup."Required Consecutive Payouts")+
          ' Months before Applying for a Loan!';
          //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='12';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
          EXIT;
      END;
      IF ((TODAY-CustomerBD."Registration Date")/30)<GeneralSetup."Required Consecutive Payouts" THEN BEGIN
         response:='12';
         "response message":=CustomerBD.Name+' has been in the sacco for less than '+FORMAT(GeneralSetup."Required Consecutive Payouts")+
          ' months before Applying for a Loan! ';
          //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='12';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
          EXIT;
      END;
      //End Check Registration======================================
           ELoan."E-LoanMPESA"(Account."No.",amount,phone_no,request_id);
           CalcAvailableBalance(Account."No.");
           balance:=FORMAT(AvailableBalance);
           loanamount:=0;
           EVALUATE(loanamount,amount);

            LoanProductTypes.RESET;
            LoanProductTypes.SETRANGE(eLoan,TRUE);
            LoanProductTypes.SETRANGE("Passes through MPESA",TRUE);
            IF  LoanProductTypes.FINDSET THEN BEGIN
                       //Amount goes to MPESA================================================
                       IF loanamount<LoanProductTypes."eLoan Threshold" THEN BEGIN
                              status:='1';
                              response:='00';
                              "response message":='success';
                             //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='00';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
                          END;
                        //End Amount goes to MPESA================================================
                        //Amount goes to FOSA================================================
                       IF loanamount>=LoanProductTypes."eLoan Threshold" THEN BEGIN
                              status:='1';
                              response:='31';
                              "response message":='The E-loan Amount of KSHs.'+amount+' has been disbursed to your FOSA Account';
                             //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='31';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
                          END;
                        //End Amount goes to FOSA================================================
            END;
        END;
      END;
      //==========================End Eloan -Goes to MPESA=====================================================================






      // Request E-Loan Balance
      IF transaction_type=17 THEN BEGIN
        SPotcashMembers.RESET;
        SPotcashMembers.SETRANGE("Phone No",phone_no);
        IF SPotcashMembers.FIND('-') THEN BEGIN
        LoanProductTypes.RESET;
        LoanProductTypes.SETRANGE(eLoan,TRUE);
        LoanProductTypes.SETRANGE("Passes through MPESA",FALSE);
        IF LoanProductTypes.FIND('-') THEN BEGIN
          Account.GET(SPotcashMembers."Account No");
          Member.GET(Account."Owner Member No");
          Dimensioncode:=Member."Global Dimension 1 Code";
          SCaccounts.RESET;
          SCaccounts.SETRANGE("Owner Member No",Account."Owner Member No");
          SCaccounts.SETRANGE("Vendor Posting Group",LoanProductTypes.Code);
          IF SCaccounts.FIND('+') THEN BEGIN
          SCaccounts.CALCFIELDS("Balance (LCY)");
          balanc:=balanc+SCaccounts."Balance (LCY)";
          END ELSE BEGIN
            balanc:=0;
            response:='22';
            "response message":='E-Loan not Found';
                //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='22';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
          END;
         END;
          GenJournalLine.RESET;
          GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
          GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
          GenJournalLine.DELETEALL;

          IF DefaultBatch.GET('PURCHASES','SpotCash') THEN
          DefaultBatch.DELETE;

          //POSTING MAIN TRANSACTION

          DefaultBatch.INIT;
          DefaultBatch."Journal Template Name":='PURCHASES';
          DefaultBatch.Name:='SpotCash';
          DefaultBatch.INSERT;

              GenJournalLine2.INIT;
              GenJournalLine2."Journal Template Name":='PURCHASES';
              GenJournalLine2."Journal Batch Name":='SpotCash';
              GenJournalLine2."Document No.":=request_id;
              GenJournalLine5.RESET;
              GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
              GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
              IF GenJournalLine5.FIND('+') THEN BEGIN
              GenJournalLine2."Line No.":=GenJournalLine5."Line No."+10000;
              END;
              //GenJournalLine."Line No.":=LineNo;

              GenJournalLine2."Posting Date":=TODAY;
              GenJournalLine2.Description:=FORMAT(phone_no)+'-SpotCash Enquiry Charges';

              GenJournalLine2."Account Type":=GenJournalLine2."Account Type"::Vendor;
              GenJournalLine2."Account No.":=Account."No.";
              AccountHolders.RESET;
              AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
              IF AccountHolders.FIND('-') THEN BEGIN
              GenJournalLine2."Shortcut Dimension 1 Code":=AccountHolders."Global Dimension 1 Code";
              GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 1 Code");
              GenJournalLine2."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
              GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 2 Code");
              END;
              TransactionTypes.RESET;
              TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
              IF TransactionTypes.FIND('-') THEN BEGIN
                TransactionCharges.RESET;
                TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
                IF TransactionCharges.FIND('-') THEN BEGIN
                 // GenJournalLine2."Account No.":=TransactionCharges."GL Account";
                  GenJournalLine2.Amount:=(TransactionCharges."Charge Amount"+TransactionCharges."Settlement Amount");
                  GenJournalLine2.Amount:=GenJournalLine2.Amount;
                END;
                GenJournalLine2.VALIDATE(GenJournalLine2.Amount);
              END;
            //END;

              GenJournalLine2.VALIDATE(GenJournalLine2.Amount);
             // GenJournalLine2."Bal. Account Type":=GenJournalLine2."Bal. Account Type"::"G/L Account";
              //GenJournalLine2."Bal. Account No.":=scharges."GL Account";
              GenJournalLine2.VALIDATE("Shortcut Dimension 1 Code",Dimensioncode);
              IF GenJournalLine2.Amount<>0 THEN
                GenJournalLine2.INSERT;
              END;

            //post sacco charge
            GenJournalLine.RESET;
            GenJournalLine.INIT;
            GenJournalLine."Journal Template Name":='PURCHASES';
            GenJournalLine."Journal Batch Name":='SpotCash';
            GenJournalLine."Document No.":=request_id;
            GenJournalLine5.RESET;
            GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
            GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
            IF GenJournalLine5.FIND('+') THEN BEGIN
            GenJournalLine."Line No.":=GenJournalLine5."Line No."+10000;
            END;
            //GenJournalLine."Line No.":=LineNo;
            GenJournalLine."Posting Date":=TODAY;
            GenJournalLine.Description:=FORMAT(phone_no)+'-SpotCash Enquiry Charges';
            GenJournalLine."Account Type":=GenJournalLine."Account Type"::"G/L Account";
            AccountHolders.RESET;
            AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
            IF AccountHolders.FIND('-') THEN BEGIN
            GenJournalLine."Shortcut Dimension 1 Code":=AccountHolders."Global Dimension 1 Code";
            GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 1 Code");
            GenJournalLine."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
            GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 2 Code");
            END;
            TransactionTypes.RESET;
            TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
            IF TransactionTypes.FIND('-') THEN BEGIN
              TransactionCharges.RESET;
              TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
              IF TransactionCharges.FIND('-') THEN BEGIN
                GenJournalLine."Account No.":=TransactionCharges."GL Account";
                GenJournalLine.Amount:=-TransactionCharges."Charge Amount";
                GenJournalLine.VALIDATE(GenJournalLine.Amount);
              END;
            END;
            GenJournalLine.VALIDATE("Shortcut Dimension 1 Code",Dimensioncode);
            IF GenJournalLine.Amount<>0 THEN
            GenJournalLine.INSERT;
            //post settlement charge
                GenJournalLine1.RESET;
                GenJournalLine1.INIT;
                GenJournalLine1."Journal Template Name":='PURCHASES';
                GenJournalLine1."Journal Batch Name":='SpotCash';
                GenJournalLine1."Document No.":=request_id;
                GenJournalLine5.RESET;
                GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
                GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
                IF GenJournalLine5.FIND('+') THEN BEGIN
                GenJournalLine1."Line No.":=GenJournalLine5."Line No."+10000;
                END;
                //GenJournalLine."Line No.":=LineNo;
                GenJournalLine1."Posting Date":=TODAY;
                GenJournalLine1.Description:=FORMAT(phone_no)+'-SpotCash Enquiry Charges';
                GenJournalLine1."Account Type":=GenJournalLine1."Account Type"::"G/L Account";
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine1."Shortcut Dimension 1 Code":=AccountHolders."Global Dimension 1 Code";
                GenJournalLine1.VALIDATE(GenJournalLine1."Shortcut Dimension 1 Code");
                GenJournalLine1."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine1.VALIDATE(GenJournalLine1."Shortcut Dimension 2 Code");
                END;
                TransactionTypes.RESET;
                TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
                IF TransactionTypes.FIND('-') THEN BEGIN
                TransactionCharges.RESET;
                TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
                IF TransactionCharges.FIND('-') THEN BEGIN

                  GenJournalLine1."Account No.":=TransactionCharges."Settlement GL Account";
                  GenJournalLine1.Amount:=-TransactionCharges."Settlement Amount";
                  GenJournalLine1.VALIDATE(GenJournalLine1.Amount);
                END;
                END;
                GenJournalLine1.VALIDATE("Shortcut Dimension 1 Code",Dimensioncode);
                IF GenJournalLine1.Amount<>0 THEN
                GenJournalLine1.INSERT;

              //POST TRANSACTIONS
              GenJournalLine.RESET;
              GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
              GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
              CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post",GenJournalLine);
              //CalcAvailableBalance(Account."No.");
              balanc:=balanc*-1;
              balance:=FORMAT(balanc);
             response:='00';
             "response message":='success';
                 //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='00';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
         END;





      // Request E-Loan Balance
      IF transaction_type=22 THEN BEGIN
        SPotcashMembers.RESET;
        SPotcashMembers.SETRANGE("Phone No",phone_no);
        IF SPotcashMembers.FIND('-') THEN BEGIN
        LoanProductTypes.RESET;
        LoanProductTypes.SETRANGE(eLoan,TRUE);
        LoanProductTypes.SETRANGE("Passes through MPESA",TRUE);
        IF LoanProductTypes.FIND('-') THEN BEGIN
          Account.GET(SPotcashMembers."Account No");
          Member.GET(Account."Owner Member No");
          SCaccounts.RESET;
          SCaccounts.SETRANGE("Owner Member No",Account."Owner Member No");
          SCaccounts.SETRANGE("Vendor Posting Group",LoanProductTypes.Code);
          IF SCaccounts.FIND('+') THEN BEGIN
          SCaccounts.CALCFIELDS("Balance (LCY)");
          balanc:=balanc+SCaccounts."Balance (LCY)";
          END ELSE BEGIN
            balanc:=0;
            response:='22';
            "response message":='E-Loan not Found';
                //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='22';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
          END;
         END;
          GenJournalLine.RESET;
          GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
          GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
          GenJournalLine.DELETEALL;

          IF DefaultBatch.GET('PURCHASES','SpotCash') THEN
          DefaultBatch.DELETE;

          //POSTING MAIN TRANSACTION

          DefaultBatch.INIT;
          DefaultBatch."Journal Template Name":='PURCHASES';
          DefaultBatch.Name:='SpotCash';
          DefaultBatch.INSERT;

              GenJournalLine2.INIT;
              GenJournalLine2."Journal Template Name":='PURCHASES';
              GenJournalLine2."Journal Batch Name":='SpotCash';
              GenJournalLine2."Document No.":=request_id;
              GenJournalLine5.RESET;
              GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
              GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
              IF GenJournalLine5.FIND('+') THEN BEGIN
              GenJournalLine2."Line No.":=GenJournalLine5."Line No."+10000;
              END;
              //GenJournalLine."Line No.":=LineNo;

              GenJournalLine2."Posting Date":=TODAY;
              GenJournalLine2.Description:=FORMAT(phone_no)+'-SpotCash Enquiry Charges';

              GenJournalLine2."Account Type":=GenJournalLine2."Account Type"::Vendor;
              GenJournalLine2."Account No.":=Account."No.";
              AccountHolders.RESET;
              AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
              IF AccountHolders.FIND('-') THEN BEGIN
              GenJournalLine2."Shortcut Dimension 1 Code":=AccountHolders."Global Dimension 1 Code";
              GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 1 Code");
              GenJournalLine2."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
              GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 2 Code");
              END;
              TransactionTypes.RESET;
              TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
              IF TransactionTypes.FIND('-') THEN BEGIN
                TransactionCharges.RESET;
                TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
                IF TransactionCharges.FIND('-') THEN BEGIN
                 // GenJournalLine2."Account No.":=TransactionCharges."GL Account";
                  GenJournalLine2.Amount:=(TransactionCharges."Charge Amount"+TransactionCharges."Settlement Amount");
                  GenJournalLine2.Amount:=GenJournalLine2.Amount;
                END;
                GenJournalLine2.VALIDATE(GenJournalLine2.Amount);
              END;
            //END;

              GenJournalLine2.VALIDATE(GenJournalLine2.Amount);
             // GenJournalLine2."Bal. Account Type":=GenJournalLine2."Bal. Account Type"::"G/L Account";
              //GenJournalLine2."Bal. Account No.":=scharges."GL Account";
              GenJournalLine2.VALIDATE("Shortcut Dimension 1 Code",Dimensioncode);
              IF GenJournalLine2.Amount<>0 THEN
                GenJournalLine2.INSERT;
              END;

            //post sacco charge
            GenJournalLine.RESET;
            GenJournalLine.INIT;
            GenJournalLine."Journal Template Name":='PURCHASES';
            GenJournalLine."Journal Batch Name":='SpotCash';
            GenJournalLine."Document No.":=request_id;
            GenJournalLine5.RESET;
            GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
            GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
            IF GenJournalLine5.FIND('+') THEN BEGIN
            GenJournalLine."Line No.":=GenJournalLine5."Line No."+10000;
            END;
            //GenJournalLine."Line No.":=LineNo;
            GenJournalLine."Posting Date":=TODAY;
            GenJournalLine.Description:=FORMAT(phone_no)+'-SpotCash Enquiry Charges';
            GenJournalLine."Account Type":=GenJournalLine."Account Type"::"G/L Account";
            AccountHolders.RESET;
            AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
            IF AccountHolders.FIND('-') THEN BEGIN
            GenJournalLine."Shortcut Dimension 1 Code":=AccountHolders."Global Dimension 1 Code";
            GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 1 Code");
            GenJournalLine."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
            GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 2 Code");
            END;
            TransactionTypes.RESET;
            TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
            IF TransactionTypes.FIND('-') THEN BEGIN
              TransactionCharges.RESET;
              TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
              IF TransactionCharges.FIND('-') THEN BEGIN
                GenJournalLine."Account No.":=TransactionCharges."GL Account";
                GenJournalLine.Amount:=-TransactionCharges."Charge Amount";
                GenJournalLine.VALIDATE(GenJournalLine.Amount);
              END;
            END;
            GenJournalLine.VALIDATE("Shortcut Dimension 1 Code",Dimensioncode);
            IF GenJournalLine.Amount<>0 THEN
            GenJournalLine.INSERT;
            //post settlement charge
                GenJournalLine1.RESET;
                GenJournalLine1.INIT;
                GenJournalLine1."Journal Template Name":='PURCHASES';
                GenJournalLine1."Journal Batch Name":='SpotCash';
                GenJournalLine1."Document No.":=request_id;
                GenJournalLine5.RESET;
                GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
                GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
                IF GenJournalLine5.FIND('+') THEN BEGIN
                GenJournalLine1."Line No.":=GenJournalLine5."Line No."+10000;
                END;
                //GenJournalLine."Line No.":=LineNo;
                GenJournalLine1."Posting Date":=TODAY;
                GenJournalLine1.Description:=FORMAT(phone_no)+'-SpotCash Enquiry Charges';
                GenJournalLine1."Account Type":=GenJournalLine1."Account Type"::"G/L Account";
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine1."Shortcut Dimension 1 Code":=AccountHolders."Global Dimension 1 Code";
                GenJournalLine1.VALIDATE(GenJournalLine1."Shortcut Dimension 1 Code");
                GenJournalLine1."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine1.VALIDATE(GenJournalLine1."Shortcut Dimension 2 Code");
                END;
                TransactionTypes.RESET;
                TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
                IF TransactionTypes.FIND('-') THEN BEGIN
                TransactionCharges.RESET;
                TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
                IF TransactionCharges.FIND('-') THEN BEGIN

                  GenJournalLine1."Account No.":=TransactionCharges."Settlement GL Account";
                  GenJournalLine1.Amount:=-TransactionCharges."Settlement Amount";
                  GenJournalLine1.VALIDATE(GenJournalLine1.Amount);
                END;
                END;
                GenJournalLine1.VALIDATE("Shortcut Dimension 1 Code",Dimensioncode);
                IF GenJournalLine1.Amount<>0 THEN
                GenJournalLine1.INSERT;

              //POST TRANSACTIONS
              GenJournalLine.RESET;
              GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
              GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
              CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post",GenJournalLine);
              //CalcAvailableBalance(Account."No.");
              balanc:=balanc*-1;
              balance:=FORMAT(balanc);
             response:='00';
             "response message":='success';
                 //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='00';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
         END;























      // E-Loan Repayment
      IF transaction_type=18 THEN BEGIN
        SPotcashMembers.RESET;
        SPotcashMembers.SETRANGE("Phone No",phone_no);
        IF SPotcashMembers.FIND('-') THEN BEGIN
        LoanProductTypes.RESET;
        LoanProductTypes.SETRANGE("E-Loan",TRUE);
        IF LoanProductTypes.FIND('-') THEN BEGIN
          Account.GET(SPotcashMembers."Account No");
          Member.GET(Account."Owner Member No");
          SCaccounts.RESET;
          SCaccounts.SETRANGE("Owner Member No",Account."Owner Member No");
          SCaccounts.SETRANGE("Vendor Posting Group",LoanProductTypes.Code);
          IF SCaccounts.FIND('+') THEN BEGIN
          EVALUATE(Amt,amount);
          RemainingAmount:=Amt;

          GenJournalLine.RESET;
          GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
          GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
          IF GenJournalLine.FIND('-') THEN
          GenJournalLine.DELETEALL;

          IF DefaultBatch.GET('PURCHASES','SpotCash') THEN
          DefaultBatch.DELETE;

          //POSTING MAIN TRANSACTION

          DefaultBatch.INIT;
          DefaultBatch."Journal Template Name":='PURCHASES';
          DefaultBatch.Name:='SpotCash';
          DefaultBatch.INSERT;
        LoanApplications.GET(SCaccounts."No.");
        LoanApplications.CALCFIELDS(LoanApplications."Oustanding Balance");
        Account.GET(LoanApplications."Loan  No.");
        Account.CALCFIELDS("Balance (LCY)");

        IF LoanApplications."Oustanding Balance" > 0 THEN BEGIN
          Gnljnline.INIT;
          Gnljnline."Journal Template Name":='PURCHASES';
          Gnljnline."Journal Batch Name":='SpotCash';

          Gnljnline5.RESET;
          Gnljnline5.SETRANGE("Journal Template Name",'PURCHASES');
          Gnljnline5.SETRANGE("Journal Batch Name",'SpotCash');
          IF Gnljnline5.FIND('+') THEN BEGIN
           Gnljnline."Line No.":=Gnljnline5."Line No."+1000;
          END;

          Gnljnline."Account Type":=Gnljnline."Account Type"::"G/L Account";
          Gnljnline."Account No.":=LoanProductTypes."Loan Interest Account";
          Gnljnline."Transaction Type":=Gnljnline."Transaction Type"::"Interest Paid";
          Gnljnline.VALIDATE(Gnljnline."Account No.");
          Gnljnline."Document No.":=request_id;
          Gnljnline."Posting Date":=TODAY;
          Gnljnline."Shortcut Dimension 1 Code":=LoanApplications."Global Dimension 1 Code";
          Gnljnline.Description:='Interest Paid';
          Gnljnline.VALIDATE(Gnljnline."Shortcut Dimension 1 Code");
              VendorLedgerEntry.RESET;
              VendorLedgerEntry.SETCURRENTKEY("Posting Date");
              VendorLedgerEntry.SETRANGE("Vendor No.",LoanApplications."Loan  No.");
              VendorLedgerEntry.SETRANGE("Transaction Type",VendorLedgerEntry."Transaction Type"::"Interest Due");
              IF VendorLedgerEntry.FINDLAST THEN BEGIN
                VendorLedgerEntry.CALCFIELDS(Amount);
                Inte:=ABS(VendorLedgerEntry.Amount);
                VendorLedgerEntry2.RESET;
                VendorLedgerEntry2.SETCURRENTKEY("Posting Date");
                VendorLedgerEntry2.SETRANGE("Vendor No.",LoanApplications."Loan  No.");
                VendorLedgerEntry2.SETRANGE("Transaction Type",VendorLedgerEntry2."Transaction Type"::"Interest Paid");
                IF VendorLedgerEntry2.FINDLAST THEN BEGIN
                 VendorLedgerEntry2.CALCFIELDS(Amount);
                 Inte:=Inte-ABS(VendorLedgerEntry2.Amount);
                END;
              END;

          IF Inte<RemainingAmount THEN BEGIN
          Gnljnline.Amount:=Inte;
          END ELSE BEGIN
          IF RemainingAmount>0 THEN BEGIN
           Gnljnline.Amount:=RemainingAmount;
          END ELSE BEGIN
          Gnljnline.Amount:=0;
          END;
          END;
          ActualInterest:=Gnljnline.Amount;
          RemainingAmount:=RemainingAmount-Gnljnline.Amount;
          Gnljnline.Amount:=-1*Gnljnline.Amount;
          Gnljnline.VALIDATE(Gnljnline.Amount);
          Gnljnline."Bal. Account Type":=Gnljnline."Bal. Account Type"::"G/L Account";
          Gnljnline."Bal. Account No.":=LoanProductTypes."Receivable Interest Account";
          Gnljnline.VALIDATE(Gnljnline."Bal. Account No.");
          Gnljnline."Loan No":=LoanApplications."Loan  No.";
          Gnljnline.VALIDATE("Shortcut Dimension 1 Code",Dimensioncode);

          IF Gnljnline.Amount<>0 THEN
          Gnljnline.INSERT;


      //recover interest
          Gnljnline.INIT;
          Gnljnline."Journal Template Name":='PURCHASES';
          Gnljnline."Journal Batch Name":='SpotCash';
          Gnljnline5.RESET;
          Gnljnline5.SETRANGE("Journal Template Name",'PURCHASES');
          Gnljnline5.SETRANGE("Journal Batch Name",'SpotCash');
          IF Gnljnline5.FIND('+') THEN BEGIN
           Gnljnline."Line No.":=Gnljnline5."Line No."+1000;
          END;
          Gnljnline."Account Type":=Gnljnline."Account Type"::Vendor;
          Gnljnline."Account No.":=LoanApplications."Loan  No.";
          Gnljnline."Transaction Type":=Gnljnline."Transaction Type"::"Interest Paid";
          Gnljnline.VALIDATE(Gnljnline."Account No.");
          Gnljnline."Document No.":=request_id;
          Gnljnline."Posting Date":=TODAY;
          Gnljnline."Shortcut Dimension 1 Code":=LoanApplications."Global Dimension 1 Code";
          Gnljnline.VALIDATE(Gnljnline."Shortcut Dimension 1 Code");
          Gnljnline.Description:='Interest Paid';
          Gnljnline.Amount:=-1*ActualInterest;
          Gnljnline.VALIDATE(Gnljnline.Amount);
          Gnljnline."Loan No":=LoanApplications."Loan  No.";
          Gnljnline."Bal. Account Type":=Gnljnline."Bal. Account Type"::"G/L Account";
          GeneralSetup.GET;
          Gnljnline."Bal. Account No.":=GeneralSetup."SpotCash Control Account";
          Gnljnline.VALIDATE(Gnljnline."Bal. Account No.");
          Gnljnline.VALIDATE("Shortcut Dimension 1 Code",Dimensioncode);
          IF Gnljnline.Amount<>0 THEN
          Gnljnline.INSERT;


      //recover Principal
          Gnljnline2.INIT;
          Gnljnline2."Journal Template Name":='PURCHASES';
          Gnljnline2."Journal Batch Name":='SpotCash';
          Gnljnline5.RESET;
          Gnljnline5.SETRANGE("Journal Template Name",'PURCHASES');
          Gnljnline5.SETRANGE("Journal Batch Name",'SpotCash');
          IF Gnljnline5.FIND('+') THEN BEGIN
           Gnljnline2."Line No.":=Gnljnline5."Line No."+1000;
          END;
          Gnljnline2."Account Type":=Gnljnline2."Account Type"::Vendor;
          Gnljnline2."Account No.":=LoanApplications."Loan  No.";
          Gnljnline2."Transaction Type":=Gnljnline2."Transaction Type"::Repayment;
          Gnljnline2.VALIDATE(Gnljnline2."Account No.");
          Gnljnline2."Document No.":=request_id;
          Gnljnline2."Posting Date":=TODAY;
          Gnljnline2."Shortcut Dimension 1 Code":=LoanApplications."Global Dimension 1 Code";
          Gnljnline2.VALIDATE(Gnljnline2."Shortcut Dimension 1 Code");
          Gnljnline2.Description:='Principal Paid';
          Principal:=LoanApplications."Approved Amount"/LoanApplications.Installments;

          IF Principal<RemainingAmount THEN BEGIN
          Gnljnline2.Amount:=Principal;
          END ELSE BEGIN
          IF RemainingAmount>0 THEN BEGIN
           Gnljnline2.Amount:=RemainingAmount;
          END ELSE BEGIN
          Gnljnline2.Amount:=0;
          END;
          END;
          //ActualPrincipal:=Gnljnline2.Amount;
          RemainingAmount:=RemainingAmount-Gnljnline2.Amount;

          Gnljnline2.Amount:=-1*Gnljnline2.Amount;
          Gnljnline2.VALIDATE(Gnljnline2.Amount);
          Gnljnline2."Loan No":=LoanApplications."Loan  No.";
          Gnljnline2."Bal. Account Type":=Gnljnline2."Bal. Account Type"::"G/L Account";
          GeneralSetup.GET;
          Gnljnline2."Bal. Account No.":=GeneralSetup."SpotCash Control Account";
          Gnljnline2.VALIDATE(Gnljnline2."Bal. Account No.");
          Gnljnline2.VALIDATE("Shortcut Dimension 1 Code",Dimensioncode);
          IF Gnljnline2.Amount<>0 THEN
          Gnljnline2.INSERT;

          //POST TRANSACTIONS
            GenJournalLine.RESET;
            GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
            GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
            IF GenJournalLine.FIND('-') THEN BEGIN
             CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post",GenJournalLine);
             balanc:=balanc*-1;
            balance:=FORMAT(balanc);
            response:='00';
            "response message":='success';
                //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='00';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
            END;
            //CalcAvailableBalance(Account."No.");
             END ELSE BEGIN
            balanc:=0;
            response:='22';
            "response message":='E-Loan not Found';
            //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='00';
                                      IF amount<>''THEN BEGIN
                                        EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                          EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
           END;
          END;
         END;
        END;
       END;











      // E-Loan Repayment
      IF transaction_type=23 THEN BEGIN
        SPotcashMembers.RESET;
        SPotcashMembers.SETRANGE("Phone No",phone_no);
        IF SPotcashMembers.FIND('-') THEN BEGIN
        LoanProductTypes.RESET;
        LoanProductTypes.SETRANGE("E-Loan",TRUE);
        LoanProductTypes.SETRANGE("Passes through MPESA",TRUE);
        IF LoanProductTypes.FIND('-') THEN BEGIN
          Account.GET(SPotcashMembers."Account No");
          Member.GET(Account."Owner Member No");
          SCaccounts.RESET;
          SCaccounts.SETRANGE("Owner Member No",Account."Owner Member No");
          SCaccounts.SETRANGE("Vendor Posting Group",LoanProductTypes.Code);
          IF SCaccounts.FIND('+') THEN BEGIN
          EVALUATE(Amt,amount);
          RemainingAmount:=Amt;

          GenJournalLine.RESET;
          GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
          GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
          IF GenJournalLine.FIND('-') THEN
          GenJournalLine.DELETEALL;

          IF DefaultBatch.GET('PURCHASES','SpotCash') THEN
          DefaultBatch.DELETE;

          //POSTING MAIN TRANSACTION

          DefaultBatch.INIT;
          DefaultBatch."Journal Template Name":='PURCHASES';
          DefaultBatch.Name:='SpotCash';
          DefaultBatch.INSERT;
        LoanApplications.GET(SCaccounts."No.");
        LoanApplications.CALCFIELDS(LoanApplications."Oustanding Balance");
        Account.GET(LoanApplications."Loan  No.");
        Account.CALCFIELDS("Balance (LCY)");

        IF LoanApplications."Oustanding Balance" > 0 THEN BEGIN
          Gnljnline.INIT;
          Gnljnline."Journal Template Name":='PURCHASES';
          Gnljnline."Journal Batch Name":='SpotCash';

          Gnljnline5.RESET;
          Gnljnline5.SETRANGE("Journal Template Name",'PURCHASES');
          Gnljnline5.SETRANGE("Journal Batch Name",'SpotCash');
          IF Gnljnline5.FIND('+') THEN BEGIN
           Gnljnline."Line No.":=Gnljnline5."Line No."+1000;
          END;

          Gnljnline."Account Type":=Gnljnline."Account Type"::"G/L Account";
          Gnljnline."Account No.":=LoanProductTypes."Loan Interest Account";
          Gnljnline."Transaction Type":=Gnljnline."Transaction Type"::"Interest Paid";
          Gnljnline.VALIDATE(Gnljnline."Account No.");
          Gnljnline."Document No.":=request_id;
          Gnljnline."Posting Date":=TODAY;
          Gnljnline."Shortcut Dimension 1 Code":=LoanApplications."Global Dimension 1 Code";
          Gnljnline.Description:='Interest Paid';
          Gnljnline.VALIDATE(Gnljnline."Shortcut Dimension 1 Code");
              VendorLedgerEntry.RESET;
              VendorLedgerEntry.SETCURRENTKEY("Posting Date");
              VendorLedgerEntry.SETRANGE("Vendor No.",LoanApplications."Loan  No.");
              VendorLedgerEntry.SETRANGE("Transaction Type",VendorLedgerEntry."Transaction Type"::"Interest Due");
              IF VendorLedgerEntry.FINDLAST THEN BEGIN
                VendorLedgerEntry.CALCFIELDS(Amount);
                Inte:=ABS(VendorLedgerEntry.Amount);
                VendorLedgerEntry2.RESET;
                VendorLedgerEntry2.SETCURRENTKEY("Posting Date");
                VendorLedgerEntry2.SETRANGE("Vendor No.",LoanApplications."Loan  No.");
                VendorLedgerEntry2.SETRANGE("Transaction Type",VendorLedgerEntry2."Transaction Type"::"Interest Paid");
                IF VendorLedgerEntry2.FINDLAST THEN BEGIN
                 VendorLedgerEntry2.CALCFIELDS(Amount);
                 Inte:=Inte-ABS(VendorLedgerEntry2.Amount);
                END;
              END;

          IF Inte<RemainingAmount THEN BEGIN
          Gnljnline.Amount:=Inte;
          END ELSE BEGIN
          IF RemainingAmount>0 THEN BEGIN
           Gnljnline.Amount:=RemainingAmount;
          END ELSE BEGIN
          Gnljnline.Amount:=0;
          END;
          END;
          ActualInterest:=Gnljnline.Amount;
          RemainingAmount:=RemainingAmount-Gnljnline.Amount;
          Gnljnline.Amount:=-1*Gnljnline.Amount;
          Gnljnline.VALIDATE(Gnljnline.Amount);
          Gnljnline."Bal. Account Type":=Gnljnline."Bal. Account Type"::"G/L Account";
          Gnljnline."Bal. Account No.":=LoanProductTypes."Receivable Interest Account";
          Gnljnline.VALIDATE(Gnljnline."Bal. Account No.");
          Gnljnline."Loan No":=LoanApplications."Loan  No.";
          Gnljnline.VALIDATE("Shortcut Dimension 1 Code",Dimensioncode);

          IF Gnljnline.Amount<>0 THEN
          Gnljnline.INSERT;


      //recover interest
          Gnljnline.INIT;
          Gnljnline."Journal Template Name":='PURCHASES';
          Gnljnline."Journal Batch Name":='SpotCash';
          Gnljnline5.RESET;
          Gnljnline5.SETRANGE("Journal Template Name",'PURCHASES');
          Gnljnline5.SETRANGE("Journal Batch Name",'SpotCash');
          IF Gnljnline5.FIND('+') THEN BEGIN
           Gnljnline."Line No.":=Gnljnline5."Line No."+1000;
          END;
          Gnljnline."Account Type":=Gnljnline."Account Type"::Vendor;
          Gnljnline."Account No.":=LoanApplications."Loan  No.";
          Gnljnline."Transaction Type":=Gnljnline."Transaction Type"::"Interest Paid";
          Gnljnline.VALIDATE(Gnljnline."Account No.");
          Gnljnline."Document No.":=request_id;
          Gnljnline."Posting Date":=TODAY;
          Gnljnline."Shortcut Dimension 1 Code":=LoanApplications."Global Dimension 1 Code";
          Gnljnline.VALIDATE(Gnljnline."Shortcut Dimension 1 Code");
          Gnljnline.Description:='Interest Paid';
          Gnljnline.Amount:=-1*ActualInterest;
          Gnljnline.VALIDATE(Gnljnline.Amount);
          Gnljnline."Loan No":=LoanApplications."Loan  No.";
          Gnljnline."Bal. Account Type":=Gnljnline."Bal. Account Type"::"G/L Account";
          GeneralSetup.GET;
          Gnljnline."Bal. Account No.":=GeneralSetup."SpotCash Control Account";
          Gnljnline.VALIDATE(Gnljnline."Bal. Account No.");
          Gnljnline.VALIDATE("Shortcut Dimension 1 Code",Dimensioncode);
          IF Gnljnline.Amount<>0 THEN
          Gnljnline.INSERT;


      //recover Principal
          Gnljnline2.INIT;
          Gnljnline2."Journal Template Name":='PURCHASES';
          Gnljnline2."Journal Batch Name":='SpotCash';
          Gnljnline5.RESET;
          Gnljnline5.SETRANGE("Journal Template Name",'PURCHASES');
          Gnljnline5.SETRANGE("Journal Batch Name",'SpotCash');
          IF Gnljnline5.FIND('+') THEN BEGIN
           Gnljnline2."Line No.":=Gnljnline5."Line No."+1000;
          END;
          Gnljnline2."Account Type":=Gnljnline2."Account Type"::Vendor;
          Gnljnline2."Account No.":=LoanApplications."Loan  No.";
          Gnljnline2."Transaction Type":=Gnljnline2."Transaction Type"::Repayment;
          Gnljnline2.VALIDATE(Gnljnline2."Account No.");
          Gnljnline2."Document No.":=request_id;
          Gnljnline2."Posting Date":=TODAY;
          Gnljnline2."Shortcut Dimension 1 Code":=LoanApplications."Global Dimension 1 Code";
          Gnljnline2.VALIDATE(Gnljnline2."Shortcut Dimension 1 Code");
          Gnljnline2.Description:='Principal Paid';
          Principal:=LoanApplications."Approved Amount"/LoanApplications.Installments;

          IF Principal<RemainingAmount THEN BEGIN
          Gnljnline2.Amount:=Principal;
          END ELSE BEGIN
          IF RemainingAmount>0 THEN BEGIN
           Gnljnline2.Amount:=RemainingAmount;
          END ELSE BEGIN
          Gnljnline2.Amount:=0;
          END;
          END;
          //ActualPrincipal:=Gnljnline2.Amount;
          RemainingAmount:=RemainingAmount-Gnljnline2.Amount;

          Gnljnline2.Amount:=-1*Gnljnline2.Amount;
          Gnljnline2.VALIDATE(Gnljnline2.Amount);
          Gnljnline2."Loan No":=LoanApplications."Loan  No.";
          Gnljnline2."Bal. Account Type":=Gnljnline2."Bal. Account Type"::"G/L Account";
          GeneralSetup.GET;
          Gnljnline2."Bal. Account No.":=GeneralSetup."SpotCash Control Account";
          Gnljnline2.VALIDATE(Gnljnline2."Bal. Account No.");
          Gnljnline2.VALIDATE("Shortcut Dimension 1 Code",Dimensioncode);
          IF Gnljnline2.Amount<>0 THEN
          Gnljnline2.INSERT;

          //POST TRANSACTIONS
            GenJournalLine.RESET;
            GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
            GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
            IF GenJournalLine.FIND('-') THEN BEGIN
             CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post",GenJournalLine);
             balanc:=balanc*-1;
            balance:=FORMAT(balanc);
            response:='00';
            "response message":='success';
            //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='00';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
            END;
            //CalcAvailableBalance(Account."No.");
             END ELSE BEGIN
            balanc:=0;
            response:='22';
            "response message":='E-Loan not Found';
            //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='22';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
           END;
          END;
         END;
        END;
       END;






















      //Request Loan Status
        IF transaction_type=11 THEN BEGIN
        SPotcashMembers.RESET;
        SPotcashMembers.SETRANGE("Phone No",phone_no);
        IF SPotcashMembers.FIND('-') THEN BEGIN

          Account.GET(SPotcashMembers."Account No");
          Member.GET(Account."Owner Member No");
          SCaccounts.RESET;
          SCaccounts.SETRANGE("Owner Member No",Account."Owner Member No");
          SCaccounts.SETRANGE("Account Type",'LOAN');
          IF SCaccounts.FINDSET THEN BEGIN
          REPEAT
          SCaccounts.CALCFIELDS("Balance (LCY)");
          balanc:=balanc+SCaccounts."Balance (LCY)";
          message:=FORMAT(SCaccounts.Status);
          UNTIL SCaccounts.NEXT=0;
          END;
          GenJournalLine.RESET;
          GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
          GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
          GenJournalLine.DELETEALL;

          IF DefaultBatch.GET('PURCHASES','SpotCash') THEN
          DefaultBatch.DELETE;

          //POSTING MAIN TRANSACTION

          DefaultBatch.INIT;
          DefaultBatch."Journal Template Name":='PURCHASES';
          DefaultBatch.Name:='SpotCash';
          DefaultBatch.INSERT;

              GenJournalLine2.INIT;
              GenJournalLine2."Journal Template Name":='PURCHASES';
              GenJournalLine2."Journal Batch Name":='SpotCash';
              GenJournalLine2."Document No.":=request_id;
              GenJournalLine5.RESET;
              GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
              GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
              IF GenJournalLine5.FIND('+') THEN BEGIN
              GenJournalLine2."Line No.":=GenJournalLine5."Line No."+10000;
              END;
              //GenJournalLine."Line No.":=LineNo;

              GenJournalLine2."Posting Date":=TODAY;
              GenJournalLine2.Description:=FORMAT(phone_no)+'-SpotCash Enquiry Charges';

              GenJournalLine2."Account Type":=GenJournalLine2."Account Type"::Vendor;
              GenJournalLine2."Account No.":=Account."No.";
              AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine2."Shortcut Dimension 1 Code":=AccountHolders."Global Dimension 1 Code";
                GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 1 Code");
                GenJournalLine2."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 2 Code");
                END;
              TransactionTypes.RESET;
              TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
              IF TransactionTypes.FIND('-') THEN BEGIN
                TransactionCharges.RESET;
                TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
                IF TransactionCharges.FIND('-') THEN BEGIN
                 // GenJournalLine2."Account No.":=TransactionCharges."GL Account";
                  GenJournalLine2.Amount:=(TransactionCharges."Charge Amount"+TransactionCharges."Settlement Amount"+(TransactionCharges."Excise %"/100)*TransactionCharges."Charge Amount");
                  GenJournalLine2.Amount:=GenJournalLine2.Amount;
                END;
                GenJournalLine2.VALIDATE(GenJournalLine2.Amount);
              END;
            //END;

              GenJournalLine2.VALIDATE(GenJournalLine2.Amount);
             // GenJournalLine2."Bal. Account Type":=GenJournalLine2."Bal. Account Type"::"G/L Account";
              //GenJournalLine2."Bal. Account No.":=scharges."GL Account";
              GenJournalLine2.VALIDATE("Shortcut Dimension 1 Code",Dimensioncode);
              IF GenJournalLine2.Amount<>0 THEN
                GenJournalLine2.INSERT;
              END;

            //post sacco charge
            GenJournalLine.RESET;
            GenJournalLine.INIT;
            GenJournalLine."Journal Template Name":='PURCHASES';
            GenJournalLine."Journal Batch Name":='SpotCash';
            GenJournalLine."Document No.":=request_id;
            GenJournalLine5.RESET;
            GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
            GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
            IF GenJournalLine5.FIND('+') THEN BEGIN
            GenJournalLine."Line No.":=GenJournalLine5."Line No."+10000;
            END;
            //GenJournalLine."Line No.":=LineNo;
            GenJournalLine."Posting Date":=TODAY;
            GenJournalLine.Description:=FORMAT(phone_no)+'-SpotCash Enquiry Charges';
            GenJournalLine."Account Type":=GenJournalLine."Account Type"::"G/L Account";
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine."Shortcut Dimension 1 Code":=AccountHolders."Global Dimension 1 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 1 Code");
                GenJournalLine."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 2 Code");
                END;
            TransactionTypes.RESET;
            TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
            IF TransactionTypes.FIND('-') THEN BEGIN
              TransactionCharges.RESET;
              TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
              IF TransactionCharges.FIND('-') THEN BEGIN

                GenJournalLine."Account No.":=TransactionCharges."GL Account";
                GenJournalLine.Amount:=-TransactionCharges."Charge Amount";
                GenJournalLine.VALIDATE(GenJournalLine.Amount);
              END;
            END;
            GenJournalLine.VALIDATE("Shortcut Dimension 1 Code",Dimensioncode);
            IF GenJournalLine.Amount<>0 THEN
            GenJournalLine.INSERT;



            //post execize duty charge


                GenJournalLine1.RESET;
                GenJournalLine1.INIT;
                GenJournalLine1."Journal Template Name":='PURCHASES';
                GenJournalLine1."Journal Batch Name":='SpotCash';
                GenJournalLine1."Document No.":=request_id;
                GenJournalLine5.RESET;
                GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
                GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
                IF GenJournalLine5.FIND('+') THEN BEGIN
                GenJournalLine1."Line No.":=GenJournalLine5."Line No."+10000;
                END;
                //GenJournalLine."Line No.":=LineNo;
                GenJournalLine1."Posting Date":=TODAY;
                GenJournalLine1.Description:=FORMAT(phone_no)+'-SpotCash Enquiry Charges';
                GenJournalLine1."Account Type":=GenJournalLine1."Account Type"::"G/L Account";
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Account."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine1."Shortcut Dimension 1 Code":=AccountHolders."Global Dimension 1 Code";
                GenJournalLine1.VALIDATE(GenJournalLine1."Shortcut Dimension 1 Code");
                GenJournalLine1."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine1.VALIDATE(GenJournalLine1."Shortcut Dimension 2 Code");
                END;
                TransactionTypes.RESET;
                TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotcashBalanceEnquiery);
                IF TransactionTypes.FIND('-') THEN BEGIN
                TransactionCharges.RESET;
                TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
                IF TransactionCharges.FIND('-') THEN BEGIN

                  GenJournalLine1."Account No.":=TransactionCharges."Excise G/L Account";
                  GenJournalLine1.Amount:=(TransactionCharges."Excise %"/100)*TransactionCharges."Charge Amount";
                  GenJournalLine1.Amount:=-1*GenJournalLine1.Amount;
                  GenJournalLine1.VALIDATE(GenJournalLine1.Amount);
                END;
                END;
                GenJournalLine1.VALIDATE("Shortcut Dimension 1 Code",Dimensioncode);
                IF GenJournalLine1.Amount<>0 THEN
                GenJournalLine1.INSERT;

              //POST TRANSACTIONS
              GenJournalLine.RESET;
              GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
              GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
              CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post",GenJournalLine);
              CalcAvailableBalance(Account."No.");
              balance:=FORMAT(AvailableBalance);
             response:='00';
             "response message":='success';
             //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='00';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================

         END;

      {
      //Request Loan Status
      IF transaction_type=11 THEN BEGIN
        Bal:=0;
        MemberAcc.RESET;
        MemberAcc.SETRANGE("Owner Member No",Account."Owner Member No");
        MemberAcc.SETRANGE("Account Type",'LOAN');
        IF MemberAcc.FINDSET THEN BEGIN

         REPEAT
            MemberAcc.CALCFIELDS("Balance (LCY)");
            balanc:=balanc+MemberAcc."Balance (LCY)";
          UNTIL MemberAcc.NEXT=0;
           GenJournalLine.RESET;
          GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
          GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
          GenJournalLine.DELETEALL;

          IF DefaultBatch.GET('PURCHASES','SpotCash') THEN
          DefaultBatch.DELETE;

          //POSTING MAIN TRANSACTION

          DefaultBatch.INIT;
          DefaultBatch."Journal Template Name":='PURCHASES';
          DefaultBatch.Name:='SpotCash';
          DefaultBatch.INSERT;

              GenJournalLine2.INIT;
              GenJournalLine2."Journal Template Name":='PURCHASES';
              GenJournalLine2."Journal Batch Name":='SpotCash';
              GenJournalLine2."Document No.":=request_id;
              GenJournalLine5.RESET;
              GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
              GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
              IF GenJournalLine5.FIND('+') THEN BEGIN
              GenJournalLine2."Line No.":=GenJournalLine5."Line No."+10000;
              END;
              //GenJournalLine."Line No.":=LineNo;

              GenJournalLine2."Posting Date":=TODAY;
              GenJournalLine2.Description:=FORMAT(phone_no)+'-SpotCash Enquiry Charges';

              GenJournalLine2."Account Type":=GenJournalLine2."Account Type"::Vendor;
              GenJournalLine2."Account No.":=Account."No.";
              GenJournalLine2."Shortcut Dimension 1 Code":=Account."Global Dimension 1 Code";
              GenJournalLine2.VALIDATE(GenJournalLine2."Shortcut Dimension 1 Code");
              TransactionTypes.RESET;
              TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotEnq);
              IF TransactionTypes.FIND('-') THEN BEGIN
                TransactionCharges.RESET;
                TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
                IF TransactionCharges.FIND('-') THEN BEGIN
                 // GenJournalLine2."Account No.":=TransactionCharges."GL Account";
                  GenJournalLine2.Amount:=(TransactionCharges."Charge Amount"+TransactionCharges."Settlement Amount");
                  GenJournalLine2.Amount:=GenJournalLine2.Amount;
                END;
                GenJournalLine2.VALIDATE(GenJournalLine2.Amount);
              END;
            //END;

              GenJournalLine2.VALIDATE(GenJournalLine2.Amount);
             // GenJournalLine2."Bal. Account Type":=GenJournalLine2."Bal. Account Type"::"G/L Account";
              //GenJournalLine2."Bal. Account No.":=scharges."GL Account";
              IF GenJournalLine2.Amount<>0 THEN
                GenJournalLine2.INSERT;
              END;

            //post sacco charge
            GenJournalLine.RESET;
            GenJournalLine.INIT;
            GenJournalLine."Journal Template Name":='PURCHASES';
            GenJournalLine."Journal Batch Name":='SpotCash';
            GenJournalLine."Document No.":=request_id;
            GenJournalLine5.RESET;
            GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
            GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
            IF GenJournalLine5.FIND('+') THEN BEGIN
            GenJournalLine."Line No.":=GenJournalLine5."Line No."+10000;
            END;
            //GenJournalLine."Line No.":=LineNo;
            GenJournalLine."Posting Date":=TODAY;
            GenJournalLine.Description:=FORMAT(phone_no)+'-SpotCash Enquiry Charges';
            GenJournalLine."Account Type":=GenJournalLine."Account Type"::"G/L Account";
            GenJournalLine."Shortcut Dimension 1 Code":=Members."Global Dimension 1 Code";
            GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 1 Code");
            TransactionTypes.RESET;
            TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotEnq);
            IF TransactionTypes.FIND('-') THEN BEGIN
              TransactionCharges.RESET;
              TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
              IF TransactionCharges.FIND('-') THEN BEGIN

                GenJournalLine."Account No.":=TransactionCharges."GL Account";
                GenJournalLine.Amount:=-TransactionCharges."Charge Amount";
                GenJournalLine.VALIDATE(GenJournalLine.Amount);
              END;
            END;
            IF GenJournalLine.Amount<>0 THEN
            GenJournalLine.INSERT;



            //post settlement charge


                GenJournalLine1.RESET;
                GenJournalLine1.INIT;
                GenJournalLine1."Journal Template Name":='PURCHASES';
                GenJournalLine1."Journal Batch Name":='SpotCash';
                GenJournalLine1."Document No.":=request_id;
                GenJournalLine5.RESET;
                GenJournalLine5.SETRANGE("Journal Template Name",'PURCHASES');
                GenJournalLine5.SETRANGE("Journal Batch Name",'SpotCash');
                IF GenJournalLine5.FIND('+') THEN BEGIN
                GenJournalLine1."Line No.":=GenJournalLine5."Line No."+10000;
                END;
                //GenJournalLine."Line No.":=LineNo;
                GenJournalLine1."Posting Date":=TODAY;
                GenJournalLine1.Description:=FORMAT(phone_no)+'-SpotCash Enquiry Charges';
                GenJournalLine1."Account Type":=GenJournalLine1."Account Type"::"G/L Account";
                GenJournalLine1."Shortcut Dimension 1 Code":=Members."Global Dimension 1 Code";
                GenJournalLine1.VALIDATE(GenJournalLine1."Shortcut Dimension 1 Code");
                TransactionTypes.RESET;
                TransactionTypes.SETRANGE(Type,TransactionTypes.Type::SpotEnq);
                IF TransactionTypes.FIND('-') THEN BEGIN
                TransactionCharges.RESET;
                TransactionCharges.SETRANGE("Transaction Type",TransactionTypes.Code);
                IF TransactionCharges.FIND('-') THEN BEGIN

                  GenJournalLine1."Account No.":=TransactionCharges."Settlement GL Account";
                  GenJournalLine1.Amount:=-TransactionCharges."Settlement Amount";
                  GenJournalLine1.VALIDATE(GenJournalLine1.Amount);
                END;
                END;
                IF GenJournalLine1.Amount<>0 THEN
                GenJournalLine1.INSERT;

              //POST TRANSACTIONS
              GenJournalLine.RESET;
              GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
              GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
              CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post",GenJournalLine);
              //balanc:=balanc*-1;
            //balance:=FORMAT(balanc);
            message:=FORMAT(MemberAcc.Status);
            status:='1';
            response:='00';
            "response message":='success';
        END ELSE BEGIN
          status:='1';
          response:='03';
          "response message":='Account not found';
          EXIT;
        END;
       //END;
       }














      // Stop ATM Request
       IF transaction_type=14 THEN BEGIN
         ATMRegister.RESET;
         ATMRegister.SETRANGE("Account No",Account."No.");
         IF ATMRegister.FIND('-') THEN BEGIN
           ATMRegister."Card Status":=ATMRegister."Card Status"::Frozen;
           ATMRegister.MODIFY;
         END ELSE BEGIN
           response:='03';
           "response message":='Account not found';
           status:='1';
               //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='03';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
         END;
       END;

      // Request Transfer
       IF transaction_type=15 THEN BEGIN
              CalcAvailableBalance(Account."No.");
              GeneralSetup.GET;
              balance:=FORMAT(AvailableBalance);
              IF balance<amount THEN BEGIN
                balance:=FORMAT(AvailableBalance);
                response:='01';
                "response message":='insufficient funds';
                //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='03';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
                EXIT;
              END;
              //post transfer
              // DELETE ANY LINE ITEM THAT MAY BE PRESENT
                GenJournalLine.RESET;
                GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
                GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
                GenJournalLine.DELETEALL;

                IF DefaultBatch.GET('PURCHASES','SpotCash') THEN
                DefaultBatch.DELETE;

                //POSTING MAIN TRANSACTION

                DefaultBatch.INIT;
                DefaultBatch."Journal Template Name":='PURCHASES';
                DefaultBatch.Name:='SpotCash';
                DefaultBatch.INSERT;

                GenJournalLine.INIT;
                GenJournalLine."Journal Template Name":='PURCHASES';
                GenJournalLine."Journal Batch Name":='SpotCash';
                GenJournalLine."Document No.":=request_id;
                GenJournalLine."External Document No.":=request_id;
                GenJournalLine."Line No.":=10000;
                GenJournalLine."Account Type":=GenJournalLine."Account Type"::Vendor;
                GenJournalLine."Account No.":=Account."No.";
                GenJournalLine.VALIDATE(GenJournalLine."Account No.");
                GenJournalLine."Posting Date":=TODAY;

                ///////////////
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Members."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine."Shortcut Dimension 1 Code":=AccountHolders."Global Dimension 1 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 1 Code");
                GenJournalLine."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 2 Code");
                END;
                GenJournalLine.Description:=FORMAT(phone_no)+'-Spotcash Funds Transfer';
                //GenJournalLine."Currency Code":="Currency Code";
                GenJournalLine.VALIDATE(GenJournalLine."Currency Code");

                EVALUATE(GenJournalLine.Amount,amount);


                GenJournalLine.VALIDATE(GenJournalLine.Amount);

                GenJournalLine."Bal. Account Type":=GenJournalLine."Bal. Account Type"::Vendor;
                GenJournalLine."Bal. Account No.":=cr_account;
                GenJournalLine.VALIDATE(GenJournalLine."Bal. Account No.");
                GenJournalLine.VALIDATE("Shortcut Dimension 1 Code",Dimensioncode);
                IF GenJournalLine.Amount<>0 THEN
                  GenJournalLine.INSERT;
                //END;


              //POST TRANSACTIONS
              GenJournalLine.RESET;
              GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
              GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
              CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post",GenJournalLine);
              CalcAvailableBalance(Account."No.");
              balance:=FORMAT(AvailableBalance);
              status:='1';
              response:='00';
              "response message":='success';
              //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='00';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
            END;














      // Share contribution
      IF transaction_type=7 THEN BEGIN
        MemberAcc.RESET;
        MemberAcc.SETRANGE("Owner Member No",Account."Owner Member No");
        //MemberAcc.SETRANGE("Account Type",cr_account);
        MemberAcc.SETRANGE("Account Type",'901');
        IF MemberAcc.FIND('-') THEN BEGIN
            // DELETE ANY LINE ITEM THAT MAY BE PRESENT
                GenJournalLine.RESET;
                GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
                GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",Account."Owner Member No");
                GenJournalLine.DELETEALL;

                IF DefaultBatch.GET('PURCHASES',Account."Owner Member No") THEN
                DefaultBatch.DELETE;

                //POSTING MAIN TRANSACTION

                DefaultBatch.INIT;
                DefaultBatch."Journal Template Name":='PURCHASES';
                DefaultBatch.Name:=Account."Owner Member No";
                DefaultBatch.INSERT;

                GenJournalLine.INIT;
                GenJournalLine."Journal Template Name":='PURCHASES';
                GenJournalLine."Journal Batch Name":=Account."Owner Member No";
                GenJournalLine."Document No.":=request_id;
                GenJournalLine."External Document No.":=request_id;
                GenJournalLine."Line No.":=10000;
                GenJournalLine."Account Type":=GenJournalLine."Account Type"::Vendor;
                GenJournalLine."Account No.":=MemberAcc."No.";
                GenJournalLine.VALIDATE(GenJournalLine."Account No.");
                GenJournalLine."Posting Date":=TODAY;

                ///////////////
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Members."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine."Shortcut Dimension 1 Code":=AccountHolders."Global Dimension 1 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 1 Code");
                GenJournalLine."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 2 Code");
                END;
                GenJournalLine.Description:=FORMAT(phone_no)+'-Spotcash Share contribution';
                //GenJournalLine."Currency Code":="Currency Code";
                GenJournalLine.VALIDATE(GenJournalLine."Currency Code");

                EVALUATE(GenJournalLine.Amount,amount);
                GenJournalLine.Amount:=-1*GenJournalLine.Amount;

                GenJournalLine.VALIDATE(GenJournalLine.Amount);

                GenJournalLine."Bal. Account Type":=GenJournalLine."Bal. Account Type"::"G/L Account";
                GeneralSetup.GET;
                GenJournalLine."Bal. Account No.":=GeneralSetup."SpotCash Control Account";
                //===============================Paybill Bank========================================
                                 GenJournalLine."Bal. Account Type":=GenJournalLine1."Bal. Account Type"::"Bank Account";
                                 Bankzetu.RESET;
                                 Bankzetu.SETRANGE("Paybill Bank",TRUE);
                                 IF NOT Bankzetu.FINDSET THEN BEGIN
                                     response:='01';
                                     "response message":='Please setup Bank that is linked to Paybill';
                                     //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:='01';
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
                                     EXIT;
                                 END;
                                 Bankzetu.RESET;
                                 Bankzetu.SETRANGE("Paybill Bank",TRUE);
                                 IF Bankzetu.FINDSET THEN BEGIN
                                     GenJournalLine."Bal. Account No.":=Bankzetu."No.";
                                 END;
                //===============================End Paybill Bank====================================
                GenJournalLine.VALIDATE(GenJournalLine."Bal. Account No.");
                GenJournalLine.VALIDATE(GenJournalLine."Bal. Account No.");
                GenJournalLine.VALIDATE("Shortcut Dimension 1 Code",Dimensioncode);
                IF GenJournalLine.Amount<>0 THEN
                  GenJournalLine.INSERT;
                  //POST TRANSACTIONS
                  GenJournalLine.RESET;
                  GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
                  GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",Account."Owner Member No");
                  CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post",GenJournalLine);
                  CalcAvailableBalance(Account."No.");
                  balance:=FORMAT(AvailableBalance);
                  status:='1';
                  response:='00';
                  "response message":='success';
                  //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:=response;
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
                 END;
                END;


















      // Loan Repayment
      IF transaction_type=6 THEN BEGIN
        LoanProductTypes.RESET;
        LoanProductTypes.SETRANGE("spotcash Code",cr_account);
        IF LoanProductTypes.FIND('-') THEN BEGIN
         apploanproduct:=LoanProductTypes.Code;
        END;
        MemberAcc.RESET;
        MemberAcc.CALCFIELDS("Balance (LCY)");
        MAccounts.SETFILTER("Balance (LCY)",'<>%1',0);
        MemberAcc.SETRANGE("Owner Member No",Account."Owner Member No");
        MemberAcc.SETRANGE("Vendor Posting Group",apploanproduct);
       // MemberAcc.SETRANGE("Vendor Posting Group",cr_account);
        IF MemberAcc.FIND('-') THEN BEGIN
          // DELETE ANY LINE ITEM THAT MAY BE PRESENT
                GenJournalLine.RESET;
                GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
                GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
                GenJournalLine.DELETEALL;

                IF DefaultBatch.GET('PURCHASES','SpotCash') THEN
                DefaultBatch.DELETE;

                //POSTING MAIN TRANSACTION

                DefaultBatch.INIT;
                DefaultBatch."Journal Template Name":='PURCHASES';
                DefaultBatch.Name:='SpotCash';
                DefaultBatch.INSERT;

                GenJournalLine.INIT;
                GenJournalLine."Journal Template Name":='PURCHASES';
                GenJournalLine."Journal Batch Name":='SpotCash';
                GenJournalLine."Document No.":=request_id;
                GenJournalLine."External Document No.":=request_id;
                GenJournalLine."Line No.":=10000;
                GenJournalLine."Account Type":=GenJournalLine."Account Type"::Vendor;
                GenJournalLine."Account No.":=MemberAcc."No.";
                GenJournalLine.VALIDATE(GenJournalLine."Account No.");
                GenJournalLine."Posting Date":=TODAY;

                ///////////////
                AccountHolders.RESET;
                AccountHolders.SETRANGE(AccountHolders."No.",Members."No.");
                IF AccountHolders.FIND('-') THEN BEGIN
                GenJournalLine."Shortcut Dimension 1 Code":=AccountHolders."Global Dimension 1 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 1 Code");
                GenJournalLine."Shortcut Dimension 2 Code":=AccountHolders."Global Dimension 2 Code";
                GenJournalLine.VALIDATE(GenJournalLine."Shortcut Dimension 2 Code");
                END;
                GenJournalLine.Description:=FORMAT(phone_no)+'-Spotcash Loan Repayment';
                //GenJournalLine."Currency Code":="Currency Code";
                GenJournalLine.VALIDATE(GenJournalLine."Currency Code");

                EVALUATE(GenJournalLine.Amount,amount);
                GenJournalLine.Amount:=-1*GenJournalLine.Amount;

                GenJournalLine.VALIDATE(GenJournalLine.Amount);
                GenJournalLine."Transaction Type":=GenJournalLine."Transaction Type"::Repayment;
                GenJournalLine."Bal. Account Type":=GenJournalLine."Bal. Account Type"::"G/L Account";
                GeneralSetup.GET;
                GenJournalLine."Bal. Account No.":=GeneralSetup."SpotCash Control Account";
                GenJournalLine.VALIDATE(GenJournalLine."Bal. Account No.");
                GenJournalLine.VALIDATE("Shortcut Dimension 1 Code",Dimensioncode);
                IF GenJournalLine.Amount<>0 THEN
                  GenJournalLine.INSERT;
                  //POST TRANSACTIONS
                  GenJournalLine.RESET;
                  GenJournalLine.SETRANGE(GenJournalLine."Journal Template Name",'PURCHASES');
                  GenJournalLine.SETRANGE(GenJournalLine."Journal Batch Name",'SpotCash');
                  IF GenJournalLine.FIND('-') THEN BEGIN
                  CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post",GenJournalLine);
                  CalcAvailableBalance(Account."No.");
                  balance:=FORMAT(AvailableBalance);
                  status:='1';
                  response:='00';
                  "response message":='success';
                  //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:=response;
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
                  END;
        END ELSE BEGIN
          status:='1';
          response:='03';
          "response message":='Account not found';
          //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:=response;
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
          EXIT;
        END;
       //END;
      status:='1';
      response:='00';
      "response message":='success';
      //Insert Spotcash Entry Data==============================
                                      SpotCashEntries.INIT;
                                      SpotCashEntries."Request ID":=request_id;
                                      SpotCashEntries."Phone No":=phone_no;
                                      SpotCashEntries."Transaction Type":=transaction_type;
                                      SpotCashEntries."Transaction Time":=TIME;
                                      SpotCashEntries."Transaction Date":=TODAY;
                                      SpotCashEntries.Status:="response message";
                                      VendorBDBDBD.GET(cr_account);
                                      VendorBDBDBD.CALCFIELDS(Balance);
                                      balance:=FORMAT(VendorBDBDBD.Balance);
                                      EVALUATE(SpotCashEntries.Balance,balance);
                                      SpotCashEntries.Message:=response;
                                      IF amount<>''THEN BEGIN
                                       EVALUATE(SpotCashEntries.Amount,amount);
                                      END;
                                      IF charges<>''THEN BEGIN
                                         EVALUATE(SpotCashEntries.Charges,charges);
                                      END;
                                      SpotCashEntries."Account No":="account _number";
                                      SpotCashEntries."Cr Account No":=cr_account;
                                      SpotCashEntries.Status:=status;
                                      SpotCashEntries."F Key":=f_key;
                                      SpotCashEntries.INSERT;
                                      //End Insert Spotcas Entry Data===========================
      {END ELSE BEGIN
        status:=1;
        response:='03';
        "response message":='Account not found';}
      END;
       IF amount='' THEN
       amount:='0';
       IF charges='' THEN
       charges:='0';
       IF balance='' THEN
       balance:='0';



      END;







      //if there is an error respond with this====================================
      IF (response='') AND ("response message"='') THEN BEGIN
                                SpotCashEntries.INIT;
                                SpotCashEntries."Request ID":=request_id;
                                SpotCashEntries."Phone No":=phone_no;
                                SpotCashEntries."Transaction Type":=transaction_type;
                                SpotCashEntries."Transaction Time":=TIME;
                                SpotCashEntries."Transaction Date":=TODAY;
                                SpotCashEntries.Status:='01';
                                VendorBDBDBD.GET(cr_account);
                                VendorBDBDBD.CALCFIELDS(Balance);
                                balance:=FORMAT(VendorBDBDBD.Balance);
                                EVALUATE(SpotCashEntries.Balance,balance);
                                SpotCashEntries.Message:=COPYSTR('There is a problem with account '+"account _number"+' please contact system administrator',1,40);
                                IF amount<>''THEN BEGIN
                                 EVALUATE(SpotCashEntries.Amount,amount);
                                END;
                                IF charges<>''THEN BEGIN
                                   EVALUATE(SpotCashEntries.Charges,charges);
                                END;
                                SpotCashEntries."Account No":="account _number";
                                SpotCashEntries."Cr Account No":=cr_account;
                                SpotCashEntries.Status:=status;
                                SpotCashEntries."F Key":=f_key;
                                SpotCashEntries.INSERT;
                                response:='01';
                                "response message":=COPYSTR('There is a problem with account '+"account _number"+' please contact system administrator',1,40);
                                EXIT;
      END;
                                //End Insert Spotcas Entry Data===========================
      //end if there is an error respond with this================================
    END;

    PROCEDURE CalcAvailableBalance@1000000000(AccountNo@1000 : Code[50]);
    BEGIN
      Members.GET(AccountNo);
      ATMBalance:=0;


      TCharges:=0;
      AvailableBalance:=0;
      MinAccBal:=0;
      TotalUnprocessed:=0;
      Members.CALCFIELDS("Balance (LCY)");
      BookBalance:=Members."Balance (LCY)";
      AccountTypes.RESET;
      AccountTypes.SETRANGE(AccountTypes.Code,Members."Account Type");
      IF AccountTypes.FIND('-') THEN BEGIN
          MinAccBal:=AccountTypes."Minimum Balance.";
          FeeBelowMinBal:=AccountTypes."Fee Below Minimum Balance";
      END;
      //ERROR('%1',MinAccBal);
      //UNCLEARED CHEQUES
      TotalUnprocessed:=0;
      chqtransactions.RESET;
      chqtransactions.SETRANGE(chqtransactions."Account No",Members."No.");
      chqtransactions.SETRANGE(chqtransactions.Deposited,TRUE);
      chqtransactions.SETRANGE(chqtransactions."Cheque Processed",FALSE);
      chqtransactions.SETRANGE("Transaction Type",'CHEQUE DEPOSIT');
      IF chqtransactions.FIND('-') THEN BEGIN
            REPEAT
                TotalUnprocessed:=TotalUnprocessed+chqtransactions.Amount;
            UNTIL chqtransactions.NEXT=0;
      END;
      //ERROR('*%1',TotalUnprocessed);
      //ATM BALANCE
      AccountHolders.RESET;
      AccountHolders.SETRANGE(AccountHolders."No.",Members."No.");
      IF AccountHolders.FIND('-') THEN BEGIN
            AccountHolders.CALCFIELDS(AccountHolders."ATM Transactions");
            ATMBalance:=AccountHolders."ATM Transactions";
      END;





      AccountTypes.RESET;
      IF AccountTypes.GET(Members."Account Type") THEN BEGIN
      IF AccountTypes."Fixed Deposit"=FALSE THEN BEGIN
      IF Members."Balance (LCY)"<MinAccBal THEN BEGIN
            AvailableBalance:=Members."Balance (LCY)"-FeeBelowMinBal-TCharges-IntervalPenalty-MinAccBal-TotalUnprocessed-ATMBalance-Members."Frozen Amount";
      END
      ELSE BEGIN
      AvailableBalance:=Members."Balance (LCY)"-TCharges-IntervalPenalty-MinAccBal-TotalUnprocessed-ATMBalance-Members."Frozen Amount";
      END;
      END
      ELSE BEGIN
      //AvailableBalance:="Book Balance"-TCharges;
      AvailableBalance:=Members."Balance (LCY)"-TCharges-ChargesOnFD-Members."Frozen Amount";
      END;
      END;
    END;

    PROCEDURE Agentcommisions@2(VAR Agentid@1000 : Code[30];VAR PhoneNo@1001 : Code[30];VAR AccountNo@1002 : Code[100]);
    BEGIN
      //------------------Winnie----------------------
    END;

    PROCEDURE UpdateMPESADetails@3(VAR SpotCashID@1000 : Code[50];VAR MPESAID@1001 : Code[50];VAR Result@1006 : Integer);
    VAR
      SpotCashEntries@1002 : Record 50109;
      VendorLedgerEntry@1003 : Record 25;
      GLEntry@1004 : Record 17;
      DetailedVendorLedgEntry@1005 : Record 380;
    BEGIN
      SpotCashEntries.RESET;
      SpotCashEntries.SETRANGE("Request ID",SpotCashID);
      IF SpotCashEntries.FINDSET THEN BEGIN
         REPEAT
            SpotCashEntries."MPESA Ref":=MPESAID;
            SpotCashEntries.MODIFY;
            COMMIT;
         UNTIL SpotCashEntries.NEXT=0;
         Result:=0;
      END;
      IF NOT SpotCashEntries.FINDSET THEN BEGIN
         Result:=55;
         EXIT;
      END;

      IF MPESAID='' THEN BEGIN
         Result:=55;
         EXIT;
      END;


      GLEntry.RESET;
      GLEntry.SETRANGE("Document No.",SpotCashID);
      IF GLEntry.FINDSET THEN BEGIN
         REPEAT
            GLEntry."MPESA ID":=MPESAID;
            GLEntry."Document No.":=MPESAID;
            GLEntry.MODIFY;
            COMMIT;
         UNTIL GLEntry.NEXT=0;
      END;


      VendorLedgerEntry.RESET;
      VendorLedgerEntry.SETRANGE("Document No.",SpotCashID);
      IF VendorLedgerEntry.FINDSET THEN BEGIN
         REPEAT
            VendorLedgerEntry."MPESA ID":=MPESAID;
            VendorLedgerEntry."Document No.":=MPESAID;
            VendorLedgerEntry.MODIFY;
            COMMIT;
         UNTIL VendorLedgerEntry.NEXT=0;
      END;

      DetailedVendorLedgEntry.RESET;
      DetailedVendorLedgEntry.SETRANGE("Document No.",SpotCashID);
      IF DetailedVendorLedgEntry.FINDSET THEN BEGIN
         REPEAT
            DetailedVendorLedgEntry."MPESA ID":=MPESAID;
            DetailedVendorLedgEntry."Document No.":=MPESAID;
            DetailedVendorLedgEntry.MODIFY;
            COMMIT;
         UNTIL DetailedVendorLedgEntry.NEXT=0;
      END;

      BankAccountLedgerEntry.RESET;
      BankAccountLedgerEntry.SETRANGE("Document No.",SpotCashID);
      IF BankAccountLedgerEntry.FINDSET THEN BEGIN
         REPEAT
            BankAccountLedgerEntry."MPESA ID":=MPESAID;
            BankAccountLedgerEntry."Document No.":=MPESAID;
            BankAccountLedgerEntry.MODIFY;
            COMMIT;
         UNTIL BankAccountLedgerEntry.NEXT=0;
      END;

      SpotCashEntries.RESET;
      SpotCashEntries.SETRANGE("Request ID",SpotCashID);
      IF SpotCashEntries.FINDSET THEN BEGIN
         REPEAT
            SpotCashEntries."Journals Updated":=TRUE;
            SpotCashEntries.MODIFY;
            COMMIT;
         UNTIL SpotCashEntries.NEXT=0;
      END;
    END;

    PROCEDURE VirtualBankingMemberRegistration@13(VAR FirstName@1000 : Code[20];VAR MiddleName@1001 : Code[20];VAR LastName@1002 : Code[20];VAR IDNumber@1003 : Code[20];VAR DateOfBirth@1004 : Date;VAR Gender@1005 : Code[10];VAR Email@1006 : Code[20];VAR PhoneNumber@1007 : Code[20];VAR Success@1008 : Code[10]);
    BEGIN
      TempPhoneNo:=COPYSTR(PhoneNumber,1,2);
      IF TempPhoneNo='07' THEN
         FinalPhone:='254'+COPYSTR(PhoneNumber,2,20)
      ELSE
        FinalPhone:=PhoneNumber;
      //Replace 07 with 254
      PhoneNumber:=FinalPhone;





      //<<<<
      //Check if Number is already registered
      SpotCashRegistration.RESET;
      SpotCashRegistration.SETRANGE("Phone No",PhoneNumber);
      IF SpotCashRegistration.FINDFIRST THEN
        ERROR('The Phone Number %1 has already been used',PhoneNumber);



      //Check if ID Number is already used
      Customer.RESET;
      Customer.SETRANGE("Identification No.",IDNumber);
      IF Customer.FINDFIRST THEN
        ERROR('The ID Number %1 has already been used',IDNumber);

      Customer.RESET;
      Customer.SETRANGE("Mobile Phone No",PhoneNumber);
      IF Customer.FINDFIRST THEN
        ERROR('The Mobile Phone Number %1 has already been used',PhoneNumber);





      FOSASetup.GET;
      GeneralSetup.GET;
      TempMemberNo:=NoSeriesManagement.GetNextNo(FOSASetup."Member Nos",TODAY,TRUE);
      MemberNo:='001'+TempMemberNo;
      FullName:=FirstName+' '+MiddleName+' '+LastName;
      Customer.INIT;
      Customer."No.":=MemberNo;
      Customer.Name:=FullName;
      Customer."Search Name":=FullName;
      Customer."Mobile Phone No":=PhoneNumber;
      Customer."First Name":=FirstName;
      Customer."Middle Name":=MiddleName;
      Customer.Surname:=LastName;
      Customer."Member No":=MemberNo;
      EVALUATE(Customer.Gender,Gender);
      Customer."Identification No.":=IDNumber;
      Customer."Date Of Birth":=DateOfBirth;
      Customer.Status:=Customer.Status::"Not Approved";
      Customer."Member Category":='INDIVIDUALS';
      Customer."E-Mail":=Email;
      DimensionValueBD.RESET;
      DimensionValueBD.SETRANGE("Global Dimension No.",1);
      IF DimensionValueBD.FINDFIRST THEN BEGIN
         Customer."Global Dimension 1 Code":=DimensionValueBD.Code;
      END;
      Customer.FID:='SPOTCASH';
      Ok:=Customer.INSERT;

      //open Accounts;
      IF Ok THEN BEGIN
        Success:='00';
        AccountTypes.RESET;
        AccountTypes.SETRANGE("Open Automaticaly",TRUE);
        IF AccountTypes.FINDSET THEN BEGIN
          TempAcc:='';
          REPEAT
            IF AccountTypes."ATM/Spotcash use" THEN
              TempAcc:=MemberNo+AccountTypes.Code;
            IF NOT Vendor.GET(MemberNo+AccountTypes.Code) THEN BEGIN
              Vendor.INIT;
              Vendor."No.":=MemberNo+AccountTypes.Code;
              Vendor."Global Dimension 1 Code":=Customer."Global Dimension 1 Code";
              Vendor."Account Type":=AccountTypes.Code;
              Vendor."Vendor Posting Group":=AccountTypes.Code;
              Vendor.Name:=AccountTypes.Description;
              Vendor."Owner Member No":=MemberNo;
              Vendor."Owner Name":=FullName;
              Vendor."ATM/Spotcash use":=AccountTypes."ATM/Spotcash use";
              Vendor."Debtor Type":=Vendor."Debtor Type"::"FOSA Account";
              Vendor."Mobile Banking Allowed":=AccountTypes."Mobile Banking Allowed";
              Vendor."ID No":=IDNumber;
              Vendor."Phone No.":=PhoneNumber;
              Vendor."Salary Payout Allowed":=AccountTypes."Salary Payout Allowed";
              Vendor."Cash Deposit Allowed":=AccountTypes."Cash Deposit Allowed";
              Vendor."Cash Withdrawal Allowed":=FALSE;
              Vendor."Cash Transfer Allowed":=FALSE;
              Vendor."Cheque Deposit Allowed":=AccountTypes."Cheque Deposit Allowed";
              Vendor."ATM/Spotcash use":=AccountTypes."ATM/Spotcash use";
              Vendor."Mobile Banking Allowed":=AccountTypes."Mobile Banking Allowed";
              Vendor."Account Remarks":='Virtual Banking';
              Vendor.INSERT;
            END;
          UNTIL AccountTypes.NEXT = 0;
        END;
        SavingsAcc:=TempAcc;
        IF SavingsAcc='' THEN BEGIN
          SavingsAcc:=MemberNo+'01';
          IF NOT Vendor.GET(SavingsAcc) THEN BEGIN
            AccountTypes.GET('01');
            Vendor.INIT;
            Vendor."No.":=MemberNo+AccountTypes.Code;
            Vendor."Global Dimension 1 Code":=Customer."Global Dimension 1 Code";
            Vendor."Account Type":=AccountTypes.Code;
            Vendor."Vendor Posting Group":=AccountTypes.Code;
            Vendor.Name:=AccountTypes.Description;
            Vendor."Owner Member No":=MemberNo;
            Vendor."Owner Name":=FullName;
            Vendor."ATM/Spotcash use":=AccountTypes."ATM/Spotcash use";
            Vendor."Debtor Type":=Vendor."Debtor Type"::"FOSA Account";
            Vendor."Mobile Banking Allowed":=AccountTypes."Mobile Banking Allowed";
            Vendor."ID No":=IDNumber;
            Vendor."Phone No.":=PhoneNumber;
            Vendor."Salary Payout Allowed":=AccountTypes."Salary Payout Allowed";
            Vendor."Cash Deposit Allowed":=AccountTypes."Cash Deposit Allowed";
            Vendor."Cash Withdrawal Allowed":=FALSE;
            Vendor."Cash Transfer Allowed":=FALSE;
            Vendor."Cheque Deposit Allowed":=AccountTypes."Cheque Deposit Allowed";
            Vendor."ATM/Spotcash use":=AccountTypes."ATM/Spotcash use";
            Vendor."Mobile Banking Allowed":=AccountTypes."Mobile Banking Allowed";
            Vendor."Account Remarks":='Virtual Banking';
            Vendor.INSERT;
          END;
        END;

        {
        //register Spotcash
        IF NOT SpotCashRegistration.GET(PhoneNumber,SpotCashRegistration."Service Type"::"Mobile Banking",SavingsAcc) THEN BEGIN
          SpotCashRegistration.INIT;
          SpotCashRegistration."Account No":=SavingsAcc;
          SpotCashRegistration."Phone No":=PhoneNumber;
          SpotCashRegistration."ID Number":=IDNumber;
          SpotCashRegistration."Member Name":=FullName;
          SpotCashRegistration."Member Code":=MemberNo;
          SpotCashRegistration."Service Type":=SpotCashRegistration."Service Type"::"Mobile Banking";
          SpotCashRegistration."Date Registered":=TODAY;
          SpotCashRegistration."Global Dimension 1 Code":='001';
          SpotCashRegistration."SpotCash Status":=SpotCashRegistration."SpotCash Status"::Active;
          SpotCashRegistration.Alerts:=TRUE;
          SpotCashRegistration."Date Registered":=TODAY;
          SpotCashRegistration."Portal Status":=FALSE;
          SpotCashRegistration."Date Activated":=TODAY;
          SpotCashRegistration.INSERT;
          ReqID:=NoSeriesManagement.GetNextNo(GeneralSetup."Spotcash Nos.",TODAY,TRUE);
          SpotCashEntries.INIT;
          SpotCashEntries."Request ID":=ReqID;
          SpotCashEntries.Message:='Spotcash Registration by Virtual Banking';
          SpotCashEntries."Phone No":=PhoneNumber;
          SpotCashEntries."Transaction Type":=1;
          SpotCashEntries.Amount:=0;
          SpotCashEntries.Charges:=0;
          SpotCashEntries."Account No":='';
          SpotCashEntries."Cr Account No":='';
          SpotCashEntries.INSERT;
        END;
        }
      END;
    END;

    PROCEDURE VirtualBankingMemberRegistration2@18(VAR FirstName@1000 : Code[20];VAR MiddleName@1001 : Code[20];VAR LastName@1002 : Code[20];VAR IDNumber@1003 : Code[20];VAR DateOfBirth@1004 : Date;VAR Gender@1005 : Code[10];VAR Email@1006 : Code[20];VAR PhoneNumber@1007 : Code[20];VAR Success@1008 : Code[10]);
    BEGIN
      TempPhoneNo:=COPYSTR(PhoneNumber,1,2);
      IF TempPhoneNo='07' THEN
         FinalPhone:='254'+COPYSTR(PhoneNumber,2,20)
      ELSE
        FinalPhone:=PhoneNumber;
      //Replace 07 with 254
      PhoneNumber:=FinalPhone;





      //<<<<
      //Check if Number is already registered
      SpotCashRegistration.RESET;
      SpotCashRegistration.SETRANGE("Phone No",PhoneNumber);
      IF SpotCashRegistration.FINDFIRST THEN
        ERROR('The Phone Number %1 has already been used',PhoneNumber);



      //Check if ID Number is already used
      Customer.RESET;
      Customer.SETRANGE("Identification No.",IDNumber);
      IF Customer.FINDFIRST THEN
        ERROR('The ID Number %1 has already been used',IDNumber);

      Customer.RESET;
      Customer.SETRANGE("Mobile Phone No",PhoneNumber);
      IF Customer.FINDFIRST THEN
        ERROR('The Mobile Phone Number %1 has already been used',PhoneNumber);





      FOSASetup.GET;
      GeneralSetup.GET;
      TempMemberNo:=NoSeriesManagement.GetNextNo(FOSASetup."Member Nos",TODAY,TRUE);
      MemberNo:='001'+TempMemberNo;
      FullName:=FirstName+' '+MiddleName+' '+LastName;
      MemberApplications.INIT;
      MemberApplications."No.":=MemberNo;
      Customer.Name:=FullName;
      Customer."Search Name":=FullName;
      Customer."Mobile Phone No":=PhoneNumber;
      Customer."First Name":=FirstName;
      Customer."Middle Name":=MiddleName;
      Customer.Surname:=LastName;
      Customer."Member No":=MemberNo;
      EVALUATE(Customer.Gender,Gender);
      Customer."Identification No.":=IDNumber;
      Customer."Date Of Birth":=DateOfBirth;
      Customer.Status:=Customer.Status::"Not Approved";
      Customer."Member Category":='INDIVIDUALS';
      Customer."E-Mail":=Email;
      DimensionValueBD.RESET;
      DimensionValueBD.SETRANGE("Global Dimension No.",1);
      IF DimensionValueBD.FINDFIRST THEN BEGIN
         Customer."Global Dimension 1 Code":=DimensionValueBD.Code;
      END;
      Customer.FID:='SPOTCASH';
      Ok:=Customer.INSERT;

      //open Accounts;
      IF Ok THEN BEGIN
        Success:='00';
        AccountTypes.RESET;
        AccountTypes.SETRANGE("Open Automaticaly",TRUE);
        IF AccountTypes.FINDSET THEN BEGIN
          TempAcc:='';
          REPEAT
            IF AccountTypes."ATM/Spotcash use" THEN
              TempAcc:=MemberNo+AccountTypes.Code;
            IF NOT Vendor.GET(MemberNo+AccountTypes.Code) THEN BEGIN
              Vendor.INIT;
              Vendor."No.":=MemberNo+AccountTypes.Code;
              Vendor."Global Dimension 1 Code":=Customer."Global Dimension 1 Code";
              Vendor."Account Type":=AccountTypes.Code;
              Vendor."Vendor Posting Group":=AccountTypes.Code;
              Vendor.Name:=AccountTypes.Description;
              Vendor."Owner Member No":=MemberNo;
              Vendor."Owner Name":=FullName;
              Vendor."ATM/Spotcash use":=AccountTypes."ATM/Spotcash use";
              Vendor."Debtor Type":=Vendor."Debtor Type"::"FOSA Account";
              Vendor."Mobile Banking Allowed":=AccountTypes."Mobile Banking Allowed";
              Vendor."ID No":=IDNumber;
              Vendor."Phone No.":=PhoneNumber;
              Vendor."Salary Payout Allowed":=AccountTypes."Salary Payout Allowed";
              Vendor."Cash Deposit Allowed":=AccountTypes."Cash Deposit Allowed";
              Vendor."Cash Withdrawal Allowed":=FALSE;
              Vendor."Cash Transfer Allowed":=FALSE;
              Vendor."Cheque Deposit Allowed":=AccountTypes."Cheque Deposit Allowed";
              Vendor."ATM/Spotcash use":=AccountTypes."ATM/Spotcash use";
              Vendor."Mobile Banking Allowed":=AccountTypes."Mobile Banking Allowed";
              Vendor."Account Remarks":='Virtual Banking';
              Vendor.INSERT;
            END;
          UNTIL AccountTypes.NEXT = 0;
        END;
        SavingsAcc:=TempAcc;
        IF SavingsAcc='' THEN BEGIN
          SavingsAcc:=MemberNo+'01';
          IF NOT Vendor.GET(SavingsAcc) THEN BEGIN
            AccountTypes.GET('01');
            Vendor.INIT;
            Vendor."No.":=MemberNo+AccountTypes.Code;
            Vendor."Global Dimension 1 Code":=Customer."Global Dimension 1 Code";
            Vendor."Account Type":=AccountTypes.Code;
            Vendor."Vendor Posting Group":=AccountTypes.Code;
            Vendor.Name:=AccountTypes.Description;
            Vendor."Owner Member No":=MemberNo;
            Vendor."Owner Name":=FullName;
            Vendor."ATM/Spotcash use":=AccountTypes."ATM/Spotcash use";
            Vendor."Debtor Type":=Vendor."Debtor Type"::"FOSA Account";
            Vendor."Mobile Banking Allowed":=AccountTypes."Mobile Banking Allowed";
            Vendor."ID No":=IDNumber;
            Vendor."Phone No.":=PhoneNumber;
            Vendor."Salary Payout Allowed":=AccountTypes."Salary Payout Allowed";
            Vendor."Cash Deposit Allowed":=AccountTypes."Cash Deposit Allowed";
            Vendor."Cash Withdrawal Allowed":=FALSE;
            Vendor."Cash Transfer Allowed":=FALSE;
            Vendor."Cheque Deposit Allowed":=AccountTypes."Cheque Deposit Allowed";
            Vendor."ATM/Spotcash use":=AccountTypes."ATM/Spotcash use";
            Vendor."Mobile Banking Allowed":=AccountTypes."Mobile Banking Allowed";
            Vendor."Account Remarks":='Virtual Banking';
            Vendor.INSERT;
          END;
        END;

        {
        //register Spotcash
        IF NOT SpotCashRegistration.GET(PhoneNumber,SpotCashRegistration."Service Type"::"Mobile Banking",SavingsAcc) THEN BEGIN
          SpotCashRegistration.INIT;
          SpotCashRegistration."Account No":=SavingsAcc;
          SpotCashRegistration."Phone No":=PhoneNumber;
          SpotCashRegistration."ID Number":=IDNumber;
          SpotCashRegistration."Member Name":=FullName;
          SpotCashRegistration."Member Code":=MemberNo;
          SpotCashRegistration."Service Type":=SpotCashRegistration."Service Type"::"Mobile Banking";
          SpotCashRegistration."Date Registered":=TODAY;
          SpotCashRegistration."Global Dimension 1 Code":='001';
          SpotCashRegistration."SpotCash Status":=SpotCashRegistration."SpotCash Status"::Active;
          SpotCashRegistration.Alerts:=TRUE;
          SpotCashRegistration."Date Registered":=TODAY;
          SpotCashRegistration."Portal Status":=FALSE;
          SpotCashRegistration."Date Activated":=TODAY;
          SpotCashRegistration.INSERT;
          ReqID:=NoSeriesManagement.GetNextNo(GeneralSetup."Spotcash Nos.",TODAY,TRUE);
          SpotCashEntries.INIT;
          SpotCashEntries."Request ID":=ReqID;
          SpotCashEntries.Message:='Spotcash Registration by Virtual Banking';
          SpotCashEntries."Phone No":=PhoneNumber;
          SpotCashEntries."Transaction Type":=1;
          SpotCashEntries.Amount:=0;
          SpotCashEntries.Charges:=0;
          SpotCashEntries."Account No":='';
          SpotCashEntries."Cr Account No":='';
          SpotCashEntries.INSERT;
        END;
        }
      END;
    END;

    PROCEDURE InterAccountTranser@7(VAR RefID@1018 : Code[20];VAR PhoneNumber@1000 : Code[100];VAR ToAccount@1001 : Code[20];VAR Amount@1002 : Decimal;VAR ResponseCode@1003 : Code[20];VAR ResponseMessage@1005 : Text);
    VAR
      VendorIA@1004 : Record 23;
      TotalDeducted@1013 : Decimal;
      DocNo@1012 : Code[20];
      AccountTypes@1011 : Record 50046;
      Vendor@1010 : Record 23;
      Customer2@1009 : Record 18;
      AmountToFOSA@1008 : Decimal;
      AccountTypesSavings@1007 : Record 50046;
      VendorSavings@1006 : Record 23;
      SpotCashEntries@1014 : Record 50109;
      SpotCashRegistration@1015 : Record 50111;
      FromAccount@1016 : Code[20];
      VendorTo@1017 : Record 23;
      VendorFrom@1019 : Record 23;
    BEGIN
      SpotCashRegistration.RESET;
      SpotCashRegistration.SETRANGE("Phone No",PhoneNumber);
      IF NOT SpotCashRegistration.FINDSET THEN BEGIN
         ResponseCode:='01';
         ResponseMessage:='Phone Number is not linked to a FOSA Account!';
         EXIT;
      END;
      IF SpotCashRegistration.FINDSET THEN BEGIN
         FromAccount:=SpotCashRegistration."Account No";
      END;

      VendorIA.RESET;
      IF VendorIA.GET(FromAccount)=FALSE THEN BEGIN
         ResponseCode:='01';
         ResponseMessage:='Account Does not Exist!';
         EXIT;
      END;
      VendorIA.RESET;
      IF VendorIA.GET(ToAccount)=FALSE THEN BEGIN
         ResponseCode:='01';
         ResponseMessage:='Account Does not Exist!';
         EXIT;
      END;

      VendorTo.GET(ToAccount);
      VendorFrom.GET(FromAccount);

      //If the Destination Account is Not Loan=========================================
      AccountTypes.RESET;
      AccountTypes.SETRANGE(Code,VendorTo."Account Type");
      AccountTypes.SETRANGE(Loan,FALSE);
      IF AccountTypes.FINDSET  THEN BEGIN
                             //Cr To Account==============
                             //Dr From Account============
                             PostSalary.ClearLines;
                             Acctype:=Acctype::Vendor;
                             BalAccType:=BalAccType::Vendor;
                             Customer.RESET;
                             Customer.GET(VendorTo."Owner Member No");
                             branch:=Customer."Global Dimension 1 Code";
                             TransactionType2:=TransactionType2::" ";
                             DocNo:=COPYSTR(RefID,1,10);
                             PostSalary.GetDocNo(DocNo);
                             PostSalary.CreateJnlLine3(BalAccType,ToAccount,BalAccType,ToAccount,
                               COPYSTR('InterAccount Transfer '+FromAccount+'>'+ToAccount,1,40),ABS(Amount),TransactionType2,branch,0);


                             Acctype:=Acctype::Vendor;
                             BalAccType:=BalAccType::Vendor;
                             Customer.RESET;
                             Customer.GET(VendorFrom."Owner Member No");
                             branch:=Customer."Global Dimension 1 Code";
                             TransactionType2:=TransactionType2::" ";
                             DocNo:=COPYSTR(RefID,1,10);
                             PostSalary.GetDocNo(DocNo);
                             PostSalary.CreateJnlLine3(BalAccType,FromAccount,BalAccType,FromAccount,
                               COPYSTR('InterAccount Transfer '+FromAccount+'>'+ToAccount,1,40),-ABS(Amount),TransactionType2,branch,0);
                             PostSalary.PostLines;
      END;
      //End If the Destination Account is Not Loan=====================================


      //If the Destination Account is Loan=========================================
      AccountTypes.RESET;
      AccountTypes.SETRANGE(Code,VendorTo."Account Type");
      AccountTypes.SETRANGE(Loan,TRUE);
      IF AccountTypes.FINDSET  THEN BEGIN
                             //Cr To Account==============
                             //Dr From Account============
                                          Acctype:=Acctype::Vendor;
                                          BalAccType:=BalAccType::Vendor;
                                          TransactionType2:=TransactionType2::Repayment;
                                          DocNo:=RefID;
                                          PostSalary.GetDocNo(RefID);
                                          Customer.GET(VendorTo."Owner Member No");
                                          branch:=Customer."Global Dimension 1 Code";
                                          Amounttotransact:=0;
                                          Amounttotransact:=Amount;
                                          InsuranceDue:=0;
                                          IntDue:=0;
                                          InsuranceDue:=RebatesDistributions.GetInsuranceDue(ToAccount);
                                          IntDue:=RebatesDistributions.GetInterestDue(ToAccount);

                                          IF InsuranceDue>=Amounttotransact THEN BEGIN
                                             InsuranceDue:=Amounttotransact;
                                             Amounttotransact:=0;
                                          END;
                                          IF InsuranceDue<Amounttotransact THEN BEGIN
                                             InsuranceDue:=InsuranceDue;
                                             Amounttotransact:=Amounttotransact-InsuranceDue;
                                          END;
                                          IF IntDue>=Amounttotransact THEN BEGIN
                                             IntDue:=Amounttotransact;
                                             Amounttotransact:=0;
                                          END;
                                          IF IntDue<Amounttotransact THEN BEGIN
                                             IntDue:=IntDue;
                                             Amounttotransact:=Amounttotransact-IntDue;
                                          END;
                                          //ERROR('Ins: %1\Int: %2\Loan: %3',InsuranceDue,IntrestDue,Amounttotransact);
                                          PostSalary.ClearLines;
                                          IF InsuranceDue<>0 THEN BEGIN
                                              TransactionType2:=TransactionType2::"Ledger Fees";
                                              PostSalary.CreateJnlLine33(BalAccType,ToAccount,BalAccType,
                                                                        ToAccount, COPYSTR('Ins:-InterAccount Transfer '+FromAccount+'>'+ToAccount,1,40),
                                                                        InsuranceDue,TransactionType2,branch,0,SpotcashDepositsBuffer2."Destination owner");
                                          END;
                                          IF IntDue<>0 THEN BEGIN
                                              TransactionType2:=TransactionType2::"Interest Paid";
                                              PostSalary.CreateJnlLine33(BalAccType,ToAccount,BalAccType,
                                                                        ToAccount, COPYSTR('Int:-InterAccount Transfer '+FromAccount+'>'+ToAccount,1,40),
                                                                        IntDue,TransactionType2,branch,0,SpotcashDepositsBuffer2."Destination owner");
                                          END;
                                          IF Amounttotransact<>0 THEN BEGIN
                                              TransactionType2:=TransactionType2::Repayment;
                                              PostSalary.CreateJnlLine33(BalAccType,ToAccount,BalAccType,
                                                                        ToAccount, COPYSTR('Repayment:-InterAccount Transfer '+FromAccount+'>'+ToAccount,1,40),
                                                                        Amounttotransact,TransactionType2,branch,0,SpotcashDepositsBuffer2."Destination owner");
                                          END;

                                        Acctype:=Acctype::Vendor;
                                        BalAccType:=BalAccType::Vendor;
                                        Customer.RESET;
                                        Customer.GET(VendorFrom."Owner Member No");
                                        branch:=Customer."Global Dimension 1 Code";
                                        TransactionType2:=TransactionType2::" ";
                                        DocNo:=COPYSTR(RefID,1,10);
                                        PostSalary.GetDocNo(DocNo);
                                        PostSalary.CreateJnlLine3(BalAccType,FromAccount,BalAccType,FromAccount,
                                          COPYSTR('InterAccount Transfer '+FromAccount+'>'+ToAccount,1,40),-ABS(Amount),TransactionType2,branch,0);
                                        PostSalary.PostLines;
      END;
      //End If the Destination Account is Loan=====================================
      ResponseCode:='00';
      ResponseMessage:='InterAccount Transfer was successfull';
    END;

    BEGIN
    END.
  }
}

